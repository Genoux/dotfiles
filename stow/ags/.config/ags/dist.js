#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gLi-ags.js"

cat <<EOF | base64 --decode > $file
// ../../../../../../../usr/share/ags/js/src/gtk4/app.ts
import GLib from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Astal from "gi://Astal?version=4.0";

// ../../../../../../../usr/share/ags/js/src/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth: Bluetooth2, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth2.prototype, "adapters");
  patch(Bluetooth2.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland: Hyprland6, Monitor, Workspace }) => {
  patch(Hyprland6.prototype, "binds");
  patch(Hyprland6.prototype, "monitors");
  patch(Hyprland6.prototype, "workspaces");
  patch(Hyprland6.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris: Mpris3, Player }) => {
  patch(Mpris3.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd: Notifd2, Notification }) => {
  patch(Notifd2.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "endpoints");
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray: Tray2 }) => {
  patch(Tray2.prototype, "items");
});

// ../../../../../../../usr/share/ags/js/src/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../../../usr/share/ags/js/src/_app.ts
import IO from "gi://AstalIO";
import GObject from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main, client: client2, icons, ...cfg } = {}) {
      const app = this;
      client2 ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client2((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../../../../usr/share/ags/js/src/gtk4/app.ts
Gtk.init();
GLib.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal.Application);

// sass:/home/john/dotfiles/stow/ags/.config/ags/styles/main.scss
var main_default = '@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n@keyframes fadeInSlow {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\nwindow.Bar {\n  animation: fadeIn 0.3s ease-out;\n}\n\nwindow.notification-center-window {\n  animation: fadeInSlow 0.4s ease-out;\n}\n\nwindow.control-panel-window {\n  animation: fadeIn 0.3s ease-out;\n}\n\nwindow.NotificationPopup {\n  animation: fadeIn 0.2s ease-out;\n}\n\nwindow {\n  animation: fadeIn 0.2s ease-out;\n}\n\nbutton, box {\n  transition: opacity 0.15s ease-in-out;\n}\n\nbutton:hover {\n  transition: all 0.15s ease-in-out;\n}\n\n.bar {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n  padding: 4px 8px;\n}\n.bar centerbox .bar-section {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 8px;\n  background: rgba(28, 28, 34, 0.4);\n  gap: 2px;\n}\n.bar centerbox .bar-section button {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  transition: all 50ms ease-in-out;\n  border-radius: 6px;\n}\n.bar centerbox .bar-section button:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bar centerbox .bar-section button.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.bar centerbox .bar-section button:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bar centerbox .bar-section button.bar-section__button--active {\n  background: rgba(255, 255, 255, 0.05);\n  color: rgba(180, 180, 180, 0.85);\n}\n.bar centerbox .bar-section .bar-section__separator {\n  background-color: rgba(255, 255, 255, 0.03);\n  min-height: 1px;\n  min-width: 1px;\n  margin: 0 2px;\n}\n.bar centerbox .bar-section--left {\n  justify-content: flex-start;\n}\n.bar centerbox .bar-section--center {\n  justify-content: center;\n}\n.bar centerbox .bar-section--right {\n  justify-content: flex-end;\n}\n\nwindow.audio-controls-window {\n  margin-bottom: 8px;\n}\n\n.audio-panel, box.AudioPanel {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n  gap: 4px;\n  min-width: 200px;\n}\n.audio-panel .audio-panel__slider, box.AudioPanel .audio-panel__slider, box.AudioPanel scale {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  flex: 1;\n  margin-right: 4px;\n}\n.audio-panel .audio-panel__slider trough, box.AudioPanel .audio-panel__slider trough, box.AudioPanel scale trough {\n  min-height: 8px;\n  background-color: rgba(30, 30, 34, 0.6);\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n}\n.audio-panel .audio-panel__slider highlight, box.AudioPanel .audio-panel__slider highlight, box.AudioPanel scale highlight {\n  background-color: rgba(250, 250, 250, 0.96);\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 0;\n  outline: none;\n  min-height: 0;\n  padding: 0;\n  margin: 0;\n}\n.audio-panel .audio-panel__slider slider, box.AudioPanel .audio-panel__slider slider, box.AudioPanel scale slider {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  border-radius: 50%;\n  background-color: rgba(250, 250, 250, 0.96);\n  transition: all 50ms ease-in-out;\n}\n.audio-panel .audio-panel__slider slider:hover, box.AudioPanel .audio-panel__slider slider:hover, box.AudioPanel scale slider:hover {\n  background-color: rgba(200, 200, 200, 0.9);\n}\n.audio-panel .audio-panel__slider trough, box.AudioPanel .audio-panel__slider trough, box.AudioPanel scale trough {\n  margin: 0;\n  padding: 0;\n}\n.audio-panel .audio-panel__slider highlight, box.AudioPanel .audio-panel__slider highlight, box.AudioPanel scale highlight {\n  margin: 0;\n  padding: 0;\n}\n.audio-panel .audio-panel__volume-label, box.AudioPanel .audio-panel__volume-label, box.AudioPanel label.volume-label {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n  font-size: 12px;\n  opacity: 0.7;\n  min-width: 35px;\n  text-align: right;\n}\n.audio-panel .audio-panel__icon, box.AudioPanel .audio-panel__icon {\n  font-size: 13px;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n  color: rgba(250, 250, 250, 0.96);\n  min-width: 13px;\n}\n.audio-panel .audio-panel__icon:hover, box.AudioPanel .audio-panel__icon:hover {\n  opacity: 1;\n}\n\n.battery-display {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  transition: all 50ms ease-in-out;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px 4px;\n  border-radius: 6px;\n  background: transparent;\n  gap: 2px;\n  transition: all 50ms ease-in-out;\n}\n.battery-display:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.battery-display.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.battery-display:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.battery-display:hover {\n  background: rgba(255, 255, 255, 0.025);\n}\n\n.battery-display__icon {\n  font-size: 14px;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n}\n.battery-display__icon:hover {\n  opacity: 1;\n}\n.battery-display__icon:hover {\n  opacity: 1;\n}\n.battery-display__icon.active {\n  opacity: 1;\n  color: rgba(180, 180, 180, 0.85);\n}\n.battery-display__icon.battery-display__icon--charging {\n  color: rgba(100, 200, 100, 0.8);\n  animation: pulse 2s infinite;\n}\n.battery-display__icon.battery-display__icon--critical {\n  color: rgba(255, 100, 100, 0.85);\n  animation: pulse 1s infinite;\n}\n\n.battery-display__label {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n  font-size: 10px;\n  font-weight: 500;\n}\n.battery-display__label.battery-display__label--critical {\n  color: rgba(255, 100, 100, 0.85);\n}\n.battery-display__label.battery-display__label--low {\n  color: rgba(255, 200, 80, 0.9);\n}\n.battery-display__label.battery-display__label--medium {\n  color: rgba(220, 220, 220, 0.82);\n}\n.battery-display__label.battery-display__label--high, .battery-display__label.battery-display__label--full {\n  color: rgba(250, 250, 250, 0.96);\n}\n.battery-display__label.battery-display__label--charging {\n  color: rgba(100, 200, 100, 0.8);\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n.media-panel {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  border-radius: 12px;\n  padding: 12px;\n  background-color: rgba(28, 28, 34, 0.4);\n  min-width: 320px;\n}\n.media-panel .media-panel__artwork {\n  border-radius: 6px;\n  background-color: rgba(28, 28, 34, 0.4);\n  min-width: 64px;\n  min-height: 64px;\n}\n.media-panel .media-panel__info {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 2px;\n  flex: 1;\n}\n.media-panel .media-panel__controls {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n}\n\n.media-title-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  background: transparent;\n  transition: all 50ms ease-in-out;\n  border-radius: 4px;\n  padding: 2px;\n}\n.media-title-btn:hover, .media-title-btn:active, .media-title-btn:focus {\n  background: rgba(255, 255, 255, 0.025);\n}\n\n.media-panel__track-title {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 14px;\n  font-weight: 600;\n  font-weight: 600;\n  font-size: 12px;\n  min-width: 0;\n  text-decoration: none;\n  transition: all 50ms ease-in-out;\n}\n.media-panel__track-title:hover {\n  text-decoration: underline;\n  color: rgba(180, 180, 180, 0.85);\n}\n\n.media-panel__track-artist {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n  font-size: 12px;\n  opacity: 0.85;\n  min-width: 0;\n}\n\n.media-panel__track-album {\n  color: rgba(180, 180, 180, 0.68);\n  font-size: 10px;\n  font-weight: 400;\n  font-size: 10px;\n  min-width: 0;\n}\n\n.media-panel__controls .media-panel__control-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  min-width: 14px;\n  padding: 4px;\n  transition: all 50ms ease-in-out;\n  border-radius: 8px;\n}\n.media-panel__controls .media-panel__control-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.media-panel__controls .media-panel__control-btn.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.media-panel__controls .media-panel__control-btn icon {\n  font-size: 14px;\n}\n.media-panel__controls .media-panel__control-btn:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.media-panel__controls .media-panel__control-btn.media-panel__control-btn--primary {\n  background: rgba(180, 180, 180, 0.85);\n  color: rgb(25, 25, 28);\n}\n.media-panel__controls .media-panel__control-btn.media-panel__control-btn--primary:hover {\n  background: rgba(200, 200, 200, 0.9);\n}\n.media-panel__controls .media-panel__control-btn.media-panel__control-btn--secondary {\n  background: transparent;\n  color: rgba(220, 220, 220, 0.82);\n}\n.media-panel__controls .media-panel__control-btn.media-panel__control-btn--secondary:hover {\n  background: rgba(255, 255, 255, 0.025);\n  color: rgba(250, 250, 250, 0.96);\n}\n.media-panel__controls .media-panel__progress {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  margin: 4px 0;\n  flex: 1;\n}\n.media-panel__controls .media-panel__progress trough {\n  min-height: 2px;\n  background-color: rgba(30, 30, 34, 0.6);\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n}\n.media-panel__controls .media-panel__progress highlight {\n  background-color: rgba(180, 180, 180, 0.85);\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 0;\n  outline: none;\n  min-height: 0;\n  padding: 0;\n  margin: 0;\n}\n.media-panel__controls .media-panel__progress slider {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  border-radius: 50%;\n  background-color: rgba(180, 180, 180, 0.85);\n  transition: all 50ms ease-in-out;\n}\n.media-panel__controls .media-panel__progress slider:hover {\n  background-color: rgba(200, 200, 200, 0.9);\n}\n\npopover.media-popover,\npopover.media-popover * {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n}\n\npopover.media-popover > contents,\npopover.media-popover > box,\npopover.media-popover > viewport,\npopover.media-popover > list {\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n}\n\npopover.media-popover .media-panel {\n  background-color: rgba(28, 28, 34, 0.4);\n  border-radius: 12px;\n  padding: 12px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.24);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n}\n\n.NotificationButton {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n}\n.NotificationButton:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.NotificationButton.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.NotificationButton .icon {\n  color: rgba(250, 250, 250, 0.96);\n}\n.NotificationButton .badge {\n  font-size: 10px;\n  background-color: rgba(255, 255, 255, 0.025);\n  font-weight: 600;\n  padding: 0 4px;\n  border-radius: 4px;\n  border: 1px solid rgba(255, 255, 255, 0.025);\n  color: rgba(250, 250, 250, 0.96);\n  opacity: 0.7;\n}\n.NotificationButton .badge label {\n  margin: 0;\n  padding: 0;\n  font-size: 10px;\n}\n\n.notification-center {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  min-width: 500px;\n  margin: 4px 4px 0px 4px;\n}\n.notification-center.active {\n  border-color: rgba(255, 255, 255, 0.03);\n}\n.notification-center .notifications-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.06);\n}\n.notification-center .notifications-header .notification-title {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 14px;\n  font-weight: 600;\n}\n.notification-center .notifications-header .notification-count {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n}\n.notification-center .notification-list-scroll {\n  background: transparent;\n  border: none;\n  min-height: 600px;\n}\n.notification-center .notification-list-scroll scrollbar {\n  background: transparent;\n  border: none;\n}\n.notification-center .notification-list-scroll scrollbar trough {\n  background: transparent;\n}\n.notification-center .notification-list-scroll scrollbar slider {\n  background: rgba(180, 180, 180, 0.68);\n  border-radius: 4px;\n  min-width: 2px;\n}\n.notification-center .notification-list-scroll scrollbar slider:hover {\n  background: rgba(220, 220, 220, 0.82);\n}\n.notification-center .notification-list {\n  background: transparent;\n  border: none;\n  padding: 4px;\n}\n\n.notification-rack .rack-container {\n  min-width: 320px;\n}\n.notification-rack .rack-item {\n  margin-bottom: 4px;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n.notification {\n  margin: 4px;\n}\n.notification .notification-container {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  min-width: 280px;\n}\n.notification .notification-container .notification-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 8px;\n}\n.notification .notification-container .notification-header .app-icon {\n  min-width: 16px;\n  min-height: 16px;\n  color: rgba(250, 250, 250, 0.96);\n}\n.notification .notification-container .notification-header .app-name {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n  font-weight: 600;\n}\n.notification .notification-container .notification-header .timestamp {\n  color: rgba(180, 180, 180, 0.68);\n  font-size: 10px;\n  font-weight: 400;\n  margin-left: auto;\n}\n.notification .notification-container .notification-header .close-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  padding: 2px;\n  opacity: 0.7;\n}\n.notification .notification-container .notification-header .close-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.notification .notification-container .notification-header .close-btn.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.notification .notification-container .notification-header .close-btn:hover {\n  opacity: 1;\n}\n.notification .notification-container .notification-body .text-content .summary {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 2px;\n}\n.notification .notification-container .notification-body .text-content .body {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 13px;\n  font-weight: 400;\n  opacity: 0.7;\n}\n\n.window-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.window-title .window-title__container, .window-title box {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 8px;\n  gap: 4px;\n  max-width: 300px;\n}\n.window-title .window-title__container .window-title__icon, .window-title box .window-title__icon, .window-title box icon {\n  font-size: 12px;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n  color: rgba(250, 250, 250, 0.96);\n  opacity: 0.9;\n  min-width: 12px;\n}\n.window-title .window-title__container .window-title__icon:hover, .window-title box .window-title__icon:hover, .window-title box icon:hover {\n  opacity: 1;\n}\n.window-title .window-title__container .window-title__text, .window-title box .window-title__text, .window-title box label {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n  font-size: 12px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 200px;\n}\n.workspaces {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 2px;\n}\n.workspaces .workspace {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  transition: all 50ms ease-in-out;\n  border-radius: 6px;\n  background: transparent;\n  padding: 4px;\n  min-width: 12px;\n  min-height: 12px;\n  transition: background-color 200ms ease-in-out;\n}\n.workspaces .workspace:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.workspaces .workspace.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.workspaces .workspace:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.workspaces .workspace:hover:not(.workspace--focused) {\n  background: rgba(255, 255, 255, 0.025);\n}\n.workspaces .workspace.workspace--focused {\n  background: rgba(255, 255, 255, 0.05);\n}\n.workspaces .workspace__indicator {\n  background-color: rgba(250, 250, 250, 0.96);\n  border-radius: 8px;\n  transition: min-width 200ms ease-in-out;\n  min-height: 2px;\n  min-width: 8px;\n}\n.workspaces .workspace__indicator.workspace__indicator--focused {\n  background-color: rgba(180, 180, 180, 0.85);\n  min-width: 16px;\n  min-height: 2px;\n}\n.workspaces .workspace__indicator.workspace__indicator--occupied {\n  background-color: rgba(220, 220, 220, 0.82);\n  min-width: 4px;\n}\n.workspaces .workspace__indicator.workspace__indicator--empty {\n  background-color: rgba(180, 180, 180, 0.68);\n  min-width: 2px;\n}\n\n.control-panel {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  margin: 4px 8px;\n  min-width: 320px;\n}\n.control-panel .control-panel__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 14px;\n  font-weight: 600;\n  padding: 8px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.03);\n}\n.control-panel .control-panel__content {\n  padding: 8px;\n  display: grid;\n  gap: 8px;\n}\n.control-panel .control-panel__widget {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 4px;\n  background: rgba(32, 32, 36, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.03);\n}\n.control-panel .control-panel__widget:hover {\n  background: rgba(38, 38, 42, 0.9);\n  border-color: rgba(255, 255, 255, 0.06);\n}\n.control-panel .control-panel__section {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n.control-panel .control-panel__section .control-panel__section-title {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n  font-weight: 600;\n  margin-bottom: 2px;\n}\n\n.system-control-container {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  padding: 8px;\n}\n.system-control-container .system-control-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n  border-radius: 8px;\n  transition: all 50ms ease-in-out;\n}\n.system-control-container .system-control-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.system-control-container .system-control-btn.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.system-control-container .system-control-btn:hover {\n  color: rgba(250, 250, 250, 0.96);\n}\n.system-control-container .system-control-btn icon {\n  font-size: 16px;\n}\n.system-control-container .system-control-btn.lock-btn:hover {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  background-color: rgba(180, 180, 180, 0.3);\n  color: rgba(200, 200, 200, 0.9);\n}\n.system-control-container .system-control-btn.lock-btn:hover:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.system-control-container .system-control-btn.lock-btn:hover.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.system-control-container .system-control-btn.lock-btn:hover:hover {\n  background-color: rgba(180, 180, 180, 0.4);\n}\n.system-control-container .system-control-btn.sleep-btn:hover {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  background-color: rgba(255, 200, 80, 0.2);\n  color: rgba(255, 200, 80, 0.9);\n}\n.system-control-container .system-control-btn.sleep-btn:hover:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.system-control-container .system-control-btn.sleep-btn:hover.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.system-control-container .system-control-btn.sleep-btn:hover:hover {\n  background-color: rgba(255, 200, 80, 0.3);\n}\n.system-control-container .system-control-btn.shutdown-btn:hover {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  background-color: rgba(255, 100, 100, 0.2);\n  color: rgba(255, 100, 100, 0.85);\n}\n.system-control-container .system-control-btn.shutdown-btn:hover:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.system-control-container .system-control-btn.shutdown-btn:hover.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.system-control-container .system-control-btn.shutdown-btn:hover:hover {\n  background-color: rgba(255, 100, 100, 0.3);\n}\n.system-control-container .system-control-btn.shutdown-btn.confirm-pending {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  background-color: rgba(255, 100, 100, 0.3);\n  color: rgba(255, 100, 100, 0.85);\n}\n.system-control-container .system-control-btn.shutdown-btn.confirm-pending:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.system-control-container .system-control-btn.shutdown-btn.confirm-pending.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.system-control-container .system-control-btn.shutdown-btn.confirm-pending:hover {\n  background-color: rgba(255, 100, 100, 0.4);\n}\n\n.inline-confirmation-overlay .confirmation-header .confirmation-title {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 4px;\n}\n.inline-confirmation-overlay .confirmation-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-size: 12px;\n  font-weight: 500;\n}\n.inline-confirmation-overlay .confirmation-buttons .cancel-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  min-width: 60px;\n  padding: 4px 8px;\n}\n.inline-confirmation-overlay .confirmation-buttons .cancel-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.inline-confirmation-overlay .confirmation-buttons .cancel-btn.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.inline-confirmation-overlay .confirmation-buttons .cancel-btn:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n  color: rgba(250, 250, 250, 0.96);\n  border-color: rgba(255, 255, 255, 0.03);\n}\n.inline-confirmation-overlay .confirmation-buttons .confirm-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  background-color: rgba(255, 100, 100, 0.85);\n  color: rgb(60, 0, 0);\n  min-width: 60px;\n  padding: 4px 8px;\n}\n.inline-confirmation-overlay .confirmation-buttons .confirm-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.inline-confirmation-overlay .confirmation-buttons .confirm-btn.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.inline-confirmation-overlay .confirmation-buttons .confirm-btn:hover {\n  background-color: rgba(255, 100, 100, 0.85);\n}\n\n.system-control-container stack {\n  transition: all 200ms ease-in-out;\n}\n.system-control-container stack .system-controls,\n.system-control-container stack .confirmation-container {\n  min-height: 48px;\n}\n\n.AppLauncherWindow {\n  background: rgba(28, 28, 34, 0.4);\n}\n\n.AppLauncher .search-container {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.03);\n  border-radius: 12px;\n  background-color: rgba(28, 28, 34, 0.4);\n  padding: 12px 16px;\n}\n.AppLauncher .search-container .typed-text {\n  color: transparent;\n}\n.AppLauncher .search-container .preview-completion {\n  color: rgba(180, 180, 180, 0.68);\n  font-size: 10px;\n  font-weight: 400;\n}\n.AppLauncher .search-container .preview-result {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 14px;\n  font-weight: 600;\n  color: rgba(180, 180, 180, 0.85);\n  font-size: 16px;\n  font-weight: 600;\n}\n.AppLauncher .search-container .preview-icon {\n  font-size: 20px;\n  color: rgba(250, 250, 250, 0.96);\n}\n.AppLauncher .search-container .search-entry,\n.AppLauncher .search-container entry.search-entry {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n  background: transparent;\n  border: none;\n  font-size: 14px;\n}\n.AppLauncher .search-container .search-entry:hover,\n.AppLauncher .search-container entry.search-entry:hover {\n  border: none;\n}\n.AppLauncher .search-container .search-entry:focus,\n.AppLauncher .search-container entry.search-entry:focus {\n  border: none;\n}\n.AppLauncher .search-container .custom-placeholder {\n  color: rgba(180, 180, 180, 0.68);\n  font-size: 10px;\n  font-weight: 400;\n}\n.AppLauncher .recent-apps-container {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n  font-size: 13px;\n}\n.AppLauncher .recent-apps-container .recent-apps-header {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n.AppLauncher .recent-apps-container .recent-apps-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: 8px;\n}\n.AppLauncher .recent-apps-container button.recent-app-item,\n.AppLauncher .recent-apps-container .recent-app-item {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  transition: all 50ms ease-in-out;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 12px;\n  background: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.03);\n  border-radius: 12px;\n  transition: all 200ms ease-in-out;\n  gap: 4px;\n  min-height: 80px;\n}\n.AppLauncher .recent-apps-container button.recent-app-item:hover,\n.AppLauncher .recent-apps-container .recent-app-item:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.AppLauncher .recent-apps-container button.recent-app-item:hover,\n.AppLauncher .recent-apps-container .recent-app-item:hover {\n  background: rgba(0, 0, 0, 0);\n  border: 1px solid rgba(255, 255, 255, 0.03);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.16);\n}\n.AppLauncher .recent-apps-container button.recent-app-item .recent-app-item__icon,\n.AppLauncher .recent-apps-container .recent-app-item .recent-app-item__icon {\n  font-size: 16px;\n  color: rgba(250, 250, 250, 0.96);\n}\n.AppLauncher .recent-apps-container button.recent-app-item .recent-app-item__name,\n.AppLauncher .recent-apps-container .recent-app-item .recent-app-item__name {\n  color: rgba(180, 180, 180, 0.68);\n  font-size: 10px;\n  font-weight: 400;\n  text-align: center;\n  word-wrap: break-word;\n}\n\n.OSDWindow .osd-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  border-radius: 8px;\n  background: rgba(28, 28, 34, 0.4);\n  margin-bottom: 24px;\n  padding: 8px 16px;\n  gap: 8px;\n  min-width: 200px;\n}\n.OSDWindow .osd-container .osd-icon {\n  font-size: 16px;\n  opacity: 1;\n  transition: all 50ms ease-in-out;\n  color: rgba(250, 250, 250, 0.96);\n  min-width: 16px;\n  min-height: 16px;\n}\n.OSDWindow .osd-container .osd-icon:hover {\n  opacity: 1;\n}\n.OSDWindow .osd-container .osd-slider {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  flex: 1;\n}\n.OSDWindow .osd-container .osd-slider trough {\n  min-height: 8px;\n  background-color: rgba(30, 30, 34, 0.6);\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n}\n.OSDWindow .osd-container .osd-slider highlight {\n  background-color: rgba(250, 250, 250, 0.96);\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 0;\n  outline: none;\n  min-height: 0;\n  padding: 0;\n  margin: 0;\n}\n.OSDWindow .osd-container .osd-slider slider {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  border-radius: 50%;\n  background-color: rgba(250, 250, 250, 0.96);\n  transition: all 50ms ease-in-out;\n}\n.OSDWindow .osd-container .osd-slider slider:hover {\n  background-color: rgba(200, 200, 200, 0.9);\n}\n.OSDWindow .osd-container .osd-label {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n  opacity: 0.7;\n  min-width: fit-content;\n}\n\n.cava-island .cava-wrapper {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px 4px;\n  gap: 1px;\n  border-radius: 8px;\n  background: rgba(28, 28, 34, 0.4);\n  transition: all 50ms ease-in-out;\n}\n.cava-island .cava-wrapper:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.cava-island .cava-wrapper.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.cava-island .cava-wrapper .cava-bar {\n  background: rgba(250, 250, 250, 0.96);\n  border-radius: 16px;\n  transition: all 0.1s ease-out;\n  min-height: 2px;\n  min-width: 2px;\n  opacity: 0.8;\n}\n.cava-island .cava-wrapper .cava-bar.cava-bar--active {\n  background: rgba(180, 180, 180, 0.85);\n  opacity: 1;\n}\n.cava-island .cava-wrapper .cava-bar.cava-bar--high {\n  background: rgba(100, 200, 100, 0.8);\n}\n.cava-island .cava-wrapper .cava-bar.cava-bar--peak {\n  background: rgba(255, 200, 80, 0.9);\n}\n.cava-island .cava-wrapper:hover {\n  background: rgba(32, 32, 36, 0.8);\n}\n.cava-island .cava-wrapper:hover .cava-bar {\n  opacity: 1;\n}\n\n.cava-island-empty {\n  padding: 0;\n  background: transparent;\n}\n.cava-island-empty .cava-wrapper {\n  background: transparent;\n  padding: 2px;\n}\n.cava-island-empty .cava-wrapper:hover {\n  background: rgba(255, 255, 255, 0.025);\n}\n\n.bluetooth-widget {\n  background-color: rgba(28, 28, 34, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n  border-radius: 12px;\n  padding: 8px;\n  padding: 8px;\n}\n\n.bluetooth-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  padding: 4px;\n}\n.bluetooth-header .bluetooth-icon {\n  font-size: 14px;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n  font-size: 14px;\n}\n.bluetooth-header .bluetooth-icon:hover {\n  opacity: 1;\n}\n.bluetooth-header .bluetooth-icon:hover {\n  opacity: 1;\n}\n.bluetooth-header .bluetooth-icon.active {\n  opacity: 1;\n  color: rgba(180, 180, 180, 0.85);\n}\n.bluetooth-header .bluetooth-icon.enabled {\n  color: rgba(180, 180, 180, 0.85);\n  opacity: 1;\n}\n.bluetooth-header .bluetooth-icon.disabled {\n  color: rgba(180, 180, 180, 0.68);\n  opacity: 0.5;\n}\n.bluetooth-header .bluetooth-status-dot {\n  min-width: 6px;\n  min-height: 6px;\n  border-radius: 100px;\n}\n.bluetooth-header .bluetooth-status-dot.active {\n  background-color: rgba(100, 200, 100, 0.8);\n}\n.bluetooth-header .bluetooth-status-dot.inactive {\n  background-color: rgba(180, 180, 180, 0.68);\n}\n.bluetooth-header .bluetooth-title {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n}\n.bluetooth-header .bluetooth-toggle-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  border-radius: 6px;\n  padding: 2px 8px;\n  min-width: 32px;\n  transition: all 50ms ease-in-out;\n  background-color: rgba(30, 30, 34, 0.6);\n}\n.bluetooth-header .bluetooth-toggle-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bluetooth-header .bluetooth-toggle-btn.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.bluetooth-header .bluetooth-toggle-btn .bluetooth-toggle-label {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n  font-size: 10px;\n  font-weight: 600;\n}\n.bluetooth-header .bluetooth-toggle-btn.on {\n  background-color: rgba(0, 0, 0, 0);\n}\n.bluetooth-header .bluetooth-expand-btn {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  min-width: 12px;\n  padding: 4px;\n  opacity: 0.7;\n}\n.bluetooth-header .bluetooth-expand-btn:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bluetooth-header .bluetooth-expand-btn.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.bluetooth-header .bluetooth-expand-btn icon {\n  font-size: 12px;\n}\n.bluetooth-header .bluetooth-expand-btn:hover {\n  opacity: 1;\n  background-color: rgba(255, 255, 255, 0.025);\n}\n\n.bluetooth-expanded {\n  margin-top: 8px;\n  padding: 8px 2px 0 2px;\n  border-top: 1px solid rgba(255, 255, 255, 0.03);\n}\n\n.bluetooth-scan-button {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  transition: all 50ms ease-in-out;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 6px;\n  padding: 8px;\n  gap: 4px;\n}\n.bluetooth-scan-button:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bluetooth-scan-button.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.bluetooth-scan-button:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bluetooth-scan-button .bluetooth-scan-icon {\n  font-size: 13px;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n  color: rgba(180, 180, 180, 0.85);\n}\n.bluetooth-scan-button .bluetooth-scan-icon:hover {\n  opacity: 1;\n}\n.bluetooth-scan-button .bluetooth-scan-icon.scanning {\n  animation: pulse 1s ease-in-out infinite;\n}\n.bluetooth-scan-button .bluetooth-scan-label {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n  font-size: 12px;\n}\n\n.bluetooth-devices {\n  margin-top: 2px;\n}\n\n.bluetooth-device {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 4px;\n  border-radius: 6px;\n  transition: all 50ms ease-in-out;\n  min-width: 16px;\n  transition: all 50ms ease-in-out;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 6px;\n  padding: 4px 8px;\n  margin-bottom: 2px;\n  transition: all 50ms ease-in-out;\n}\n.bluetooth-device:hover:not(.active) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bluetooth-device.active {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.bluetooth-device:hover {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bluetooth-device:hover:not(.connecting) {\n  background-color: rgba(255, 255, 255, 0.025);\n}\n.bluetooth-device.connecting {\n  opacity: 0.7;\n}\n.bluetooth-device.connecting .bluetooth-device-icon.connecting {\n  animation: pulse 1s ease-in-out infinite;\n}\n.bluetooth-device .bluetooth-device-icon {\n  font-size: 13px;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n}\n.bluetooth-device .bluetooth-device-icon:hover {\n  opacity: 1;\n}\n.bluetooth-device .bluetooth-device-icon.connected {\n  color: rgba(180, 180, 180, 0.85);\n  opacity: 1;\n}\n.bluetooth-device .bluetooth-device-icon.paired {\n  color: rgba(250, 250, 250, 0.96);\n  opacity: 0.8;\n}\n.bluetooth-device .bluetooth-device-icon.available {\n  color: rgba(220, 220, 220, 0.82);\n  opacity: 0.6;\n}\n.bluetooth-device .bluetooth-device-icon.connecting {\n  color: rgba(180, 180, 180, 0.85);\n  opacity: 1;\n}\n.bluetooth-device .bluetooth-device-name {\n  color: rgba(250, 250, 250, 0.96);\n  font-size: 12px;\n  font-weight: 500;\n  font-size: 12px;\n}\n.bluetooth-device .bluetooth-device-status {\n  color: rgba(180, 180, 180, 0.68);\n  font-size: 10px;\n  font-weight: 400;\n  font-size: 10px;\n}\n.bluetooth-device .bluetooth-device-status.connected {\n  color: rgba(180, 180, 180, 0.85);\n}\n.bluetooth-device .bluetooth-device-status.paired {\n  color: rgba(220, 220, 220, 0.82);\n}\n.bluetooth-device .bluetooth-device-status.available {\n  color: rgba(180, 180, 180, 0.68);\n}\n.bluetooth-device .bluetooth-device-status.connecting {\n  color: rgba(180, 180, 180, 0.85);\n  font-style: italic;\n}\n.bluetooth-device .bluetooth-connected-indicator {\n  font-size: 12px;\n  opacity: 0.9;\n  transition: all 50ms ease-in-out;\n  color: rgba(180, 180, 180, 0.85);\n  opacity: 1;\n}\n.bluetooth-device .bluetooth-connected-indicator:hover {\n  opacity: 1;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 0.5;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.5;\n  }\n}\n.bluetooth-empty {\n  color: rgba(180, 180, 180, 0.68);\n  font-size: 10px;\n  font-weight: 400;\n  padding: 8px;\n  text-align: center;\n}\n\n.bluetooth-disabled-message {\n  color: rgba(220, 220, 220, 0.82);\n  font-size: 12px;\n  font-weight: 400;\n  padding: 8px;\n  font-style: italic;\n  color: rgba(180, 180, 180, 0.68);\n  text-align: center;\n}\n\n* {\n  font-family: "SF Pro Text", monospace;\n  letter-spacing: 0.02em;\n}\n\nbox,\nwindow,\neventbox,\noverlay,\nscrolled,\nscrolledwindow,\nviewport {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n}\n\npopover {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  background-color: transparent;\n  border: none;\n  box-shadow: none;\n  margin: 0;\n  padding: 0;\n}\npopover button {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n}';

// ../../../../../../../usr/share/ags/js/src/gtk4/index.ts
import Astal2 from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/jsx.ts
import GObject3 from "gi://GObject";

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/state.ts
import GObject2 from "gi://GObject";
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";

// ../../../../../../../usr/share/ags/js/gnim/src/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject2.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    _Accessor.evaluating?.add(this);
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      subscribers.forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject3.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children = [], ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/Fragment.ts
import GObject4 from "gi://GObject";

// ../../../../../../../usr/share/ags/js/gnim/src/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject4.Object, _b = GObject4.signals, _a = GObject4.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject4.TYPE_OBJECT, GObject4.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject4.TYPE_OBJECT, GObject4.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject4.ParamSpec.jsobject("children", "", "", GObject4.ParamFlags.READABLE)
    };
  }
  static {
    GObject4.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../../../../usr/share/ags/js/gnim/src/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function callback(v) {
    for (const child of fragment.children) {
      fragment.removeChild(child);
      if (typeof cleanup === "function") {
        cleanup(child);
      } else if (cleanup !== null) {
        env.defaultCleanup(child);
      }
      if (scope) scope.dispose();
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    scope.dispose();
    dispose();
  });
  return fragment;
}

// widget/workspaces/service.ts
import Hyprland from "gi://AstalHyprland";
var hypr = null;
try {
  hypr = Hyprland.get_default();
} catch {
}
var [workspaceState, setWorkspaceState] = createState(0);
function triggerUpdate() {
  setWorkspaceState((prev) => prev + 1);
}
var getWorkspaces = () => {
  if (!hypr) return [];
  try {
    return hypr.get_workspaces().filter((ws) => ws.id > 0).sort((a, b) => a.id - b.id);
  } catch {
    return [];
  }
};
var workspaces = workspaceState(() => getWorkspaces());
try {
  hypr?.connect("workspace-added", triggerUpdate);
  hypr?.connect("workspace-removed", triggerUpdate);
} catch {
}
var __focusedWorkspace;
if (hypr) {
  __focusedWorkspace = createBinding(hypr, "focusedWorkspace");
} else {
  const [focused] = createState(null);
  __focusedWorkspace = focused;
}
var focusedWorkspace = __focusedWorkspace;

// ../../../../../../../usr/share/ags/js/src/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal3 from "gi://Astal?version=4.0";

// ../../../../../../../usr/share/ags/js/gnim/src/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject5 from "gi://GObject";
var dummyBuilder = new Gtk3.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject5.Object)) {
      child = Gtk3.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk3.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../../../usr/share/ags/js/src/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal3.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal3.Window
});

// widget/workspaces/components/Workspaces.tsx
function Workspaces({ class: cls }) {
  return /* @__PURE__ */ jsx("box", { class: `workspaces ${cls ?? ""}`, spacing: 2, children: /* @__PURE__ */ jsx(For, { each: workspaces, children: (ws) => /* @__PURE__ */ jsx(
    "button",
    {
      widthRequest: 32,
      class: focusedWorkspace(
        (f) => f?.id === ws.id ? "workspace focused" : "workspace"
      ),
      onClicked: () => ws.focus(),
      children: /* @__PURE__ */ jsx(
        "box",
        {
          heightRequest: 6,
          widthRequest: 2,
          halign: Gtk2.Align.CENTER,
          valign: Gtk2.Align.CENTER,
          class: focusedWorkspace(
            (f) => f?.id === ws.id ? "dot focused" : "dot"
          )
        }
      )
    }
  ) }) });
}

// widget/systemtray/service.ts
import Tray from "gi://AstalTray";
var tray = Tray.get_default();
function filterValidItems(items) {
  return items.filter((item) => {
    try {
      return item && item.gicon && item.id && !item.get_property?.("invalid") && // Check if item is marked as invalid
      item.get_property?.("status") !== "Passive";
    } catch (error) {
      console.warn("Invalid tray item detected, filtering out:", error);
      return false;
    }
  });
}
var trayItems = createBinding(tray, "items", (items) => {
  return filterValidItems(items);
});

// widget/systemtray/components/SystemTray.tsx
import Hyprland2 from "gi://AstalHyprland";
function TrayItemComponent({ item }) {
  return /* @__PURE__ */ jsx(
    "button",
    {
      class: "tray-button",
      onClicked: () => {
        try {
          item.activate(0, 0);
        } catch {
        }
        try {
          item.secondaryActivate?.(0, 0);
        } catch {
        }
        try {
          const hypr4 = Hyprland2.get_default();
          hypr4?.dispatch?.("focuswindow", `class:${item.title}`);
        } catch {
        }
      },
      children: /* @__PURE__ */ jsx("image", { gicon: item.gicon, pixelSize: 14 })
    }
  );
}
function SystemTray({ class: cls }) {
  return /* @__PURE__ */ jsx(
    "box",
    {
      class: `system-tray ${cls ?? ""}`,
      spacing: 4,
      visible: trayItems((items) => items.length > 0),
      children: /* @__PURE__ */ jsx(For, { each: trayItems, children: (item) => /* @__PURE__ */ jsx(TrayItemComponent, { item }) })
    }
  );
}

// widget/windowtitle/service.ts
import Hyprland3 from "gi://AstalHyprland";
var hypr2 = null;
try {
  hypr2 = Hyprland3.get_default();
} catch {
}
var __client;
if (hypr2) {
  __client = createBinding(hypr2, "focusedClient");
} else {
  const [client2] = createState(null);
  __client = client2;
}
var client = __client;

// widget/windowtitle/components/WindowTitle.tsx
function WindowTitle({ class: cls = "" }) {
  return /* @__PURE__ */ jsx(With, { value: client, children: (c) => {
    const title = c?.get_title?.();
    const clsname = c?.get_class?.();
    return /* @__PURE__ */ jsxs("box", { class: `${cls}`, spacing: 6, visible: !!c, children: [
      /* @__PURE__ */ jsx("image", { iconName: clsname, pixelSize: 18 }),
      /* @__PURE__ */ jsx("label", { label: title, xalign: 0, maxWidthChars: 40, ellipsize: 3, marginEnd: 3 })
    ] });
  } });
}

// ../../../../../../../usr/share/ags/js/src/process.ts
import AstalIO from "gi://AstalIO";
var Process = AstalIO.Process;
function subprocess(argsOrCmd, onOut = print, onErr = printerr) {
  const args = Array.isArray(argsOrCmd) || typeof argsOrCmd === "string";
  const { cmd, err, out } = {
    cmd: args ? argsOrCmd : argsOrCmd.cmd,
    err: args ? onErr : argsOrCmd.err || onErr,
    out: args ? onOut : argsOrCmd.out || onOut
  };
  const proc = Array.isArray(cmd) ? AstalIO.Process.subprocessv(cmd) : AstalIO.Process.subprocess(cmd);
  proc.connect("stdout", (_, stdout) => out(stdout));
  proc.connect("stderr", (_, stderr) => err(stderr));
  return proc;
}
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// widget/cava/service.ts
import GLib3 from "gi://GLib";
var CFG = "widget/cava/config/config";
var BAR_COUNT = 8;
try {
  const [_success, data] = GLib3.file_get_contents(CFG);
  const text = new TextDecoder().decode(data);
  const match = text.match(/^\s*bars\s*=\s*(\d+)/m);
  if (match) {
    BAR_COUNT = parseInt(match[1], 10);
  }
} catch (e) {
  print(`Could not read cava config, using default BAR_COUNT: ${e}`);
}
var [barsAccessor, setBars] = createState(
  Array(BAR_COUNT).fill(0)
);
var norm = (v) => Math.round(2 + Math.min(v, 1e3) / 1e3 * 14);
subprocess(
  ["cava", "-p", CFG],
  (out) => {
    const nums = out.trim().split(";").map(Number).filter((n) => !isNaN(n));
    if (nums.length >= BAR_COUNT) setBars(nums.slice(0, BAR_COUNT).map(norm));
  },
  (err) => console.error("cava crash:", err)
);

// widget/mediaplayer/service.ts
import Mpris from "gi://AstalMpris";
import Hyprland4 from "gi://AstalHyprland";
var mpris = Mpris.get_default();
var players = createBinding(mpris, "players");
var mprisService = mpris;
var [mediaPanelVisible, setMediaPanelVisible] = createState(false);
var hypr3 = Hyprland4.get_default();
function toggleMediaPanel() {
  const players2 = mprisService.players;
  const player = players2.find((p) => p.playbackStatus === Mpris.PlaybackStatus.PLAYING);
  if (player) {
    hypr3.dispatch("focuswindow", `class:${player.entry}`);
  }
}

// widget/cava/components/CavaVisualizer.tsx
var idxs = barsAccessor((b) => b.map((_, i) => i));
function CavaVisualizer({ class: cls }) {
  return /* @__PURE__ */ jsx("button", { class: `cava-island ${cls ?? ""}`, onClicked: toggleMediaPanel, children: /* @__PURE__ */ jsx("box", { class: "cava-wrapper", spacing: 2, children: /* @__PURE__ */ jsx(For, { each: idxs, id: (i) => i, children: (i) => {
    const h = barsAccessor((b) => b[i]);
    const innerH = h((v) => v);
    const offset = Math.floor(innerH / 2);
    return /* @__PURE__ */ jsx("box", { css: "background: transparent;", children: /* @__PURE__ */ jsx(
      "box",
      {
        class: "cava-bar",
        widthRequest: 3,
        heightRequest: innerH,
        valign: Gtk2.Align.CENTER
      }
    ) });
  } }) }) });
}

// ../../../../../../../usr/share/ags/js/src/time.ts
import AstalIO2 from "gi://AstalIO";
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// widget/systemtemp/service.ts
import GLib4 from "gi://GLib";
function parseCpuTemp(text) {
  let match = text.match(/Tctl:\s*\+?(\d+\.\d+)°C/);
  if (match) return Math.round(parseFloat(match[1]));
  match = text.match(/Core 0:\s*\+?(\d+\.\d+)°C/);
  if (match) return Math.round(parseFloat(match[1]));
  return 0;
}
function getGpuTemp() {
  try {
    const out = GLib4.spawn_command_line_sync(
      "nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits"
    )[1];
    if (!out) return 0;
    const temp = parseInt(new TextDecoder().decode(out).trim());
    return isNaN(temp) ? 0 : temp;
  } catch (e) {
    return 0;
  }
}
function getTempStatus(cpu, gpu) {
  const max = Math.max(cpu, gpu);
  if (max >= 85) return "hot";
  if (max >= 70) return "warm";
  return "normal";
}
var systemTemps = createPoll(
  { cpu: 0, gpu: 0, avg: 0, status: "normal" },
  1e4,
  () => {
    let cpu = 0;
    try {
      const out = GLib4.spawn_command_line_sync("sensors")[1];
      if (out) cpu = parseCpuTemp(new TextDecoder().decode(out));
    } catch (e) {
    }
    const gpu = getGpuTemp();
    const avg = Math.round((cpu + gpu) / 2);
    const status = getTempStatus(cpu, gpu);
    return { cpu, gpu, avg, status };
  }
);

// widget/systemtemp/components/SystemTemp.tsx
import Gio3 from "gi://Gio";
function getIcon(status) {
  const icon = {
    normal: "temperature-normal-symbolic",
    warm: "temperature-warm-symbolic",
    hot: "temperature-hot-symbolic"
  };
  return icon[status];
}
function SystemTemp({ class: cls }) {
  return /* @__PURE__ */ jsx("box", { class: `system-temp ${cls ?? ""}`, children: /* @__PURE__ */ jsx(With, { value: systemTemps, children: ({ cpu, gpu, avg, status }) => /* @__PURE__ */ jsx(
    "box",
    {
      class: `system-temps ${status}`,
      widthRequest: 50,
      homogeneous: true,
      children: /* @__PURE__ */ jsxs("box", { halign: Gtk2.Align.CENTER, spacing: 2, children: [
        /* @__PURE__ */ jsx(
          "image",
          {
            gicon: Gio3.icon_new_for_string(getIcon(status)),
            pixelSize: 12
          }
        ),
        /* @__PURE__ */ jsx("label", { label: `${avg}\xB0C` })
      ] })
    }
  ) }) });
}

// widget/weather/Service.ts
import GLib5 from "gi://GLib";
function getLocation() {
  try {
    const out = GLib5.spawn_command_line_sync(
      "curl -s --max-time 10 --connect-timeout 5 http://ip-api.com/json/"
    )[1];
    if (!out) throw new Error("No data");
    const data = JSON.parse(imports.byteArray.toString(out));
    return { lat: data.lat, lon: data.lon, city: data.city };
  } catch {
    return { lat: 45.5017, lon: -73.5673, city: "Montreal" };
  }
}
var { lat, lon, city } = getLocation();
function getWeatherIconFromWMOCode(code) {
  if (code === 0) return "\u2600\uFE0F";
  if (code <= 3) return "\u26C5";
  if (code <= 48) return "\u{1F32B}\uFE0F";
  if (code <= 57) return "\u{1F326}\uFE0F";
  if (code <= 67) return "\u{1F327}\uFE0F";
  if (code <= 77) return "\u2744\uFE0F";
  if (code <= 82) return "\u{1F327}\uFE0F";
  if (code <= 86) return "\u2744\uFE0F";
  if (code <= 99) return "\u26C8\uFE0F";
  return "\u{1F321}\uFE0F";
}
var weather = createPoll(
  { temperature: 0, feelsLike: 0, icon: "\u{1F321}\uFE0F", location: city },
  6e5,
  () => {
    try {
      const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current=temperature_2m,apparent_temperature,weather_code&timezone=auto`;
      const out = GLib5.spawn_command_line_sync(`curl -s --max-time 15 --connect-timeout 8 '${url}'`)[1];
      if (!out) throw new Error("No data");
      const data = JSON.parse(imports.byteArray.toString(out));
      const c = data.current;
      return {
        temperature: Math.round(c.temperature_2m),
        feelsLike: Math.round(c.apparent_temperature),
        icon: getWeatherIconFromWMOCode(c.weather_code),
        location: city
      };
    } catch {
      return { temperature: 0, feelsLike: 0, icon: "\u{1F321}\uFE0F", location: city };
    }
  }
);

// widget/weather/components/WeatherDisplay.tsx
function Weather({ class: cls }) {
  return /* @__PURE__ */ jsx(With, { value: weather, children: (value) => {
    const { icon, feelsLike, location } = value;
    return /* @__PURE__ */ jsx(
      "box",
      {
        class: `weather-widget ${cls ?? ""}`,
        widthRequest: 64,
        homogeneous: true,
        children: /* @__PURE__ */ jsxs("box", { halign: Gtk2.Align.CENTER, spacing: 4, children: [
          /* @__PURE__ */ jsx("label", { label: icon }),
          /* @__PURE__ */ jsx("label", { label: `${feelsLike}\xB0C` })
        ] })
      }
    );
  } });
}

// widget/timedisplay/Service.ts
var time = createPoll("", 1e3, ["date", "+%a %d %H:%M"]);

// widget/timedisplay/components/TimeDisplay.tsx
function TimeDisplay({ class: cls }) {
  return /* @__PURE__ */ jsx("box", { class: `time-display ${cls ?? ""}`, children: /* @__PURE__ */ jsxs("menubutton", { halign: Gtk2.Align.CENTER, valign: Gtk2.Align.CENTER, children: [
    /* @__PURE__ */ jsx("label", { label: time }),
    /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx(Gtk2.Calendar, {}) })
  ] }) });
}

// widget/bluetooth/components/BluetoothButton.tsx
import GLib6 from "gi://GLib";

// widget/bluetooth/service.ts
import Bluetooth from "gi://AstalBluetooth";
var bluetooth = Bluetooth.get_default();
var isBluetoothOn = createBinding(
  bluetooth,
  "is-powered"
);

// widget/bluetooth/components/BluetoothButton.tsx
function BluetoothButton({
  class: cls = ""
}) {
  return /* @__PURE__ */ jsx("box", { class: `${cls}`, children: /* @__PURE__ */ jsx(
    "button",
    {
      onClicked: () => GLib6.spawn_command_line_async("blueberry"),
      children: /* @__PURE__ */ jsx(
        "image",
        {
          iconName: isBluetoothOn(
            (on) => on ? "bluetooth-active-symbolic" : "bluetooth-disabled-symbolic"
          ),
          pixelSize: 16,
          css: "transform: scale(0.8);"
        }
      )
    }
  ) });
}

// widget/notifications/service.ts
import Notifd from "gi://AstalNotifd";
var notifd = null;
try {
  notifd = Notifd.get_default();
  console.log("[Notifications] Successfully connected to Notifd");
} catch (error) {
  console.error("[Notifications] Failed to connect to Notifd:", error);
}
var __notifications;
if (notifd) {
  __notifications = createBinding(notifd, "notifications");
} else {
  const [list] = createState([]);
  __notifications = list;
}
var notifications = __notifications;
var [rackNotifications, setRackNotifications] = createState([]);
var [centerVisible, setCenterVisible] = createState(false);
console.log("[Notifications] Rack initialized, notifd available:", !!notifd);
var BASE_DISMISS_TIME = 3e3;
var NOTIFICATION_INTERVAL = 2e3;
var timeouts = /* @__PURE__ */ new Map();
var orderCounter = 0;
try {
  if (notifd) {
    notifd.connect("notified", (_, id, is_new) => {
      console.log("[Notifications] Notified signal - ID:", id, "is_new:", is_new);
      const notification = notifd.get_notification(id);
      if (!notification) {
        console.warn("[Notifications] Could not get notification with ID:", id);
        return;
      }
      console.log("[Notifications] Got notification:", notification.summary, notification.body);
      setRackNotifications((prev) => [...prev, notification]);
      const order = orderCounter++;
      const dismissTime = BASE_DISMISS_TIME + order * NOTIFICATION_INTERVAL;
      console.log("[Notifications] Will dismiss in:", dismissTime, "ms");
      const timeoutId = setTimeout(() => {
        console.log("[Notifications] Auto-dismissing notification:", notification.summary);
        removeFromRack(notification);
      }, dismissTime);
      timeouts.set(notification, timeoutId);
    });
    console.log("[Notifications] Service connected successfully");
  } else {
    console.log("[Notifications] No notifd available");
  }
} catch (error) {
  console.error("[Notifications] Failed to connect:", error);
}
function removeFromRack(notification) {
  console.log("[Notifications] removeFromRack called for notification");
  const timeoutId = timeouts.get(notification);
  if (timeoutId) {
    clearTimeout(timeoutId);
    timeouts.delete(notification);
    console.log("[Notifications] Cleared timeout");
  }
  const currentNotifs = rackNotifications.get();
  console.log("[Notifications] Current notifications count before removal:", currentNotifs.length);
  setRackNotifications((prev) => {
    const filtered = prev.filter((n) => n !== notification);
    console.log("[Notifications] Filtered notifications count:", filtered.length);
    console.log("[Notifications] Was notification removed?", prev.length !== filtered.length);
    if (filtered.length === 0) {
      orderCounter = 0;
      console.log("[Notifications] All cleared, reset counter");
    }
    return filtered;
  });
  setTimeout(() => {
    const newCount = rackNotifications.get().length;
    console.log("[Notifications] State after removal:", newCount);
  }, 100);
  try {
    notification?.dismiss?.();
  } catch (e) {
    console.log("[Notifications] System dismiss failed");
  }
}
var [lastPopup, setLastPopup] = createState(null);
var [popupVisible, setPopupVisible] = createState(false);
function dismissNotification(n) {
  console.log("[Notifications] Manual dismiss requested");
  removeFromRack(n);
}
var __centerShown = false;
function toggleNotificationCenter() {
  __centerShown = !__centerShown;
  setCenterVisible(__centerShown);
  try {
    print(`[Notifications] centerVisible -> ${__centerShown}`);
  } catch {
  }
}
function clearAllNotifications() {
  console.log("[Notifications] Force clearing all notifications");
  timeouts.forEach((timeoutId) => {
    clearTimeout(timeoutId);
  });
  timeouts.clear();
  orderCounter = 0;
  setRackNotifications([]);
  console.log("[Notifications] All notifications cleared");
}
try {
  globalThis.clearNotifications = clearAllNotifications;
} catch {
}

// widget/notifications/utils.ts
function getNotificationIcon(notification) {
  const appIcon = notification?.app_icon;
  if (appIcon && typeof appIcon === "object") {
    return { type: "gicon", value: appIcon };
  }
  if (typeof appIcon === "string" && appIcon.length > 0) {
    const isFilePath = appIcon.startsWith("/") || appIcon.startsWith("./") || appIcon.endsWith(".png") || appIcon.endsWith(".svg");
    if (isFilePath) {
      return { type: "file", value: appIcon };
    }
    return { type: "iconName", value: appIcon };
  }
  const desktopEntry = notification?.desktop_entry;
  if (typeof desktopEntry === "string" && desktopEntry.length > 0) {
    return { type: "iconName", value: desktopEntry };
  }
  const appName = notification?.app_name;
  if (typeof appName === "string" && appName.length > 0) {
    const candidate = appName.toLowerCase().replaceAll(" ", "-");
    return { type: "iconName", value: candidate };
  }
  return { type: "iconName", value: "dialog-information" };
}
function getNotificationAppName(notification) {
  const appName = notification?.app_name;
  if (typeof appName === "string" && appName.length > 0) return appName;
  const desktopEntry = notification?.desktop_entry;
  if (typeof desktopEntry === "string" && desktopEntry.length > 0) return desktopEntry;
  return "Notification";
}
function formatRelativeTime(epochMs) {
  if (!epochMs || Number.isNaN(epochMs)) return "";
  const diff = Math.max(0, Date.now() - epochMs);
  const seconds = Math.floor(diff / 1e3);
  if (seconds < 60) return `${seconds}s`;
  const minutes = Math.floor(seconds / 60);
  if (minutes < 60) return `${minutes}m`;
  const hours = Math.floor(minutes / 60);
  if (hours < 24) return `${hours}h`;
  const days = Math.floor(hours / 24);
  return `${days}d`;
}

// widget/notifications/components/NotificationRack.tsx
function NotificationRack() {
  console.log("[NotificationRack] Component function called at", Date.now());
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "notification-rack",
      class: "notification-rack",
      application: app_default,
      anchor: Astal2.WindowAnchor.TOP | Astal2.WindowAnchor.RIGHT,
      visible: true,
      layer: Astal2.Layer.OVERLAY,
      marginTop: 10,
      marginRight: 10,
      exclusivity: Astal2.Exclusivity.IGNORE,
      children: /* @__PURE__ */ jsx(
        "box",
        {
          class: "rack-container",
          orientation: Gtk2.Orientation.VERTICAL,
          spacing: 8,
          widthRequest: 350,
          heightRequest: -1,
          children: /* @__PURE__ */ jsx(For, { each: rackNotifications, children: (n) => {
            console.log("[NotificationRack] Rendering notification:", n?.summary || "NO_SUMMARY");
            return /* @__PURE__ */ jsx(
              "box",
              {
                class: "notification rack-item",
                widthRequest: 330,
                heightRequest: 80,
                children: /* @__PURE__ */ jsxs("box", { class: "notification-container", spacing: 8, children: [
                  /* @__PURE__ */ jsxs("box", { class: "notification-header", spacing: 6, children: [
                    (() => {
                      const icon = getNotificationIcon(n);
                      switch (icon.type) {
                        case "gicon":
                          return /* @__PURE__ */ jsx("image", { gicon: icon.value, pixelSize: 16, class: "app-icon" });
                        case "file":
                          return /* @__PURE__ */ jsx("image", { file: icon.value, pixelSize: 16, class: "app-icon" });
                        default:
                          return /* @__PURE__ */ jsx("image", { iconName: icon.value, pixelSize: 16, class: "app-icon" });
                      }
                    })(),
                    /* @__PURE__ */ jsx("label", { class: "app-name", label: getNotificationAppName(n) }),
                    /* @__PURE__ */ jsx(
                      "button",
                      {
                        class: "close-btn",
                        halign: Gtk2.Align.END,
                        onClicked: () => {
                          console.log("[NotificationRack] Close button clicked for:", n?.summary);
                          dismissNotification(n);
                        },
                        children: /* @__PURE__ */ jsx("image", { iconName: "window-close-symbolic", pixelSize: 12 })
                      }
                    )
                  ] }),
                  /* @__PURE__ */ jsxs("box", { class: "notification-body", spacing: 4, children: [
                    /* @__PURE__ */ jsx("label", { class: "summary", xalign: 0, ellipsize: 3, label: n?.summary || "" }),
                    /* @__PURE__ */ jsx("label", { class: "body", xalign: 0, ellipsize: 3, label: n?.body || "" })
                  ] })
                ] })
              }
            );
          } })
        }
      )
    }
  );
}

// widget/notifications/components/NotificationCenter.tsx
function NotificationCenterWindow() {
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "notification-center-window",
      class: "notification-center",
      application: app_default,
      anchor: Astal2.WindowAnchor.TOP | Astal2.WindowAnchor.RIGHT | Astal2.WindowAnchor.BOTTOM,
      exclusivity: Astal2.Exclusivity.NORMAL,
      visible: centerVisible,
      children: /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, spacing: 0, widthRequest: 500, vexpand: true, children: [
        /* @__PURE__ */ jsxs("box", { class: "notifications-header", spacing: 8, children: [
          /* @__PURE__ */ jsx("label", { class: "notification-title", label: "Notifications" }),
          /* @__PURE__ */ jsx("label", { class: "notification-count", label: notifications((list) => `${list.length}`) })
        ] }),
        /* @__PURE__ */ jsx("scrolledwindow", { class: "notification-list-scroll", vexpand: true, hexpand: true, children: /* @__PURE__ */ jsx("box", { class: "notification-list", orientation: Gtk2.Orientation.VERTICAL, spacing: 6, children: /* @__PURE__ */ jsx(For, { each: notifications, children: (n) => /* @__PURE__ */ jsx("box", { class: "notification clickable", children: /* @__PURE__ */ jsxs("box", { class: "notification-container", spacing: 8, children: [
          /* @__PURE__ */ jsxs("box", { class: "notification-header", spacing: 6, children: [
            (() => {
              const icon = getNotificationIcon(n);
              switch (icon.type) {
                case "gicon":
                  return /* @__PURE__ */ jsx("image", { gicon: icon.value, pixelSize: 16, class: "app-icon" });
                case "file":
                  return /* @__PURE__ */ jsx("image", { file: icon.value, pixelSize: 16, class: "app-icon" });
                default:
                  return /* @__PURE__ */ jsx("image", { iconName: icon.value, pixelSize: 16, class: "app-icon" });
              }
            })(),
            /* @__PURE__ */ jsx("label", { class: "app-name", label: getNotificationAppName(n) }),
            /* @__PURE__ */ jsx("label", { class: "timestamp", xalign: 1, label: formatRelativeTime(n?.time) }),
            /* @__PURE__ */ jsx("button", { halign: Gtk2.Align.END, onClicked: () => dismissNotification(n), children: /* @__PURE__ */ jsx("image", { iconName: "window-close-symbolic" }) })
          ] }),
          /* @__PURE__ */ jsx("box", { class: "notification-body", spacing: 8, children: /* @__PURE__ */ jsxs("box", { class: "text-content", spacing: 4, children: [
            /* @__PURE__ */ jsx("label", { class: "summary", xalign: 0, ellipsize: 3, label: n?.summary || "" }),
            /* @__PURE__ */ jsx("label", { class: "body", xalign: 0, ellipsize: 3, label: n?.body || "" })
          ] }) })
        ] }) }) }) }) })
      ] })
    }
  );
}

// widget/notifications/components/NotificationButton.tsx
function NotificationButton({ class: cls = "" }) {
  return /* @__PURE__ */ jsx("box", { class: `${cls}`, children: /* @__PURE__ */ jsx("button", { class: `NotificationButton`, onClicked: toggleNotificationCenter, children: /* @__PURE__ */ jsxs("box", { spacing: 4, halign: Gtk2.Align.CENTER, valign: Gtk2.Align.CENTER, children: [
    /* @__PURE__ */ jsx(
      "image",
      {
        class: "icon",
        iconName: "notification",
        pixelSize: 12
      }
    ),
    /* @__PURE__ */ jsx(With, { value: notifications, children: (list = []) => list.length > 0 ? /* @__PURE__ */ jsx("box", { class: "badge", children: /* @__PURE__ */ jsx("label", { label: `${list.length}` }) }) : null })
  ] }) }) });
}

// widget/Bar.tsx
function Bar(gdkmonitor) {
  const { TOP, LEFT, RIGHT, BOTTOM } = Astal2.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      visible: true,
      name: "bar",
      class: "bar",
      gdkmonitor,
      exclusivity: Astal2.Exclusivity.EXCLUSIVE,
      anchor: BOTTOM | LEFT | RIGHT,
      application: app_default,
      children: /* @__PURE__ */ jsxs("centerbox", { cssName: "centerbox", children: [
        /* @__PURE__ */ jsxs("box", { $type: "start", spacing: 3, children: [
          /* @__PURE__ */ jsx(Workspaces, { class: "bar-section" }),
          /* @__PURE__ */ jsx(SystemTray, { class: "bar-section" })
        ] }),
        /* @__PURE__ */ jsx("box", { $type: "center", spacing: 6, children: /* @__PURE__ */ jsx(WindowTitle, { class: "bar-section" }) }),
        /* @__PURE__ */ jsxs("box", { $type: "end", spacing: 3, halign: Gtk2.Align.END, children: [
          /* @__PURE__ */ jsx(NotificationButton, { class: "bar-section" }),
          /* @__PURE__ */ jsx(CavaVisualizer, { class: "bar-section" }),
          /* @__PURE__ */ jsx(Weather, { class: "bar-section" }),
          /* @__PURE__ */ jsx(SystemTemp, { class: "bar-section" }),
          /* @__PURE__ */ jsx(TimeDisplay, { class: "bar-section" }),
          /* @__PURE__ */ jsx(BluetoothButton, { class: "bar-section" })
        ] })
      ] })
    }
  );
}

// widget/mediaplayer/components/MediaPanel.tsx
import Mpris2 from "gi://AstalMpris";
import Hyprland5 from "gi://AstalHyprland";
function MediaPanel({ class: cls = "" } = {}) {
  return /* @__PURE__ */ jsx(With, { value: players, children: (list) => {
    const player = (list || []).find(
      (p) => p.playbackStatus === Mpris2.PlaybackStatus.PLAYING
    ) || list?.[0];
    if (!player) return /* @__PURE__ */ jsx("box", { class: `media ${cls}`, visible: false });
    const status = createBinding(player, "playbackStatus");
    const canPrev = createBinding(player, "canGoPrevious");
    const canNext = createBinding(player, "canGoNext");
    const canControl = createBinding(player, "canControl");
    const title = createBinding(player, "title");
    const artist = createBinding(player, "artist");
    const album = createBinding(player, "album");
    const cover = createBinding(player, "coverArt");
    const length = createBinding(player, "length");
    const position = createBinding(player, "position");
    return /* @__PURE__ */ jsxs("box", { class: `media-panel ${cls}`, spacing: 8, marginEnd: 8, widthRequest: 300, children: [
      /* @__PURE__ */ jsx(With, { value: cover, children: (c) => /* @__PURE__ */ jsx(
        "box",
        {
          halign: Gtk2.Align.START,
          valign: Gtk2.Align.CENTER,
          widthRequest: 64,
          heightRequest: 64,
          children: c ? /* @__PURE__ */ jsx(
            "image",
            {
              file: c.startsWith("file://") ? c.slice(7) : c,
              halign: Gtk2.Align.FILL,
              valign: Gtk2.Align.FILL,
              hexpand: true,
              vexpand: true
            }
          ) : /* @__PURE__ */ jsx("image", { iconName: player.entry, pixelSize: 28 })
        }
      ) }),
      /* @__PURE__ */ jsxs(
        "box",
        {
          spacing: 6,
          orientation: Gtk2.Orientation.VERTICAL,
          valign: Gtk2.Align.CENTER,
          halign: Gtk2.Align.FILL,
          children: [
            /* @__PURE__ */ jsxs("box", { spacing: 2, orientation: Gtk2.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(
                "button",
                {
                  class: "media-title-btn",
                  onClicked: () => {
                    try {
                      const hypr4 = Hyprland5.get_default();
                      hypr4.dispatch("focuswindow", `class:${player.entry}`);
                    } catch (e) {
                      print("focus failed", String(e));
                    }
                  },
                  children: /* @__PURE__ */ jsx(
                    "label",
                    {
                      class: "media-panel__track-title",
                      xalign: 0,
                      ellipsize: 3,
                      maxWidthChars: 28,
                      label: title
                    }
                  )
                }
              ),
              /* @__PURE__ */ jsx(With, { value: album, children: (a) => /* @__PURE__ */ jsx(
                "label",
                {
                  class: "media-panel__track-artist",
                  xalign: 0,
                  ellipsize: 3,
                  maxWidthChars: 28,
                  label: a || artist
                }
              ) })
            ] }),
            /* @__PURE__ */ jsxs("box", { halign: Gtk2.Align.START, class: "media-panel__controls", visible: false, children: [
              /* @__PURE__ */ jsx("button", { sensitive: canPrev, onClicked: () => player.previous(), children: /* @__PURE__ */ jsx("image", { iconName: "media-skip-backward-symbolic" }) }),
              /* @__PURE__ */ jsx(
                "button",
                {
                  sensitive: canControl,
                  onClicked: () => player.play_pause(),
                  children: /* @__PURE__ */ jsx(With, { value: status, children: (s) => /* @__PURE__ */ jsx(
                    "image",
                    {
                      iconName: s === Mpris2.PlaybackStatus.PLAYING ? "media-playback-pause-symbolic" : "media-playback-start-symbolic"
                    }
                  ) })
                }
              ),
              /* @__PURE__ */ jsx("button", { sensitive: canNext, onClicked: () => player.next(), children: /* @__PURE__ */ jsx("image", { iconName: "media-skip-forward-symbolic" }) })
            ] })
          ]
        }
      )
    ] });
  } });
}

// widget/mediaplayer/components/MediaPopup.tsx
function MediaPopup() {
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "media-panel",
      class: "media-popup",
      application: app_default,
      visible: mediaPanelVisible,
      anchor: Astal2.WindowAnchor.BOTTOM | Astal2.WindowAnchor.RIGHT,
      children: /* @__PURE__ */ jsx(
        "revealer",
        {
          transitionType: Gtk2.RevealerTransitionType.SLIDE_UP,
          revealChild: mediaPanelVisible,
          children: /* @__PURE__ */ jsx("box", { class: "media-popup__container", children: /* @__PURE__ */ jsx(MediaPanel, {}) })
        }
      )
    }
  );
}

// app.ts
app_default.start({
  css: main_default,
  main() {
    app_default.get_monitors().map(Bar);
    MediaPopup();
    NotificationRack();
    NotificationCenterWindow();
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvc3JjL19hcHAudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvc2NvcGUudHMiLCAic2FzczovaG9tZS9qb2huL2RvdGZpbGVzL3N0b3cvYWdzLy5jb25maWcvYWdzL3N0eWxlcy9tYWluLnNjc3MiLCAiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvZ3RrNC9pbmRleC50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2pzeC9qc3gudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvc3RhdGUudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy91dGlsLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvanN4L2Vudi50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2dub21lL3NpZ25hbFRyYWNrZXIudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvRm9yLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvanN4L1dpdGgudHMiLCAid2lkZ2V0L3dvcmtzcGFjZXMvc2VydmljZS50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL3NyYy9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvZ3RrNC9qc3gtcnVudGltZS50cyIsICJ3aWRnZXQvd29ya3NwYWNlcy9jb21wb25lbnRzL1dvcmtzcGFjZXMudHN4IiwgIndpZGdldC9zeXN0ZW10cmF5L3NlcnZpY2UudHMiLCAid2lkZ2V0L3N5c3RlbXRyYXkvY29tcG9uZW50cy9TeXN0ZW1UcmF5LnRzeCIsICJ3aWRnZXQvd2luZG93dGl0bGUvc2VydmljZS50cyIsICJ3aWRnZXQvd2luZG93dGl0bGUvY29tcG9uZW50cy9XaW5kb3dUaXRsZS50c3giLCAiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvcHJvY2Vzcy50cyIsICJ3aWRnZXQvY2F2YS9zZXJ2aWNlLnRzIiwgIndpZGdldC9tZWRpYXBsYXllci9zZXJ2aWNlLnRzIiwgIndpZGdldC9jYXZhL2NvbXBvbmVudHMvQ2F2YVZpc3VhbGl6ZXIudHN4IiwgIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvc3JjL3RpbWUudHMiLCAid2lkZ2V0L3N5c3RlbXRlbXAvc2VydmljZS50cyIsICJ3aWRnZXQvc3lzdGVtdGVtcC9jb21wb25lbnRzL1N5c3RlbVRlbXAudHN4IiwgIndpZGdldC93ZWF0aGVyL1NlcnZpY2UudHMiLCAid2lkZ2V0L3dlYXRoZXIvY29tcG9uZW50cy9XZWF0aGVyRGlzcGxheS50c3giLCAid2lkZ2V0L3RpbWVkaXNwbGF5L1NlcnZpY2UudHMiLCAid2lkZ2V0L3RpbWVkaXNwbGF5L2NvbXBvbmVudHMvVGltZURpc3BsYXkudHN4IiwgIndpZGdldC9ibHVldG9vdGgvY29tcG9uZW50cy9CbHVldG9vdGhCdXR0b24udHN4IiwgIndpZGdldC9ibHVldG9vdGgvc2VydmljZS50cyIsICJ3aWRnZXQvbm90aWZpY2F0aW9ucy9zZXJ2aWNlLnRzIiwgIndpZGdldC9ub3RpZmljYXRpb25zL3V0aWxzLnRzIiwgIndpZGdldC9ub3RpZmljYXRpb25zL2NvbXBvbmVudHMvTm90aWZpY2F0aW9uUmFjay50c3giLCAid2lkZ2V0L25vdGlmaWNhdGlvbnMvY29tcG9uZW50cy9Ob3RpZmljYXRpb25DZW50ZXIudHN4IiwgIndpZGdldC9ub3RpZmljYXRpb25zL2NvbXBvbmVudHMvTm90aWZpY2F0aW9uQnV0dG9uLnRzeCIsICJ3aWRnZXQvQmFyLnRzeCIsICJ3aWRnZXQvbWVkaWFwbGF5ZXIvY29tcG9uZW50cy9NZWRpYVBhbmVsLnRzeCIsICJ3aWRnZXQvbWVkaWFwbGF5ZXIvY29tcG9uZW50cy9NZWRpYVBvcHVwLnRzeCIsICJhcHAudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IG1rQXBwIH0gZnJvbSBcIi4uL19hcHAuanNcIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbmV4cG9ydCBkZWZhdWx0IG1rQXBwKEFzdGFsLkFwcGxpY2F0aW9uKVxuIiwgIi8qKlxuICogV29ya2Fyb3VuZCBmb3IgXCJDYW4ndCBjb252ZXJ0IG5vbi1udWxsIHBvaW50ZXIgdG8gSlMgdmFsdWUgXCJcbiAqL1xuXG5leHBvcnQge31cblxuZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXyQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKChtKSA9PiBwYXRjaChtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG59XG5cbmZ1bmN0aW9uIHBhdGNoPFAgZXh0ZW5kcyBvYmplY3Q+KHByb3RvOiBQLCBwcm9wOiBFeHRyYWN0PGtleW9mIFAsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKClcbiAgICAgICAgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZW5kcG9pbnRzXCIpXG4gICAgcGF0Y2goV3AucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwibWljcm9waG9uZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3BlYWtlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzaW5rc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzb3VyY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxUcmF5XCIpLCAoeyBUcmF5IH0pID0+IHtcbiAgICBwYXRjaChUcmF5LnByb3RvdHlwZSwgXCJpdGVtc1wiKVxufSlcbiIsICJpbXBvcnQgXCIuL292ZXJyaWRlcy5qc1wiXG5pbXBvcnQgeyBzZXRDb25zb2xlTG9nRG9tYWluIH0gZnJvbSBcImNvbnNvbGVcIlxuaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tIFwic3lzdGVtXCJcbmltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tIFwiLi4vZ25pbS9zcmMvanN4L3Njb3BlLmpzXCJcbmltcG9ydCBJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWwzIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249My4wXCJcbmltcG9ydCB0eXBlIEFzdGFsNCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5cbnR5cGUgQ29uZmlnID0gUGFydGlhbDx7XG4gICAgaW5zdGFuY2VOYW1lOiBzdHJpbmdcbiAgICBjc3M6IHN0cmluZ1xuICAgIGljb25zOiBzdHJpbmdcbiAgICBndGtUaGVtZTogc3RyaW5nXG4gICAgaWNvblRoZW1lOiBzdHJpbmdcbiAgICBjdXJzb3JUaGVtZTogc3RyaW5nXG4gICAgaG9sZDogYm9vbGVhblxuICAgIHJlcXVlc3RIYW5kbGVyKHJlcXVlc3Q6IHN0cmluZywgcmVzOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZCk6IHZvaWRcbiAgICBtYWluKC4uLmFyZ3M6IHN0cmluZ1tdKTogdm9pZFxuICAgIGNsaWVudChtZXNzYWdlOiAobXNnOiBzdHJpbmcpID0+IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXN0YWwzSlMgZXh0ZW5kcyBBc3RhbDMuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI6IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG5pbnRlcmZhY2UgQXN0YWw0SlMgZXh0ZW5kcyBBc3RhbDQuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldD86IGJvb2xlYW4pOiB2b2lkXG4gICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZFxuICAgIHN0YXJ0KGNvbmZpZz86IENvbmZpZyk6IHZvaWRcbn1cblxudHlwZSBBcHAzID0gdHlwZW9mIEFzdGFsMy5BcHBsaWNhdGlvblxudHlwZSBBcHA0ID0gdHlwZW9mIEFzdGFsNC5BcHBsaWNhdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwMz4oQXBwOiBBcHApOiBBc3RhbDNKU1xuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwPEFwcCBleHRlbmRzIEFwcDQ+KEFwcDogQXBwKTogQXN0YWw0SlNcblxuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwKEFwcDogQXBwMyB8IEFwcDQpIHtcbiAgICByZXR1cm4gbmV3IChjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHtcbiAgICAgICAgcHJpdmF0ZSBkaXNwb3NlUm9vdD86ICgpID0+IHZvaWRcblxuICAgICAgICBzdGF0aWMge1xuICAgICAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiBcIkFzdGFsSlNcIiB9LCB0aGlzIGFzIGFueSlcbiAgICAgICAgfVxuXG4gICAgICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmbiA9IEZ1bmN0aW9uKGByZXR1cm4gKGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHtib2R5LmluY2x1ZGVzKFwiO1wiKSA/IGJvZHkgOiBgcmV0dXJuICR7Ym9keX07YH1cbiAgICAgICAgICAgICAgICAgICAgfSlgKVxuICAgICAgICAgICAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlailcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWooZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3RIYW5kbGVyPzogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cblxuICAgICAgICB2ZnVuY19zaHV0ZG93bigpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnZmdW5jX3NodXRkb3duKClcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3Q/LigpXG4gICAgICAgIH1cblxuICAgICAgICB2ZnVuY19yZXF1ZXN0KG1zZzogc3RyaW5nLCBjb25uOiBHaW8uU29ja2V0Q29ubmVjdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyKG1zZywgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIElPLndyaXRlX3NvY2soY29ubiwgU3RyaW5nKHJlc3BvbnNlKSwgKF8sIHJlcykgPT4gSU8ud3JpdGVfc29ja19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdXBlci52ZnVuY19yZXF1ZXN0KG1zZywgY29ubilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgICAgICBzdXBlci5hcHBseV9jc3Moc3R5bGUsIHJlc2V0KVxuICAgICAgICB9XG5cbiAgICAgICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgICAgIGV4aXQoY29kZSA/PyAwKVxuICAgICAgICB9XG5cbiAgICAgICAgc3RhcnQoeyByZXF1ZXN0SGFuZGxlciwgY3NzLCBob2xkLCBtYWluLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfTogQ29uZmlnID0ge30pIHtcbiAgICAgICAgICAgIGNvbnN0IGFwcCA9IHRoaXMgYXMgdW5rbm93biBhcyBJbnN0YW5jZVR5cGU8QXBwMyB8IEFwcDQ+XG5cbiAgICAgICAgICAgIGNsaWVudCA/Pz0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSBcIiR7YXBwLmluc3RhbmNlTmFtZX1cIiBhbHJlYWR5IHJ1bm5pbmdgKVxuICAgICAgICAgICAgICAgIGV4aXQoMSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG4gICAgICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpXG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSByZXF1ZXN0SGFuZGxlclxuICAgICAgICAgICAgYXBwLmNvbm5lY3QoXCJhY3RpdmF0ZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2VSb290ID0gZGlzcG9zZVxuICAgICAgICAgICAgICAgICAgICBtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXBwLmFjcXVpcmVfc29ja2V0KClcbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQoKG1zZykgPT4gSU8uc2VuZF9yZXF1ZXN0KGFwcC5pbnN0YW5jZU5hbWUsIG1zZykhLCAuLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSlcblxuICAgICAgICAgICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgICAgICBob2xkID8/PSB0cnVlXG4gICAgICAgICAgICBpZiAoaG9sZCkgYXBwLmhvbGQoKVxuXG4gICAgICAgICAgICBhcHAucnVuQXN5bmMoW10pXG4gICAgICAgIH1cbiAgICB9KSgpXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgIkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuQGtleWZyYW1lcyBmYWRlSW5TbG93IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxud2luZG93LkJhciB7XG4gIGFuaW1hdGlvbjogZmFkZUluIDAuM3MgZWFzZS1vdXQ7XG59XG5cbndpbmRvdy5ub3RpZmljYXRpb24tY2VudGVyLXdpbmRvdyB7XG4gIGFuaW1hdGlvbjogZmFkZUluU2xvdyAwLjRzIGVhc2Utb3V0O1xufVxuXG53aW5kb3cuY29udHJvbC1wYW5lbC13aW5kb3cge1xuICBhbmltYXRpb246IGZhZGVJbiAwLjNzIGVhc2Utb3V0O1xufVxuXG53aW5kb3cuTm90aWZpY2F0aW9uUG9wdXAge1xuICBhbmltYXRpb246IGZhZGVJbiAwLjJzIGVhc2Utb3V0O1xufVxuXG53aW5kb3cge1xuICBhbmltYXRpb246IGZhZGVJbiAwLjJzIGVhc2Utb3V0O1xufVxuXG5idXR0b24sIGJveCB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xNXMgZWFzZS1pbi1vdXQ7XG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjE1cyBlYXNlLWluLW91dDtcbn1cblxuLmJhciB7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG59XG4uYmFyIGNlbnRlcmJveCAuYmFyLXNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjgsIDI4LCAzNCwgMC40KTtcbiAgZ2FwOiAycHg7XG59XG4uYmFyIGNlbnRlcmJveCAuYmFyLXNlY3Rpb24gYnV0dG9uIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xufVxuLmJhciBjZW50ZXJib3ggLmJhci1zZWN0aW9uIGJ1dHRvbjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5iYXIgY2VudGVyYm94IC5iYXItc2VjdGlvbiBidXR0b24uYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTtcbn1cbi5iYXIgY2VudGVyYm94IC5iYXItc2VjdGlvbiBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5iYXIgY2VudGVyYm94IC5iYXItc2VjdGlvbiBidXR0b24uYmFyLXNlY3Rpb25fX2J1dHRvbi0tYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44NSk7XG59XG4uYmFyIGNlbnRlcmJveCAuYmFyLXNlY3Rpb24gLmJhci1zZWN0aW9uX19zZXBhcmF0b3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDMpO1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIG1pbi13aWR0aDogMXB4O1xuICBtYXJnaW46IDAgMnB4O1xufVxuLmJhciBjZW50ZXJib3ggLmJhci1zZWN0aW9uLS1sZWZ0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuLmJhciBjZW50ZXJib3ggLmJhci1zZWN0aW9uLS1jZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5iYXIgY2VudGVyYm94IC5iYXItc2VjdGlvbi0tcmlnaHQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG53aW5kb3cuYXVkaW8tY29udHJvbHMtd2luZG93IHtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xufVxuXG4uYXVkaW8tcGFuZWwsIGJveC5BdWRpb1BhbmVsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiA4cHg7XG4gIGdhcDogNHB4O1xuICBtaW4td2lkdGg6IDIwMHB4O1xufVxuLmF1ZGlvLXBhbmVsIC5hdWRpby1wYW5lbF9fc2xpZGVyLCBib3guQXVkaW9QYW5lbCAuYXVkaW8tcGFuZWxfX3NsaWRlciwgYm94LkF1ZGlvUGFuZWwgc2NhbGUge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgZmxleDogMTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG59XG4uYXVkaW8tcGFuZWwgLmF1ZGlvLXBhbmVsX19zbGlkZXIgdHJvdWdoLCBib3guQXVkaW9QYW5lbCAuYXVkaW8tcGFuZWxfX3NsaWRlciB0cm91Z2gsIGJveC5BdWRpb1BhbmVsIHNjYWxlIHRyb3VnaCB7XG4gIG1pbi1oZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMzAsIDM0LCAwLjYpO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xufVxuLmF1ZGlvLXBhbmVsIC5hdWRpby1wYW5lbF9fc2xpZGVyIGhpZ2hsaWdodCwgYm94LkF1ZGlvUGFuZWwgLmF1ZGlvLXBhbmVsX19zbGlkZXIgaGlnaGxpZ2h0LCBib3guQXVkaW9QYW5lbCBzY2FsZSBoaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBtaW4td2lkdGg6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG4gIG1pbi1oZWlnaHQ6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cbi5hdWRpby1wYW5lbCAuYXVkaW8tcGFuZWxfX3NsaWRlciBzbGlkZXIsIGJveC5BdWRpb1BhbmVsIC5hdWRpby1wYW5lbF9fc2xpZGVyIHNsaWRlciwgYm94LkF1ZGlvUGFuZWwgc2NhbGUgc2xpZGVyIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG59XG4uYXVkaW8tcGFuZWwgLmF1ZGlvLXBhbmVsX19zbGlkZXIgc2xpZGVyOmhvdmVyLCBib3guQXVkaW9QYW5lbCAuYXVkaW8tcGFuZWxfX3NsaWRlciBzbGlkZXI6aG92ZXIsIGJveC5BdWRpb1BhbmVsIHNjYWxlIHNsaWRlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCAyMDAsIDIwMCwgMC45KTtcbn1cbi5hdWRpby1wYW5lbCAuYXVkaW8tcGFuZWxfX3NsaWRlciB0cm91Z2gsIGJveC5BdWRpb1BhbmVsIC5hdWRpby1wYW5lbF9fc2xpZGVyIHRyb3VnaCwgYm94LkF1ZGlvUGFuZWwgc2NhbGUgdHJvdWdoIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuLmF1ZGlvLXBhbmVsIC5hdWRpby1wYW5lbF9fc2xpZGVyIGhpZ2hsaWdodCwgYm94LkF1ZGlvUGFuZWwgLmF1ZGlvLXBhbmVsX19zbGlkZXIgaGlnaGxpZ2h0LCBib3guQXVkaW9QYW5lbCBzY2FsZSBoaWdobGlnaHQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG4uYXVkaW8tcGFuZWwgLmF1ZGlvLXBhbmVsX192b2x1bWUtbGFiZWwsIGJveC5BdWRpb1BhbmVsIC5hdWRpby1wYW5lbF9fdm9sdW1lLWxhYmVsLCBib3guQXVkaW9QYW5lbCBsYWJlbC52b2x1bWUtbGFiZWwge1xuICBjb2xvcjogcmdiYSgyMjAsIDIyMCwgMjIwLCAwLjgyKTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIG9wYWNpdHk6IDAuNztcbiAgbWluLXdpZHRoOiAzNXB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbi5hdWRpby1wYW5lbCAuYXVkaW8tcGFuZWxfX2ljb24sIGJveC5BdWRpb1BhbmVsIC5hdWRpby1wYW5lbF9faWNvbiB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgb3BhY2l0eTogMC45O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG4gIG1pbi13aWR0aDogMTNweDtcbn1cbi5hdWRpby1wYW5lbCAuYXVkaW8tcGFuZWxfX2ljb246aG92ZXIsIGJveC5BdWRpb1BhbmVsIC5hdWRpby1wYW5lbF9faWNvbjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5iYXR0ZXJ5LWRpc3BsYXkge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBtaW4td2lkdGg6IDE2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogMnB4IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgZ2FwOiAycHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xufVxuLmJhdHRlcnktZGlzcGxheTpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXkuYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cblxuLmJhdHRlcnktZGlzcGxheV9faWNvbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgb3BhY2l0eTogMC45O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgb3BhY2l0eTogMC45O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXlfX2ljb246aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLmJhdHRlcnktZGlzcGxheV9faWNvbjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4uYmF0dGVyeS1kaXNwbGF5X19pY29uLmFjdGl2ZSB7XG4gIG9wYWNpdHk6IDE7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuODUpO1xufVxuLmJhdHRlcnktZGlzcGxheV9faWNvbi5iYXR0ZXJ5LWRpc3BsYXlfX2ljb24tLWNoYXJnaW5nIHtcbiAgY29sb3I6IHJnYmEoMTAwLCAyMDAsIDEwMCwgMC44KTtcbiAgYW5pbWF0aW9uOiBwdWxzZSAycyBpbmZpbml0ZTtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXlfX2ljb24uYmF0dGVyeS1kaXNwbGF5X19pY29uLS1jcml0aWNhbCB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMTAwLCAxMDAsIDAuODUpO1xuICBhbmltYXRpb246IHB1bHNlIDFzIGluZmluaXRlO1xufVxuXG4uYmF0dGVyeS1kaXNwbGF5X19sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXlfX2xhYmVsLmJhdHRlcnktZGlzcGxheV9fbGFiZWwtLWNyaXRpY2FsIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAxMDAsIDEwMCwgMC44NSk7XG59XG4uYmF0dGVyeS1kaXNwbGF5X19sYWJlbC5iYXR0ZXJ5LWRpc3BsYXlfX2xhYmVsLS1sb3cge1xuICBjb2xvcjogcmdiYSgyNTUsIDIwMCwgODAsIDAuOSk7XG59XG4uYmF0dGVyeS1kaXNwbGF5X19sYWJlbC5iYXR0ZXJ5LWRpc3BsYXlfX2xhYmVsLS1tZWRpdW0ge1xuICBjb2xvcjogcmdiYSgyMjAsIDIyMCwgMjIwLCAwLjgyKTtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXlfX2xhYmVsLmJhdHRlcnktZGlzcGxheV9fbGFiZWwtLWhpZ2gsIC5iYXR0ZXJ5LWRpc3BsYXlfX2xhYmVsLmJhdHRlcnktZGlzcGxheV9fbGFiZWwtLWZ1bGwge1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbn1cbi5iYXR0ZXJ5LWRpc3BsYXlfX2xhYmVsLmJhdHRlcnktZGlzcGxheV9fbGFiZWwtLWNoYXJnaW5nIHtcbiAgY29sb3I6IHJnYmEoMTAwLCAyMDAsIDEwMCwgMC44KTtcbn1cblxuQGtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDUwJSB7XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbi5tZWRpYS1wYW5lbCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjgsIDI4LCAzNCwgMC40KTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA2KTtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiAxMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIG1pbi13aWR0aDogMzIwcHg7XG59XG4ubWVkaWEtcGFuZWwgLm1lZGlhLXBhbmVsX19hcnR3b3JrIHtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIG1pbi13aWR0aDogNjRweDtcbiAgbWluLWhlaWdodDogNjRweDtcbn1cbi5tZWRpYS1wYW5lbCAubWVkaWEtcGFuZWxfX2luZm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGdhcDogMnB4O1xuICBmbGV4OiAxO1xufVxuLm1lZGlhLXBhbmVsIC5tZWRpYS1wYW5lbF9fY29udHJvbHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZ2FwOiA0cHg7XG59XG5cbi5tZWRpYS10aXRsZS1idG4ge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHBhZGRpbmc6IDJweDtcbn1cbi5tZWRpYS10aXRsZS1idG46aG92ZXIsIC5tZWRpYS10aXRsZS1idG46YWN0aXZlLCAubWVkaWEtdGl0bGUtYnRuOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG5cbi5tZWRpYS1wYW5lbF9fdHJhY2stdGl0bGUge1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIG1pbi13aWR0aDogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbn1cbi5tZWRpYS1wYW5lbF9fdHJhY2stdGl0bGU6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44NSk7XG59XG5cbi5tZWRpYS1wYW5lbF9fdHJhY2stYXJ0aXN0IHtcbiAgY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBvcGFjaXR5OiAwLjg1O1xuICBtaW4td2lkdGg6IDA7XG59XG5cbi5tZWRpYS1wYW5lbF9fdHJhY2stYWxidW0ge1xuICBjb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjY4KTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEwcHg7XG4gIG1pbi13aWR0aDogMDtcbn1cblxuLm1lZGlhLXBhbmVsX19jb250cm9scyAubWVkaWEtcGFuZWxfX2NvbnRyb2wtYnRuIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICBtaW4td2lkdGg6IDE0cHg7XG4gIHBhZGRpbmc6IDRweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5tZWRpYS1wYW5lbF9fY29udHJvbHMgLm1lZGlhLXBhbmVsX19jb250cm9sLWJ0bjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5tZWRpYS1wYW5lbF9fY29udHJvbHMgLm1lZGlhLXBhbmVsX19jb250cm9sLWJ0bi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLm1lZGlhLXBhbmVsX19jb250cm9scyAubWVkaWEtcGFuZWxfX2NvbnRyb2wtYnRuIGljb24ge1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ubWVkaWEtcGFuZWxfX2NvbnRyb2xzIC5tZWRpYS1wYW5lbF9fY29udHJvbC1idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5tZWRpYS1wYW5lbF9fY29udHJvbHMgLm1lZGlhLXBhbmVsX19jb250cm9sLWJ0bi5tZWRpYS1wYW5lbF9fY29udHJvbC1idG4tLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuODUpO1xuICBjb2xvcjogcmdiKDI1LCAyNSwgMjgpO1xufVxuLm1lZGlhLXBhbmVsX19jb250cm9scyAubWVkaWEtcGFuZWxfX2NvbnRyb2wtYnRuLm1lZGlhLXBhbmVsX19jb250cm9sLWJ0bi0tcHJpbWFyeTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjAwLCAyMDAsIDIwMCwgMC45KTtcbn1cbi5tZWRpYS1wYW5lbF9fY29udHJvbHMgLm1lZGlhLXBhbmVsX19jb250cm9sLWJ0bi5tZWRpYS1wYW5lbF9fY29udHJvbC1idG4tLXNlY29uZGFyeSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogcmdiYSgyMjAsIDIyMCwgMjIwLCAwLjgyKTtcbn1cbi5tZWRpYS1wYW5lbF9fY29udHJvbHMgLm1lZGlhLXBhbmVsX19jb250cm9sLWJ0bi5tZWRpYS1wYW5lbF9fY29udHJvbC1idG4tLXNlY29uZGFyeTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMjUpO1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbn1cbi5tZWRpYS1wYW5lbF9fY29udHJvbHMgLm1lZGlhLXBhbmVsX19wcm9ncmVzcyB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBtYXJnaW46IDRweCAwO1xuICBmbGV4OiAxO1xufVxuLm1lZGlhLXBhbmVsX19jb250cm9scyAubWVkaWEtcGFuZWxfX3Byb2dyZXNzIHRyb3VnaCB7XG4gIG1pbi1oZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMzAsIDM0LCAwLjYpO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xufVxuLm1lZGlhLXBhbmVsX19jb250cm9scyAubWVkaWEtcGFuZWxfX3Byb2dyZXNzIGhpZ2hsaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44NSk7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi13aWR0aDogMDtcbiAgb3V0bGluZTogbm9uZTtcbiAgbWluLWhlaWdodDogMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuLm1lZGlhLXBhbmVsX19jb250cm9scyAubWVkaWEtcGFuZWxfX3Byb2dyZXNzIHNsaWRlciB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44NSk7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xufVxuLm1lZGlhLXBhbmVsX19jb250cm9scyAubWVkaWEtcGFuZWxfX3Byb2dyZXNzIHNsaWRlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCAyMDAsIDIwMCwgMC45KTtcbn1cblxucG9wb3Zlci5tZWRpYS1wb3BvdmVyLFxucG9wb3Zlci5tZWRpYS1wb3BvdmVyICoge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxucG9wb3Zlci5tZWRpYS1wb3BvdmVyID4gY29udGVudHMsXG5wb3BvdmVyLm1lZGlhLXBvcG92ZXIgPiBib3gsXG5wb3BvdmVyLm1lZGlhLXBvcG92ZXIgPiB2aWV3cG9ydCxcbnBvcG92ZXIubWVkaWEtcG9wb3ZlciA+IGxpc3Qge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG59XG5cbnBvcG92ZXIubWVkaWEtcG9wb3ZlciAubWVkaWEtcGFuZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjI0KTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA2KTtcbn1cblxuLk5vdGlmaWNhdGlvbkJ1dHRvbiB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBwYWRkaW5nOiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi13aWR0aDogMTZweDtcbn1cbi5Ob3RpZmljYXRpb25CdXR0b246aG92ZXI6bm90KC5hY3RpdmUpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG4uTm90aWZpY2F0aW9uQnV0dG9uLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7XG59XG4uTm90aWZpY2F0aW9uQnV0dG9uIC5pY29uIHtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG59XG4uTm90aWZpY2F0aW9uQnV0dG9uIC5iYWRnZSB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDAgNHB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMjUpO1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgb3BhY2l0eTogMC43O1xufVxuLk5vdGlmaWNhdGlvbkJ1dHRvbiAuYmFkZ2UgbGFiZWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuLm5vdGlmaWNhdGlvbi1jZW50ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNik7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHBhZGRpbmc6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpO1xuICBtaW4td2lkdGg6IDUwMHB4O1xuICBtYXJnaW46IDRweCA0cHggMHB4IDRweDtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyLmFjdGl2ZSB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAzKTtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyIC5ub3RpZmljYXRpb25zLWhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA2KTtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyIC5ub3RpZmljYXRpb25zLWhlYWRlciAubm90aWZpY2F0aW9uLXRpdGxlIHtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyIC5ub3RpZmljYXRpb25zLWhlYWRlciAubm90aWZpY2F0aW9uLWNvdW50IHtcbiAgY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyIC5ub3RpZmljYXRpb24tbGlzdC1zY3JvbGwge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xuICBtaW4taGVpZ2h0OiA2MDBweDtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyIC5ub3RpZmljYXRpb24tbGlzdC1zY3JvbGwgc2Nyb2xsYmFyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyIC5ub3RpZmljYXRpb24tbGlzdC1zY3JvbGwgc2Nyb2xsYmFyIHRyb3VnaCB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuLm5vdGlmaWNhdGlvbi1jZW50ZXIgLm5vdGlmaWNhdGlvbi1saXN0LXNjcm9sbCBzY3JvbGxiYXIgc2xpZGVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjY4KTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBtaW4td2lkdGg6IDJweDtcbn1cbi5ub3RpZmljYXRpb24tY2VudGVyIC5ub3RpZmljYXRpb24tbGlzdC1zY3JvbGwgc2Nyb2xsYmFyIHNsaWRlcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG59XG4ubm90aWZpY2F0aW9uLWNlbnRlciAubm90aWZpY2F0aW9uLWxpc3Qge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiA0cHg7XG59XG5cbi5ub3RpZmljYXRpb24tcmFjayAucmFjay1jb250YWluZXIge1xuICBtaW4td2lkdGg6IDMyMHB4O1xufVxuLm5vdGlmaWNhdGlvbi1yYWNrIC5yYWNrLWl0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiA0cHg7XG59XG5cbkBrZXlmcmFtZXMgc2xpZGVJbiB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuLm5vdGlmaWNhdGlvbiB7XG4gIG1hcmdpbjogNHB4O1xufVxuLm5vdGlmaWNhdGlvbiAubm90aWZpY2F0aW9uLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjgsIDI4LCAzNCwgMC40KTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA2KTtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogOHB4O1xuICBtaW4td2lkdGg6IDI4MHB4O1xufVxuLm5vdGlmaWNhdGlvbiAubm90aWZpY2F0aW9uLWNvbnRhaW5lciAubm90aWZpY2F0aW9uLWhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcGFkZGluZy1ib3R0b206IDhweDtcbn1cbi5ub3RpZmljYXRpb24gLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi1oZWFkZXIgLmFwcC1pY29uIHtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICBtaW4taGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbn1cbi5ub3RpZmljYXRpb24gLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi1oZWFkZXIgLmFwcC1uYW1lIHtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbi5ub3RpZmljYXRpb24gLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi1oZWFkZXIgLnRpbWVzdGFtcCB7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuNjgpO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xufVxuLm5vdGlmaWNhdGlvbiAubm90aWZpY2F0aW9uLWNvbnRhaW5lciAubm90aWZpY2F0aW9uLWhlYWRlciAuY2xvc2UtYnRuIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICBwYWRkaW5nOiAycHg7XG4gIG9wYWNpdHk6IDAuNztcbn1cbi5ub3RpZmljYXRpb24gLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi1oZWFkZXIgLmNsb3NlLWJ0bjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5ub3RpZmljYXRpb24gLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi1oZWFkZXIgLmNsb3NlLWJ0bi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLm5vdGlmaWNhdGlvbiAubm90aWZpY2F0aW9uLWNvbnRhaW5lciAubm90aWZpY2F0aW9uLWhlYWRlciAuY2xvc2UtYnRuOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cbi5ub3RpZmljYXRpb24gLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi1ib2R5IC50ZXh0LWNvbnRlbnQgLnN1bW1hcnkge1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG4ubm90aWZpY2F0aW9uIC5ub3RpZmljYXRpb24tY29udGFpbmVyIC5ub3RpZmljYXRpb24tYm9keSAudGV4dC1jb250ZW50IC5ib2R5IHtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgb3BhY2l0eTogMC43O1xufVxuXG4ud2luZG93LXRpdGxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ud2luZG93LXRpdGxlIC53aW5kb3ctdGl0bGVfX2NvbnRhaW5lciwgLndpbmRvdy10aXRsZSBib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogMCA4cHg7XG4gIGdhcDogNHB4O1xuICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuLndpbmRvdy10aXRsZSAud2luZG93LXRpdGxlX19jb250YWluZXIgLndpbmRvdy10aXRsZV9faWNvbiwgLndpbmRvdy10aXRsZSBib3ggLndpbmRvdy10aXRsZV9faWNvbiwgLndpbmRvdy10aXRsZSBib3ggaWNvbiB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgb3BhY2l0eTogMC45O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG4gIG9wYWNpdHk6IDAuOTtcbiAgbWluLXdpZHRoOiAxMnB4O1xufVxuLndpbmRvdy10aXRsZSAud2luZG93LXRpdGxlX19jb250YWluZXIgLndpbmRvdy10aXRsZV9faWNvbjpob3ZlciwgLndpbmRvdy10aXRsZSBib3ggLndpbmRvdy10aXRsZV9faWNvbjpob3ZlciwgLndpbmRvdy10aXRsZSBib3ggaWNvbjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4ud2luZG93LXRpdGxlIC53aW5kb3ctdGl0bGVfX2NvbnRhaW5lciAud2luZG93LXRpdGxlX190ZXh0LCAud2luZG93LXRpdGxlIGJveCAud2luZG93LXRpdGxlX190ZXh0LCAud2luZG93LXRpdGxlIGJveCBsYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG1heC13aWR0aDogMjAwcHg7XG59XG4ud29ya3NwYWNlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBnYXA6IDJweDtcbn1cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2Uge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBtaW4td2lkdGg6IDE2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBwYWRkaW5nOiA0cHg7XG4gIG1pbi13aWR0aDogMTJweDtcbiAgbWluLWhlaWdodDogMTJweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAyMDBtcyBlYXNlLWluLW91dDtcbn1cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2U6aG92ZXI6bm90KC5hY3RpdmUpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG4ud29ya3NwYWNlcyAud29ya3NwYWNlLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7XG59XG4ud29ya3NwYWNlcyAud29ya3NwYWNlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG4ud29ya3NwYWNlcyAud29ya3NwYWNlOmhvdmVyOm5vdCgud29ya3NwYWNlLS1mb2N1c2VkKSB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMjUpO1xufVxuLndvcmtzcGFjZXMgLndvcmtzcGFjZS53b3Jrc3BhY2UtLWZvY3VzZWQge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLndvcmtzcGFjZXMgLndvcmtzcGFjZV9faW5kaWNhdG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB0cmFuc2l0aW9uOiBtaW4td2lkdGggMjAwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi1oZWlnaHQ6IDJweDtcbiAgbWluLXdpZHRoOiA4cHg7XG59XG4ud29ya3NwYWNlcyAud29ya3NwYWNlX19pbmRpY2F0b3Iud29ya3NwYWNlX19pbmRpY2F0b3ItLWZvY3VzZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuODUpO1xuICBtaW4td2lkdGg6IDE2cHg7XG4gIG1pbi1oZWlnaHQ6IDJweDtcbn1cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2VfX2luZGljYXRvci53b3Jrc3BhY2VfX2luZGljYXRvci0tb2NjdXBpZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIyMCwgMjIwLCAyMjAsIDAuODIpO1xuICBtaW4td2lkdGg6IDRweDtcbn1cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2VfX2luZGljYXRvci53b3Jrc3BhY2VfX2luZGljYXRvci0tZW1wdHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuNjgpO1xuICBtaW4td2lkdGg6IDJweDtcbn1cblxuLmNvbnRyb2wtcGFuZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNik7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHBhZGRpbmc6IDhweDtcbiAgbWFyZ2luOiA0cHggOHB4O1xuICBtaW4td2lkdGg6IDMyMHB4O1xufVxuLmNvbnRyb2wtcGFuZWwgLmNvbnRyb2wtcGFuZWxfX2hlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAzKTtcbn1cbi5jb250cm9sLXBhbmVsIC5jb250cm9sLXBhbmVsX19jb250ZW50IHtcbiAgcGFkZGluZzogOHB4O1xuICBkaXNwbGF5OiBncmlkO1xuICBnYXA6IDhweDtcbn1cbi5jb250cm9sLXBhbmVsIC5jb250cm9sLXBhbmVsX193aWRnZXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNik7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHBhZGRpbmc6IDRweDtcbiAgYmFja2dyb3VuZDogcmdiYSgzMiwgMzIsIDM2LCAwLjgpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDMpO1xufVxuLmNvbnRyb2wtcGFuZWwgLmNvbnRyb2wtcGFuZWxfX3dpZGdldDpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMzgsIDM4LCA0MiwgMC45KTtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpO1xufVxuLmNvbnRyb2wtcGFuZWwgLmNvbnRyb2wtcGFuZWxfX3NlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDRweDtcbn1cbi5jb250cm9sLXBhbmVsIC5jb250cm9sLXBhbmVsX19zZWN0aW9uIC5jb250cm9sLXBhbmVsX19zZWN0aW9uLXRpdGxlIHtcbiAgY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xufVxuXG4uc3lzdGVtLWNvbnRyb2wtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIHBhZGRpbmc6IDhweDtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0biB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBwYWRkaW5nOiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi13aWR0aDogMTZweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0bjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0bi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuOmhvdmVyIHtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG59XG4uc3lzdGVtLWNvbnRyb2wtY29udGFpbmVyIC5zeXN0ZW0tY29udHJvbC1idG4gaWNvbiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0bi5sb2NrLWJ0bjpob3ZlciB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBwYWRkaW5nOiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi13aWR0aDogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjMpO1xuICBjb2xvcjogcmdiYSgyMDAsIDIwMCwgMjAwLCAwLjkpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuLmxvY2stYnRuOmhvdmVyOmhvdmVyOm5vdCguYWN0aXZlKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMjUpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuLmxvY2stYnRuOmhvdmVyLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7XG59XG4uc3lzdGVtLWNvbnRyb2wtY29udGFpbmVyIC5zeXN0ZW0tY29udHJvbC1idG4ubG9jay1idG46aG92ZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuNCk7XG59XG4uc3lzdGVtLWNvbnRyb2wtY29udGFpbmVyIC5zeXN0ZW0tY29udHJvbC1idG4uc2xlZXAtYnRuOmhvdmVyIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjAwLCA4MCwgMC4yKTtcbiAgY29sb3I6IHJnYmEoMjU1LCAyMDAsIDgwLCAwLjkpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuLnNsZWVwLWJ0bjpob3Zlcjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0bi5zbGVlcC1idG46aG92ZXIuYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0bi5zbGVlcC1idG46aG92ZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjAwLCA4MCwgMC4zKTtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0bi5zaHV0ZG93bi1idG46aG92ZXIge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBtaW4td2lkdGg6IDE2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAxMDAsIDEwMCwgMC4yKTtcbiAgY29sb3I6IHJnYmEoMjU1LCAxMDAsIDEwMCwgMC44NSk7XG59XG4uc3lzdGVtLWNvbnRyb2wtY29udGFpbmVyIC5zeXN0ZW0tY29udHJvbC1idG4uc2h1dGRvd24tYnRuOmhvdmVyOmhvdmVyOm5vdCguYWN0aXZlKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMjUpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuLnNodXRkb3duLWJ0bjpob3Zlci5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuLnNodXRkb3duLWJ0bjpob3Zlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAxMDAsIDEwMCwgMC4zKTtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgLnN5c3RlbS1jb250cm9sLWJ0bi5zaHV0ZG93bi1idG4uY29uZmlybS1wZW5kaW5nIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMTAwLCAxMDAsIDAuMyk7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMTAwLCAxMDAsIDAuODUpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuLnNodXRkb3duLWJ0bi5jb25maXJtLXBlbmRpbmc6aG92ZXI6bm90KC5hY3RpdmUpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG4uc3lzdGVtLWNvbnRyb2wtY29udGFpbmVyIC5zeXN0ZW0tY29udHJvbC1idG4uc2h1dGRvd24tYnRuLmNvbmZpcm0tcGVuZGluZy5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciAuc3lzdGVtLWNvbnRyb2wtYnRuLnNodXRkb3duLWJ0bi5jb25maXJtLXBlbmRpbmc6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMTAwLCAxMDAsIDAuNCk7XG59XG5cbi5pbmxpbmUtY29uZmlybWF0aW9uLW92ZXJsYXkgLmNvbmZpcm1hdGlvbi1oZWFkZXIgLmNvbmZpcm1hdGlvbi10aXRsZSB7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi1ib3R0b206IDRweDtcbn1cbi5pbmxpbmUtY29uZmlybWF0aW9uLW92ZXJsYXkgLmNvbmZpcm1hdGlvbi1idXR0b25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGdhcDogOHB4O1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4uaW5saW5lLWNvbmZpcm1hdGlvbi1vdmVybGF5IC5jb25maXJtYXRpb24tYnV0dG9ucyAuY2FuY2VsLWJ0biB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBwYWRkaW5nOiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi13aWR0aDogMTZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA2KTtcbiAgbWluLXdpZHRoOiA2MHB4O1xuICBwYWRkaW5nOiA0cHggOHB4O1xufVxuLmlubGluZS1jb25maXJtYXRpb24tb3ZlcmxheSAuY29uZmlybWF0aW9uLWJ1dHRvbnMgLmNhbmNlbC1idG46aG92ZXI6bm90KC5hY3RpdmUpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG4uaW5saW5lLWNvbmZpcm1hdGlvbi1vdmVybGF5IC5jb25maXJtYXRpb24tYnV0dG9ucyAuY2FuY2VsLWJ0bi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLmlubGluZS1jb25maXJtYXRpb24tb3ZlcmxheSAuY29uZmlybWF0aW9uLWJ1dHRvbnMgLmNhbmNlbC1idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbiAgY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC45Nik7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAzKTtcbn1cbi5pbmxpbmUtY29uZmlybWF0aW9uLW92ZXJsYXkgLmNvbmZpcm1hdGlvbi1idXR0b25zIC5jb25maXJtLWJ0biB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBwYWRkaW5nOiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi13aWR0aDogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDEwMCwgMTAwLCAwLjg1KTtcbiAgY29sb3I6IHJnYig2MCwgMCwgMCk7XG4gIG1pbi13aWR0aDogNjBweDtcbiAgcGFkZGluZzogNHB4IDhweDtcbn1cbi5pbmxpbmUtY29uZmlybWF0aW9uLW92ZXJsYXkgLmNvbmZpcm1hdGlvbi1idXR0b25zIC5jb25maXJtLWJ0bjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5pbmxpbmUtY29uZmlybWF0aW9uLW92ZXJsYXkgLmNvbmZpcm1hdGlvbi1idXR0b25zIC5jb25maXJtLWJ0bi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLmlubGluZS1jb25maXJtYXRpb24tb3ZlcmxheSAuY29uZmlybWF0aW9uLWJ1dHRvbnMgLmNvbmZpcm0tYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDEwMCwgMTAwLCAwLjg1KTtcbn1cblxuLnN5c3RlbS1jb250cm9sLWNvbnRhaW5lciBzdGFjayB7XG4gIHRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbn1cbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgc3RhY2sgLnN5c3RlbS1jb250cm9scyxcbi5zeXN0ZW0tY29udHJvbC1jb250YWluZXIgc3RhY2sgLmNvbmZpcm1hdGlvbi1jb250YWluZXIge1xuICBtaW4taGVpZ2h0OiA0OHB4O1xufVxuXG4uQXBwTGF1bmNoZXJXaW5kb3cge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG59XG5cbi5BcHBMYXVuY2hlciAuc2VhcmNoLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjgsIDI4LCAzNCwgMC40KTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA2KTtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDMpO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIHBhZGRpbmc6IDEycHggMTZweDtcbn1cbi5BcHBMYXVuY2hlciAuc2VhcmNoLWNvbnRhaW5lciAudHlwZWQtdGV4dCB7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5BcHBMYXVuY2hlciAuc2VhcmNoLWNvbnRhaW5lciAucHJldmlldy1jb21wbGV0aW9uIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC42OCk7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5BcHBMYXVuY2hlciAuc2VhcmNoLWNvbnRhaW5lciAucHJldmlldy1yZXN1bHQge1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjg1KTtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLkFwcExhdW5jaGVyIC5zZWFyY2gtY29udGFpbmVyIC5wcmV2aWV3LWljb24ge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xufVxuLkFwcExhdW5jaGVyIC5zZWFyY2gtY29udGFpbmVyIC5zZWFyY2gtZW50cnksXG4uQXBwTGF1bmNoZXIgLnNlYXJjaC1jb250YWluZXIgZW50cnkuc2VhcmNoLWVudHJ5IHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5BcHBMYXVuY2hlciAuc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLWVudHJ5OmhvdmVyLFxuLkFwcExhdW5jaGVyIC5zZWFyY2gtY29udGFpbmVyIGVudHJ5LnNlYXJjaC1lbnRyeTpob3ZlciB7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5BcHBMYXVuY2hlciAuc2VhcmNoLWNvbnRhaW5lciAuc2VhcmNoLWVudHJ5OmZvY3VzLFxuLkFwcExhdW5jaGVyIC5zZWFyY2gtY29udGFpbmVyIGVudHJ5LnNlYXJjaC1lbnRyeTpmb2N1cyB7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5BcHBMYXVuY2hlciAuc2VhcmNoLWNvbnRhaW5lciAuY3VzdG9tLXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC42OCk7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5BcHBMYXVuY2hlciAucmVjZW50LWFwcHMtY29udGFpbmVyIHtcbiAgY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxM3B4O1xufVxuLkFwcExhdW5jaGVyIC5yZWNlbnQtYXBwcy1jb250YWluZXIgLnJlY2VudC1hcHBzLWhlYWRlciB7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbn1cbi5BcHBMYXVuY2hlciAucmVjZW50LWFwcHMtY29udGFpbmVyIC5yZWNlbnQtYXBwcy1ncmlkIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTIwcHgsIDFmcikpO1xuICBnYXA6IDhweDtcbn1cbi5BcHBMYXVuY2hlciAucmVjZW50LWFwcHMtY29udGFpbmVyIGJ1dHRvbi5yZWNlbnQtYXBwLWl0ZW0sXG4uQXBwTGF1bmNoZXIgLnJlY2VudC1hcHBzLWNvbnRhaW5lciAucmVjZW50LWFwcC1pdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMTJweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDMpO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gIGdhcDogNHB4O1xuICBtaW4taGVpZ2h0OiA4MHB4O1xufVxuLkFwcExhdW5jaGVyIC5yZWNlbnQtYXBwcy1jb250YWluZXIgYnV0dG9uLnJlY2VudC1hcHAtaXRlbTpob3Zlcixcbi5BcHBMYXVuY2hlciAucmVjZW50LWFwcHMtY29udGFpbmVyIC5yZWNlbnQtYXBwLWl0ZW06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5BcHBMYXVuY2hlciAucmVjZW50LWFwcHMtY29udGFpbmVyIGJ1dHRvbi5yZWNlbnQtYXBwLWl0ZW06aG92ZXIsXG4uQXBwTGF1bmNoZXIgLnJlY2VudC1hcHBzLWNvbnRhaW5lciAucmVjZW50LWFwcC1pdGVtOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAzKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XG59XG4uQXBwTGF1bmNoZXIgLnJlY2VudC1hcHBzLWNvbnRhaW5lciBidXR0b24ucmVjZW50LWFwcC1pdGVtIC5yZWNlbnQtYXBwLWl0ZW1fX2ljb24sXG4uQXBwTGF1bmNoZXIgLnJlY2VudC1hcHBzLWNvbnRhaW5lciAucmVjZW50LWFwcC1pdGVtIC5yZWNlbnQtYXBwLWl0ZW1fX2ljb24ge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xufVxuLkFwcExhdW5jaGVyIC5yZWNlbnQtYXBwcy1jb250YWluZXIgYnV0dG9uLnJlY2VudC1hcHAtaXRlbSAucmVjZW50LWFwcC1pdGVtX19uYW1lLFxuLkFwcExhdW5jaGVyIC5yZWNlbnQtYXBwcy1jb250YWluZXIgLnJlY2VudC1hcHAtaXRlbSAucmVjZW50LWFwcC1pdGVtX19uYW1lIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC42OCk7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59XG5cbi5PU0RXaW5kb3cgLm9zZC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwYWRkaW5nOiA4cHggMTZweDtcbiAgZ2FwOiA4cHg7XG4gIG1pbi13aWR0aDogMjAwcHg7XG59XG4uT1NEV2luZG93IC5vc2QtY29udGFpbmVyIC5vc2QtaWNvbiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBtaW4td2lkdGg6IDE2cHg7XG4gIG1pbi1oZWlnaHQ6IDE2cHg7XG59XG4uT1NEV2luZG93IC5vc2QtY29udGFpbmVyIC5vc2QtaWNvbjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4uT1NEV2luZG93IC5vc2QtY29udGFpbmVyIC5vc2Qtc2xpZGVyIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIGZsZXg6IDE7XG59XG4uT1NEV2luZG93IC5vc2QtY29udGFpbmVyIC5vc2Qtc2xpZGVyIHRyb3VnaCB7XG4gIG1pbi1oZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMzAsIDM0LCAwLjYpO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xufVxuLk9TRFdpbmRvdyAub3NkLWNvbnRhaW5lciAub3NkLXNsaWRlciBoaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBtaW4td2lkdGg6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG4gIG1pbi1oZWlnaHQ6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cbi5PU0RXaW5kb3cgLm9zZC1jb250YWluZXIgLm9zZC1zbGlkZXIgc2xpZGVyIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG59XG4uT1NEV2luZG93IC5vc2QtY29udGFpbmVyIC5vc2Qtc2xpZGVyIHNsaWRlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCAyMDAsIDIwMCwgMC45KTtcbn1cbi5PU0RXaW5kb3cgLm9zZC1jb250YWluZXIgLm9zZC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIG9wYWNpdHk6IDAuNztcbiAgbWluLXdpZHRoOiBmaXQtY29udGVudDtcbn1cblxuLmNhdmEtaXNsYW5kIC5jYXZhLXdyYXBwZXIge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBtaW4td2lkdGg6IDE2cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAycHggNHB4O1xuICBnYXA6IDFweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI4LCAyOCwgMzQsIDAuNCk7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xufVxuLmNhdmEtaXNsYW5kIC5jYXZhLXdyYXBwZXI6aG92ZXI6bm90KC5hY3RpdmUpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG4uY2F2YS1pc2xhbmQgLmNhdmEtd3JhcHBlci5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLmNhdmEtaXNsYW5kIC5jYXZhLXdyYXBwZXIgLmNhdmEtYmFyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZS1vdXQ7XG4gIG1pbi1oZWlnaHQ6IDJweDtcbiAgbWluLXdpZHRoOiAycHg7XG4gIG9wYWNpdHk6IDAuODtcbn1cbi5jYXZhLWlzbGFuZCAuY2F2YS13cmFwcGVyIC5jYXZhLWJhci5jYXZhLWJhci0tYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjg1KTtcbiAgb3BhY2l0eTogMTtcbn1cbi5jYXZhLWlzbGFuZCAuY2F2YS13cmFwcGVyIC5jYXZhLWJhci5jYXZhLWJhci0taGlnaCB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTAwLCAyMDAsIDEwMCwgMC44KTtcbn1cbi5jYXZhLWlzbGFuZCAuY2F2YS13cmFwcGVyIC5jYXZhLWJhci5jYXZhLWJhci0tcGVhayB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyMDAsIDgwLCAwLjkpO1xufVxuLmNhdmEtaXNsYW5kIC5jYXZhLXdyYXBwZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMyLCAzMiwgMzYsIDAuOCk7XG59XG4uY2F2YS1pc2xhbmQgLmNhdmEtd3JhcHBlcjpob3ZlciAuY2F2YS1iYXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG4uY2F2YS1pc2xhbmQtZW1wdHkge1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbi5jYXZhLWlzbGFuZC1lbXB0eSAuY2F2YS13cmFwcGVyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDJweDtcbn1cbi5jYXZhLWlzbGFuZC1lbXB0eSAuY2F2YS13cmFwcGVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyNSk7XG59XG5cbi5ibHVldG9vdGgtd2lkZ2V0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDM0LCAwLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIHBhZGRpbmc6IDhweDtcbn1cblxuLmJsdWV0b290aC1oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogNHB4O1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC1pY29uIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBvcGFjaXR5OiAwLjk7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBvcGFjaXR5OiAwLjk7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBmb250LXNpemU6IDE0cHg7XG59XG4uYmx1ZXRvb3RoLWhlYWRlciAuYmx1ZXRvb3RoLWljb246aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC1pY29uOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtaWNvbi5hY3RpdmUge1xuICBvcGFjaXR5OiAxO1xuICBjb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjg1KTtcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtaWNvbi5lbmFibGVkIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44NSk7XG4gIG9wYWNpdHk6IDE7XG59XG4uYmx1ZXRvb3RoLWhlYWRlciAuYmx1ZXRvb3RoLWljb24uZGlzYWJsZWQge1xuICBjb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjY4KTtcbiAgb3BhY2l0eTogMC41O1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC1zdGF0dXMtZG90IHtcbiAgbWluLXdpZHRoOiA2cHg7XG4gIG1pbi1oZWlnaHQ6IDZweDtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG59XG4uYmx1ZXRvb3RoLWhlYWRlciAuYmx1ZXRvb3RoLXN0YXR1cy1kb3QuYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDAsIDIwMCwgMTAwLCAwLjgpO1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC1zdGF0dXMtZG90LmluYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjY4KTtcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtdGl0bGUge1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC10b2dnbGUtYnRuIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHBhZGRpbmc6IDJweCA4cHg7XG4gIG1pbi13aWR0aDogMzJweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzAsIDMwLCAzNCwgMC42KTtcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtdG9nZ2xlLWJ0bjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtdG9nZ2xlLWJ0bi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC10b2dnbGUtYnRuIC5ibHVldG9vdGgtdG9nZ2xlLWxhYmVsIHtcbiAgY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC10b2dnbGUtYnRuLm9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtZXhwYW5kLWJ0biB7XG4gIGFsbDogdW5zZXQ7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBwYWRkaW5nOiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIG1pbi13aWR0aDogMTZweDtcbiAgbWluLXdpZHRoOiAxMnB4O1xuICBwYWRkaW5nOiA0cHg7XG4gIG9wYWNpdHk6IDAuNztcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtZXhwYW5kLWJ0bjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5ibHVldG9vdGgtaGVhZGVyIC5ibHVldG9vdGgtZXhwYW5kLWJ0bi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xufVxuLmJsdWV0b290aC1oZWFkZXIgLmJsdWV0b290aC1leHBhbmQtYnRuIGljb24ge1xuICBmb250LXNpemU6IDEycHg7XG59XG4uYmx1ZXRvb3RoLWhlYWRlciAuYmx1ZXRvb3RoLWV4cGFuZC1idG46aG92ZXIge1xuICBvcGFjaXR5OiAxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cblxuLmJsdWV0b290aC1leHBhbmRlZCB7XG4gIG1hcmdpbi10b3A6IDhweDtcbiAgcGFkZGluZzogOHB4IDJweCAwIDJweDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMyk7XG59XG5cbi5ibHVldG9vdGgtc2Nhbi1idXR0b24ge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBtaW4td2lkdGg6IDE2cHg7XG4gIHRyYW5zaXRpb246IGFsbCA1MG1zIGVhc2UtaW4tb3V0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIGdhcDogNHB4O1xufVxuLmJsdWV0b290aC1zY2FuLWJ1dHRvbjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5ibHVldG9vdGgtc2Nhbi1idXR0b24uYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTtcbn1cbi5ibHVldG9vdGgtc2Nhbi1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5ibHVldG9vdGgtc2Nhbi1idXR0b24gLmJsdWV0b290aC1zY2FuLWljb24ge1xuICBmb250LXNpemU6IDEzcHg7XG4gIG9wYWNpdHk6IDAuOTtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuODUpO1xufVxuLmJsdWV0b290aC1zY2FuLWJ1dHRvbiAuYmx1ZXRvb3RoLXNjYW4taWNvbjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4uYmx1ZXRvb3RoLXNjYW4tYnV0dG9uIC5ibHVldG9vdGgtc2Nhbi1pY29uLnNjYW5uaW5nIHtcbiAgYW5pbWF0aW9uOiBwdWxzZSAxcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbn1cbi5ibHVldG9vdGgtc2Nhbi1idXR0b24gLmJsdWV0b290aC1zY2FuLWxhYmVsIHtcbiAgY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uYmx1ZXRvb3RoLWRldmljZXMge1xuICBtYXJnaW4tdG9wOiAycHg7XG59XG5cbi5ibHVldG9vdGgtZGV2aWNlIHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgbWluLXdpZHRoOiAxNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG59XG4uYmx1ZXRvb3RoLWRldmljZTpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDI1KTtcbn1cbi5ibHVldG9vdGgtZGV2aWNlLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7XG59XG4uYmx1ZXRvb3RoLWRldmljZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMjUpO1xufVxuLmJsdWV0b290aC1kZXZpY2U6aG92ZXI6bm90KC5jb25uZWN0aW5nKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMjUpO1xufVxuLmJsdWV0b290aC1kZXZpY2UuY29ubmVjdGluZyB7XG4gIG9wYWNpdHk6IDAuNztcbn1cbi5ibHVldG9vdGgtZGV2aWNlLmNvbm5lY3RpbmcgLmJsdWV0b290aC1kZXZpY2UtaWNvbi5jb25uZWN0aW5nIHtcbiAgYW5pbWF0aW9uOiBwdWxzZSAxcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbn1cbi5ibHVldG9vdGgtZGV2aWNlIC5ibHVldG9vdGgtZGV2aWNlLWljb24ge1xuICBmb250LXNpemU6IDEzcHg7XG4gIG9wYWNpdHk6IDAuOTtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1pY29uOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cbi5ibHVldG9vdGgtZGV2aWNlIC5ibHVldG9vdGgtZGV2aWNlLWljb24uY29ubmVjdGVkIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44NSk7XG4gIG9wYWNpdHk6IDE7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1pY29uLnBhaXJlZCB7XG4gIGNvbG9yOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDAuOTYpO1xuICBvcGFjaXR5OiAwLjg7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1pY29uLmF2YWlsYWJsZSB7XG4gIGNvbG9yOiByZ2JhKDIyMCwgMjIwLCAyMjAsIDAuODIpO1xuICBvcGFjaXR5OiAwLjY7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1pY29uLmNvbm5lY3Rpbmcge1xuICBjb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjg1KTtcbiAgb3BhY2l0eTogMTtcbn1cbi5ibHVldG9vdGgtZGV2aWNlIC5ibHVldG9vdGgtZGV2aWNlLW5hbWUge1xuICBjb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjk2KTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEycHg7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1zdGF0dXMge1xuICBjb2xvcjogcmdiYSgxODAsIDE4MCwgMTgwLCAwLjY4KTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEwcHg7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1zdGF0dXMuY29ubmVjdGVkIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44NSk7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1zdGF0dXMucGFpcmVkIHtcbiAgY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC44Mik7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1zdGF0dXMuYXZhaWxhYmxlIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC42OCk7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWRldmljZS1zdGF0dXMuY29ubmVjdGluZyB7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuODUpO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uYmx1ZXRvb3RoLWRldmljZSAuYmx1ZXRvb3RoLWNvbm5lY3RlZC1pbmRpY2F0b3Ige1xuICBmb250LXNpemU6IDEycHg7XG4gIG9wYWNpdHk6IDAuOTtcbiAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuODUpO1xuICBvcGFjaXR5OiAxO1xufVxuLmJsdWV0b290aC1kZXZpY2UgLmJsdWV0b290aC1jb25uZWN0ZWQtaW5kaWNhdG9yOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuQGtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwLjU7XG4gIH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgfVxufVxuLmJsdWV0b290aC1lbXB0eSB7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxODAsIDAuNjgpO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHBhZGRpbmc6IDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYmx1ZXRvb3RoLWRpc2FibGVkLW1lc3NhZ2Uge1xuICBjb2xvcjogcmdiYSgyMjAsIDIyMCwgMjIwLCAwLjgyKTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBwYWRkaW5nOiA4cHg7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDE4MCwgMC42OCk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuKiB7XG4gIGZvbnQtZmFtaWx5OiBcIlNGIFBybyBUZXh0XCIsIG1vbm9zcGFjZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJlbTtcbn1cblxuYm94LFxud2luZG93LFxuZXZlbnRib3gsXG5vdmVybGF5LFxuc2Nyb2xsZWQsXG5zY3JvbGxlZHdpbmRvdyxcbnZpZXdwb3J0IHtcbiAgYWxsOiB1bnNldDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbnBvcG92ZXIge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxucG9wb3ZlciBidXR0b24ge1xuICBhbGw6IHVuc2V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn0iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmV4cG9ydCB7IEFzdGFsLCBHdGssIEdkayB9XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgQ0MsIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIFBhc2NhbGlmeSwgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG4vKipcbiAqIFJlcHJlc2VudHMgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCBjYW4gYmUgcGFzc2VkIGFzIGEgY2hpbGQgdG8gY2xhc3MgY29tcG9uZW50cy5cbiAqL1xuZXhwb3J0IHR5cGUgTm9kZSA9XG4gICAgfCBBcnJheTxHT2JqZWN0Lk9iamVjdD5cbiAgICB8IEdPYmplY3QuT2JqZWN0XG4gICAgfCBudW1iZXJcbiAgICB8IHN0cmluZ1xuICAgIHwgYm9vbGVhblxuICAgIHwgbnVsbFxuICAgIHwgdW5kZWZpbmVkXG5cbmV4cG9ydCBjb25zdCBndGtUeXBlID0gU3ltYm9sKFwiZ3RrIGJ1aWxkZXIgdHlwZVwiKVxuXG4vKipcbiAqIEdldCB0aGUgdHlwZSBvZiB0aGUgb2JqZWN0IHNwZWNpZmllZCB0aHJvdWdoIHRoZSBgJHR5cGVgIHByb3BlcnR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlKG9iamVjdDogR09iamVjdC5PYmplY3QpIHtcbiAgICByZXR1cm4gZ3RrVHlwZSBpbiBvYmplY3QgPyAob2JqZWN0W2d0a1R5cGVdIGFzIHN0cmluZykgOiBudWxsXG59XG5cbi8qKlxuICogRnVuY3Rpb24gQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgRkNQcm9wczxTZWxmLCBQcm9wcz4gPSBQcm9wcyAmIHtcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvblxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG59XG5cbi8qKlxuICogQ2xhc3MgQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgQ0NQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFByb3BzPiA9IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWwgY2hpbGRyZW4gZWxlbWVudHNcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBBcnJheTxOb2RlPiB8IE5vZGVcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogZnVuY3Rpb24gdG8gdXNlIGFzIGEgY29uc3RydWN0b3IsXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICRjb25zdHJ1Y3Rvcj8ocHJvcHM6IFBhcnRpYWw8UHJvcHM+KTogU2VsZlxuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxuICAgIC8qKlxuICAgICAqIENTUyBjbGFzcyBuYW1lc1xuICAgICAqL1xuICAgIGNsYXNzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICAgIC8qKlxuICAgICAqIGlubGluZSBDU1NcbiAgICAgKi9cbiAgICBjc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFByb3BzXTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8UHJvcHNbS10+PiB8IFByb3BzW0tdXG59ICYge1xuICAgIFtTIGluIGtleW9mIFNlbGZbXCIkc2lnbmFsc1wiXSBhcyBTIGV4dGVuZHMgYG5vdGlmeTo6JHtpbmZlciBQfWBcbiAgICAgICAgPyBgb25Ob3RpZnkke1Bhc2NhbGlmeTxQPn1gXG4gICAgICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8Uz59YFxuICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFR5cGUob2JqZWN0OiBvYmplY3QsIHR5cGU6IHN0cmluZykge1xuICAgIGlmIChndGtUeXBlIGluIG9iamVjdCAmJiBvYmplY3RbZ3RrVHlwZV0gIT09IFwiXCIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApXG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgUGFyYW1ldGVyczxUPlswXT4sXG4pOiBSZXR1cm5UeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIG5ldyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIENvbnN0cnVjdG9yUGFyYW1ldGVyczxUPlswXT4sXG4pOiBJbnN0YW5jZVR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IGtleW9mICh0eXBlb2YgZW52KVtcImludHJpbnNpY0VsZW1lbnRzXCJdIHwgKG5ldyAocHJvcHM6IGFueSkgPT4gVCkgfCAoKHByb3BzOiBhbnkpID0+IFQpLFxuICAgIGlucHJvcHM6IGFueSxcbiAgICAvLyBrZXkgaXMgYSBzcGVjaWFsIHByb3AgaW4ganN4IHdoaWNoIGlzIHBhc3NlZCBhcyBhIHRoaXJkIGFyZ3VtZW50IGFuZCBub3QgaW4gcHJvcHNcbiAgICBrZXk/OiBzdHJpbmcsXG4pOiBUIHtcbiAgICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuID0gW10sIC4uLnJlc3QgfSA9IGlucHJvcHMgYXMgQ0NQcm9wczxULCBhbnk+XG4gICAgY29uc3QgcHJvcHMgPSByZXN0IGFzIFJlY29yZDxzdHJpbmcsIGFueT5cblxuICAgIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pXG4gICAgZW52LmluaXRQcm9wcyhwcm9wcylcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgZGVsZXRlIHByb3BzW2tleV1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LnNsaWNlKDIpLCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2gsIC0xKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaGlsZCwgLTEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkoc2lnKVxuICAgICAgICBjb25zdCBpZCA9IG5hbWUuc3RhcnRzV2l0aChcIm5vdGlmeS1cIilcbiAgICAgICAgICAgID8gb2JqZWN0LmNvbm5lY3QoYG5vdGlmeTo6JHtuYW1lLnNsaWNlKDcpfWAsIGhhbmRsZXIpXG4gICAgICAgICAgICA6IG9iamVjdC5jb25uZWN0KGtlYmFiaWZ5KHNpZyksIGhhbmRsZXIpXG5cbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBoYW5kbGUgYmluZGluZ3NcbiAgICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2VcbiAgICB9KVxuXG4gICAgLy8gY2xlYW51cFxuICAgIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQ/LihvYmplY3QpXG4gICAgcmV0dXJuIG9iamVjdFxufVxuXG5leHBvcnQgY29uc3QganN4cyA9IGpzeFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgdHlwZSBFbGVtZW50VHlwZSA9IGtleW9mIEludHJpbnNpY0VsZW1lbnRzIHwgRkMgfCBDQ1xuICAgICAgICB0eXBlIEVsZW1lbnQgPSBHT2JqZWN0Lk9iamVjdFxuICAgICAgICB0eXBlIEVsZW1lbnRDbGFzcyA9IEdPYmplY3QuT2JqZWN0XG5cbiAgICAgICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUHJvcHM+ID0gSnN4UHJvcHM8QywgUHJvcHM+ICYge1xuICAgICAgICAgICAgLy8gRklYTUU6IHdoeSBkb2VzIGFuIGludHJpbnNpYyBlbGVtZW50IGFsd2F5cyByZXNvbHZlIGFzIEZDP1xuICAgICAgICAgICAgLy8gX190eXBlPzogQyBleHRlbmRzIENDID8gXCJDQ1wiIDogQyBleHRlbmRzIEZDID8gXCJGQ1wiIDogbmV2ZXJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIC8vIGNjOiBDQ1Byb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcywgR3RrLkJveC5TaWduYWxTaWduYXR1cmVzPlxuICAgICAgICAgICAgLy8gZmM6IEZDUHJvcHM8R3RrLldpZGdldCwgRm5Qcm9wcz5cbiAgICAgICAgfVxuXG4gICAgICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICAgICAgY2hpbGRyZW46IHt9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtZGVjbGFyYXRpb24tbWVyZ2luZ1xuZXhwb3J0IGNsYXNzIEFjY2Vzc29yPFQgPSB1bmtub3duPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBzdGF0aWMgJGd0eXBlID0gR09iamVjdC5UWVBFX0pTT0JKRUNUIGFzIHVua25vd24gYXMgR09iamVjdC5HVHlwZTxBY2Nlc3Nvcj5cblxuICAgIC8qKiBAZXhwZXJpbWVudGFsICovXG4gICAgc3RhdGljIGV2YWx1YXRpbmc/OiBTZXQ8QWNjZXNzb3I8dW5rbm93bj4+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICAvLyBUT0RPOiBhdXRvIHVuc3ViIHdoZW4gYSBzY29wZSBpcyBhdmFpbGFibGU/XG4gICAgICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgdmFsdWUuXG4gICAgICovXG4gICAgZ2V0KCk6IFQge1xuICAgICAgICBBY2Nlc3Nvci5ldmFsdWF0aW5nPy5hZGQodGhpcylcbiAgICAgICAgcmV0dXJuIHRoaXMuI2dldCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGFzPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB0cmFuc2Zvcm0odGhpcy4jZ2V0KCkpLCB0aGlzLiNzdWJzY3JpYmUpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jYWxsPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXModHJhbnNmb3JtKVxuICAgIH1cblxuICAgIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgQWNjZXNzb3I8JHt0aGlzLmdldCgpfT5gXG4gICAgfVxuXG4gICAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLlwiKVxuICAgICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc29yPFQ+IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+XG59XG5cbmV4cG9ydCB0eXBlIFNldHRlcjxUPiA9IHtcbiAgICAodmFsdWU6IFQpOiB2b2lkXG4gICAgKHZhbHVlOiAocHJldjogVCkgPT4gVCk6IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgU3RhdGU8VD4gPSBbQWNjZXNzb3I8VD4sIFNldHRlcjxUPl1cblxuLyoqXG4gKiBDcmVhdGUgYSB3cml0YWJsZSBzaWduYWwuXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGludGlhbCB2YWx1ZSBvZiB0aGUgc2lnbmFsXG4gKiBAcmV0dXJucyBBbiBgQWNjZXNzb3JgIGFuZCBhIHNldHRlciBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhdGU8VD4oaW5pdDogVCk6IFN0YXRlPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG4gICAgICAgIHJldHVybiAoKSA9PiBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY29uc3Qgc2V0ID0gKG5ld1ZhbHVlOiB1bmtub3duKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlOiBUID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuZXdWYWx1ZShjdXJyZW50VmFsdWUpIDogbmV3VmFsdWVcbiAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKSwgc2V0IGFzIFNldHRlcjxUPl1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBpcyBjb21wdXRlZCBmcm9tIGEgbGlzdCBvZiBgQWNjZXNzb3Jgcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPHN0cmluZz5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPFtudW1iZXIsIHN0cmluZ10+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdKVxuICogY29uc3QgZDogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSwgKGE6IG51bWJlciwgYjogc3RyaW5nKSA9PiBgJHthfSAke2J9YClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBkZXBzIExpc3Qgb2YgYEFjY2Vzc29yc2AuXG4gKiBAcGFyYW0gdHJhbnNmb3JtIEFuIG9wdGlvbmFsIHRyYW5zZm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFYgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVik6IEFjY2Vzc29yPFY+IHtcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IEFycmF5PHVua25vd24+KGRlcHMubGVuZ3RoKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IGRlcHMubWFwKChkZXAsIGkpID0+XG4gICAgICAgICAgICAgICAgZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgICAgICBjYWNoZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogViA9PiB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlW2ldKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlW2ldXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybSA/IHRyYW5zZm9ybSguLi4oYXJncyBhcyBBcmdzKSkgOiAoYXJncyBhcyBWKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdpby5TZXR0aW5nc2AgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIGtleSBUaGUgc2V0dGluZ3Mga2V5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4ob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCB8IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPiB7XG4gICAgY29uc3QgcHJvcCA9IGtlYmFiaWZ5KGtleSkgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBjb25zdCBzaWcgPSBvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MgPyBcImNoYW5nZWRcIiA6IFwibm90aWZ5XCJcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChgJHtzaWd9Ojoke3Byb3B9YCwgKCkgPT4gY2FsbGJhY2soKSlcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncykge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSBhcyBUXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7cHJvcC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICAgICAgICAgIGlmIChnZXR0ZXIgaW4gb2JqZWN0ICYmIHR5cGVvZiBvYmplY3RbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChvYmplY3RbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpIGFzIFRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3AgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W3Byb3BdIGFzIFRcbiAgICAgICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W2tleSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XSBhcyBUXG5cbiAgICAgICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ2V0IHByb3BlcnR5ICR7a2V5fWApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG50eXBlIENvbm5lY3Rpb25IYW5kbGVyPFxuICAgIE8gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTIGV4dGVuZHMga2V5b2YgT1tcIiRzaWduYWxzXCJdLFxuICAgIFQsXG4+ID0gT1tcIiRzaWduYWxzXCJdW1NdIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBpbmZlciBSXG4gICAgPyB2b2lkIGV4dGVuZHMgUlxuICAgICAgICA/ICguLi5hcmdzOiBbLi4uUGFyYW1ldGVyczxPW1wiJHNpZ25hbHNcIl1bU10+LCBjdXJyZW50VmFsdWU6IFRdKSA9PiBUXG4gICAgICAgIDogbmV2ZXJcbiAgICA6IG5ldmVyXG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggc2V0cyB1cCBhIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCBzaWduYWwgY29ubmVjdGlvbnMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogY29uc3QgdmFsdWU6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb25uZWN0aW9uKFxuICogICBcImluaXRpYWwgdmFsdWVcIixcbiAqICAgW29iajEsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdLFxuICogICBbb2JqMiwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl1cbiAqIClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gc2lnbmFscyBBIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCwgc2lnbmFsIG5hbWUgYW5kIGNhbGxiYWNrIHBhaXJzIHRvIGNvbm5lY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uPFxuICAgIFQsXG4gICAgTzEgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMSBleHRlbmRzIGtleW9mIE8xW1wiJHNpZ25hbHNcIl0sXG4gICAgTzIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMiBleHRlbmRzIGtleW9mIE8yW1wiJHNpZ25hbHNcIl0sXG4gICAgTzMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMyBleHRlbmRzIGtleW9mIE8zW1wiJHNpZ25hbHNcIl0sXG4gICAgTzQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNCBleHRlbmRzIGtleW9mIE80W1wiJHNpZ25hbHNcIl0sXG4gICAgTzUgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNSBleHRlbmRzIGtleW9mIE81W1wiJHNpZ25hbHNcIl0sXG4gICAgTzYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNiBleHRlbmRzIGtleW9mIE82W1wiJHNpZ25hbHNcIl0sXG4gICAgTzcgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNyBleHRlbmRzIGtleW9mIE83W1wiJHNpZ25hbHNcIl0sXG4gICAgTzggZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOCBleHRlbmRzIGtleW9mIE84W1wiJHNpZ25hbHNcIl0sXG4gICAgTzkgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOSBleHRlbmRzIGtleW9mIE85W1wiJHNpZ25hbHNcIl0sXG4+KFxuICAgIGluaXQ6IFQsXG4gICAgaDE6IFtPMSwgUzEsIENvbm5lY3Rpb25IYW5kbGVyPE8xLCBTMSwgVD5dLFxuICAgIGgyPzogW08yLCBTMiwgQ29ubmVjdGlvbkhhbmRsZXI8TzIsIFMyLCBUPl0sXG4gICAgaDM/OiBbTzMsIFMzLCBDb25uZWN0aW9uSGFuZGxlcjxPMywgUzMsIFQ+XSxcbiAgICBoND86IFtPNCwgUzQsIENvbm5lY3Rpb25IYW5kbGVyPE80LCBTNCwgVD5dLFxuICAgIGg1PzogW081LCBTNSwgQ29ubmVjdGlvbkhhbmRsZXI8TzUsIFM1LCBUPl0sXG4gICAgaDY/OiBbTzYsIFM2LCBDb25uZWN0aW9uSGFuZGxlcjxPNiwgUzYsIFQ+XSxcbiAgICBoNz86IFtPNywgUzcsIENvbm5lY3Rpb25IYW5kbGVyPE83LCBTNywgVD5dLFxuICAgIGg4PzogW084LCBTOCwgQ29ubmVjdGlvbkhhbmRsZXI8TzgsIFM4LCBUPl0sXG4gICAgaDk/OiBbTzksIFM5LCBDb25uZWN0aW9uSGFuZGxlcjxPOSwgUzksIFQ+XSxcbikge1xuICAgIGxldCB2YWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IHNpZ25hbHMgPSBbaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIGg4LCBoOV0uZmlsdGVyKChoKSA9PiBoICE9PSB1bmRlZmluZWQpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gc2lnbmFscy5tYXAoKFtvYmplY3QsIHNpZ25hbCwgY2FsbGJhY2tdKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuY29ubmVjdC5jYWxsKFxuICAgICAgICAgICAgICAgICAgICBvYmplY3QsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbCBhcyBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIChfLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNhbGxiYWNrKC4uLmFyZ3MsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmRpc2Nvbm5lY3QuY2FsbChvYmplY3QsIGlkKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2lnbmFsIGZyb20gYSBwcm92aWVyIGZ1bmN0aW9uLlxuICogVGhlIHByb3ZpZGVyIGlzIGNhbGxlZCB3aGVuIHRoZSBmaXJzdCBzdWJzY3JpYmVyIGFwcGVhcnMgYW5kIHRoZSByZXR1cm5lZCBkaXNwb3NlXG4gKiBmdW5jdGlvbiBmcm9tIHRoZSBwcm92aWRlciB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBudW1iZXIgb2Ygc3Vic2NyaWJlcnMgZHJvcCB0byB6ZXJvLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHZhbHVlID0gY3JlYXRlRXh0ZXJuYWwoMCwgKHNldCkgPT4ge1xuICogICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHNldCgodikgPT4gdiArIDEpKVxuICogICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBzaG91bGQgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZXJuYWw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBwcm9kdWNlcjogKHNldDogU2V0dGVyPFQ+KSA9PiBEaXNwb3NlRnVuY3Rpb24sXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogRGlzcG9zZUZ1bmN0aW9uXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gcHJvZHVjZXIoKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZTogVCA9IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KGN1cnJlbnRWYWx1ZSkgOiB2XG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgRGVlcEluZmVyPFQgZXh0ZW5kcyBzdHJpbmc+ID0gUmV0dXJuVHlwZTxHTGliLlZhcmlhbnQ8VD5bXCJkZWVwVW5wYWNrXCJdPlxudHlwZSBSZWN1cnNpdmVJbmZlcjxUIGV4dGVuZHMgc3RyaW5nPiA9IFJldHVyblR5cGU8R0xpYi5WYXJpYW50PFQ+W1wicmVjdXJzaXZlVW5wYWNrXCJdPlxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xudHlwZSBTZXR0aW5nczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBVbmNhcGl0YWxpemU8UGFzY2FsaWZ5PEs+Pl06IEFjY2Vzc29yPFJlY3Vyc2l2ZUluZmVyPFRbS10+PlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIGBzZXQke1Bhc2NhbGlmeTxLPn1gXTogU2V0dGVyPERlZXBJbmZlcjxUW0tdPj5cbn1cblxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKlxuICogV3JhcCBhIHtAbGluayBHaW8uU2V0dGluZ3N9IGludG8gYSBjb2xsZWN0aW9uIG9mIHNldHRlcnMgYW5kIGFjY2Vzc29ycy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBzID0gY3JlYXRlU2V0dGluZ3Moc2V0dGluZ3MsIHtcbiAqICAgXCJjb21wbGV4LWtleVwiOiBcImF7c2F7c3N9fVwiLFxuICogICBcInNpbXBsZS1rZXlcIjogXCJzXCIsXG4gKiB9KVxuICpcbiAqIHMuY29tcGxleEtleS5zdWJzY3JpYmUoKCkgPT4ge1xuICogICBwcmludChzLmNvbXBsZXhLZXkuZ2V0KCkpXG4gKiB9KVxuICpcbiAqIHMuc2V0Q29tcGxleEtleSgocHJldikgPT4gKHtcbiAqICAgLi4ucHJldixcbiAqICAga2V5OiB7IG5lc3RlZDogXCJcIiB9LFxuICogfSkpXG4gKiBgYGBcbiAqL1xuLy8gVE9ETzogY29tZSB1cCB3aXRoIGFuIEFQSVxuLy8gLSB0byBtYW51YWxseSBhbm5vdGF0ZSBWYXJpYW50IHR5cGVkIHNldHRlcnMvZ2V0dGVyc1xuLy8gLSB0byBzZXQgcmVjdXJzaXZlIHZzIGRlZXAgdW5wYWNrIHBlciBrZXlcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXR0aW5nczxjb25zdCBUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4oXG4gICAgc2V0dGluZ3M6IEdpby5TZXR0aW5ncyxcbiAgICBrZXlzOiBULFxuKTogU2V0dGluZ3M8VD4ge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGtleXMpLmZsYXRNYXAoKFtrZXksIHR5cGVdKSA9PiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY2FtZWxpZnkoa2V5KSxcbiAgICAgICAgICAgICAgICBuZXcgQWNjZXNzb3IoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHNldHRpbmdzLmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpLFxuICAgICAgICAgICAgICAgICAgICAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gc2V0dGluZ3MuY29ubmVjdChgY2hhbmdlZDo6JHtrZXl9YCwgY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gc2V0dGluZ3MuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBgc2V0JHtrZXlbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaWZ5KGtleSkuc2xpY2UoMSl9YCxcbiAgICAgICAgICAgICAgICAodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zZXRfdmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkuZGVlcFVucGFjaygpKSA6IHYsXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIF0pLFxuICAgIClcbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxudHlwZSBDaGlsZEZuID0gKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmogfCBudW1iZXIgfCBzdHJpbmcsIGluZGV4PzogbnVtYmVyKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIGFkZENoaWxkOiBDaGlsZEZuXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgaW5pdFByb3BzOiAocHJvcHM6IGFueSkgPT4gdm9pZFxuICAgIGRlZmF1bHRDbGVhbnVwOiAob2JqZWN0OiBHT2JqKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIG1pc3NpbmdJbXBsKCkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgYWRkQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSB9IGZyb20gXCIuLi9nbm9tZS9zaWduYWxUcmFja2VyLmpzXCJcblxuLy8gVE9ETzogRnJhZ21lbnQgc2hvdWxkIGltcGxlbWVudCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBjbGFzcyBGcmFnbWVudDxUID0gYW55PiBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBzdGF0aWMgW0dPYmplY3Quc2lnbmFsc10gPSB7XG4gICAgICAgIFwiZGVzdHJveVwiOiB7fSxcblxuICAgICAgICBcImNoaWxkLWFkZGVkXCI6IHtcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVCwgR09iamVjdC5UWVBFX1VJTlRdLFxuICAgICAgICB9LFxuICAgICAgICBcImNoaWxkLXJlbW92ZWRcIjoge1xuICAgICAgICAgICAgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNULCBHT2JqZWN0LlRZUEVfVUlOVF0sXG4gICAgICAgIH0sXG4gICAgfVxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnByb3BlcnRpZXNdID0ge1xuICAgICAgICBjaGlsZHJlbjogR09iamVjdC5QYXJhbVNwZWMuanNvYmplY3QoXCJjaGlsZHJlblwiLCBcIlwiLCBcIlwiLCBHT2JqZWN0LlBhcmFtRmxhZ3MuUkVBREFCTEUpLFxuICAgIH1cblxuICAgIHN0YXRpYyB7XG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh0aGlzKVxuICAgICAgICByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSh0aGlzKVxuICAgIH1cblxuICAgIHN0YXRpYyBuZXc8VD4oY2hpbGRyZW46IEFycmF5PFQ+ID0gW10pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGcmFnbWVudCh7IGNoaWxkcmVuIH0pXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb25uZWN0aW9uSWRzID0gbmV3IFNldDxudW1iZXI+KClcbiAgICBwcml2YXRlIF9jaGlsZHJlbjogQXJyYXk8VD5cblxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFsuLi50aGlzLl9jaGlsZHJlbl1cbiAgICB9XG5cbiAgICBhZGRDaGlsZChjaGlsZDogVCwgaW5kZXg6IG51bWJlciA9IC0xKTogdm9pZCB7XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbmRleCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX2NoaWxkcmVuID0gW1xuICAgICAgICAgICAgICAgIC4uLnRoaXMuX2NoaWxkcmVuLnNsaWNlKDAsIGluZGV4KSxcbiAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZShpbmRleCksXG4gICAgICAgICAgICBdXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZHJlbi5wdXNoKGNoaWxkKVxuICAgICAgICAgICAgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5sZW5ndGggLSAxXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmVtaXQoXCJjaGlsZC1hZGRlZFwiLCBjaGlsZCwgaW5kZXgpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBoYXNDaGlsZChjaGlsZDogVCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChjaCkgPT4gY2ggPT09IGNoaWxkKSA+IC0xXG4gICAgfVxuXG4gICAgcmVtb3ZlQ2hpbGQoY2hpbGQ6IFQpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5maW5kSW5kZXgoKGkpID0+IGkgPT09IGNoaWxkKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpXG5cbiAgICAgICAgdGhpcy5lbWl0KFwiY2hpbGQtcmVtb3ZlZFwiLCBjaGlsZCwgaW5kZXgpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfTogUGFydGlhbDx7IGNoaWxkcmVuOiBBcnJheTxUPiB8IFQgfT4gPSB7fSkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBjb25uZWN0KHNpZ25hbDogc3RyaW5nLCBjYWxsYmFjazogKF86IHRoaXMsIC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogbnVtYmVyIHtcbiAgICAgICAgY29uc3QgaWQgPSBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgICAgIHRoaXMuY29ubmVjdGlvbklkcy5hZGQoaWQpXG4gICAgICAgIHJldHVybiBpZFxuICAgIH1cblxuICAgIGRpc2Nvbm5lY3QoaWQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBzdXBlci5kaXNjb25uZWN0KGlkKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25JZHMuZGVsZXRlKGlkKVxuICAgIH1cblxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZW1pdChcImRlc3Ryb3lcIilcbiAgICAgICAgZm9yIChjb25zdCBpZCBvZiB0aGlzLmNvbm5lY3Rpb25JZHMudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHN1cGVyLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxudHlwZSBUeXBlID0geyBuZXcgKC4uLmFyZ3M6IGFueVtdKTogR09iamVjdC5PYmplY3QgfVxuXG4vLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgdHlwZXNcbmNvbnN0IG1vZCA9IGltcG9ydChcInJlc291cmNlOi8vL29yZy9nbm9tZS9zaGVsbC9taXNjL3NpZ25hbFRyYWNrZXIuanNcIilcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlOiAodHlwZTogVHlwZSkgPT4gdm9pZCA9IGF3YWl0IG1vZFxuICAgIC50aGVuKChtb2QpID0+IG1vZC5yZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSlcbiAgICAuY2F0Y2goKCkgPT4gKCkgPT4gdm9pZCAwKVxuIiwgImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IsIFN0YXRlLCBjcmVhdGVTdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuaW1wb3J0IHR5cGUgQ2x1dHRlciBmcm9tIFwiZ2k6Ly9DbHV0dGVyXCJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmltcG9ydCB0eXBlIEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj0zLjBcIlxuXG5pbnRlcmZhY2UgRm9yUHJvcHM8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5PiB7XG4gICAgZWFjaDogQWNjZXNzb3I8SXRlcmFibGU8SXRlbT4+XG4gICAgY2hpbGRyZW46IChpdGVtOiBJdGVtLCBpbmRleDogQWNjZXNzb3I8bnVtYmVyPikgPT4gRWxcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjoge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3l9XG4gICAgICogLSAqKkdub21lKio6IHtAbGluayBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95fVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFbCwgaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZClcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIHRoZSBrZXkgZm9yIGVhY2ggaXRlbS5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQgaXRlbXMgYXJlIG1hcHBlZCBieTpcbiAgICAgKiAtIHZhbHVlIGluIGNhc2Ugb2YgcHJpbWl0aXZlIHZhbHVlc1xuICAgICAqIC0gcmVmZXJlbmNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlkPzogKGl0ZW06IEl0ZW0pID0+IEtleSB8IEl0ZW1cbn1cblxuLy8gVE9ETzogc3VwcG9ydCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3I8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5Pih7XG4gICAgZWFjaCxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxuICAgIGlkID0gKGl0ZW06IEl0ZW0pID0+IGl0ZW0sXG59OiBGb3JQcm9wczxJdGVtLCBFbCwgS2V5Pik6IEZyYWdtZW50PEVsPiB7XG4gICAgdHlwZSBNYXBJdGVtID0geyBpdGVtOiBJdGVtOyBjaGlsZDogRWw7IGluZGV4OiBTdGF0ZTxudW1iZXI+OyBzY29wZTogU2NvcGUgfVxuXG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXA8SXRlbSB8IEtleSwgTWFwSXRlbT4oKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEVsPigpXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleF0sIHNjb3BlIH06IE1hcEl0ZW0pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQsIGl0ZW0sIGluZGV4LmdldCgpKVxuICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgfVxuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayhpdGFyZWFibGU6IEl0ZXJhYmxlPEl0ZW0+KSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gWy4uLml0YXJlYWJsZV1cbiAgICAgICAgY29uc3QgaWRzID0gaXRlbXMubWFwKGlkKVxuICAgICAgICBjb25zdCBpZFNldCA9IG5ldyBTZXQoaWRzKVxuXG4gICAgICAgIC8vIGNsZWFudXAgY2hpbGRyZW4gbWlzc2luZyBmcm9tIGFyclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtYXAuZW50cmllcygpKSB7XG4gICAgICAgICAgICAvLyB0aGVyZSBpcyBubyBnZW5lcmljIHdheSB0byBpbnNlcnQgY2hpbGQgYXQgaW5kZXhcbiAgICAgICAgICAgIC8vIHNvIHdlIHNvcnQgYnkgcmVtb3ZpbmcgZXZlcnkgY2hpbGQgYW5kIHJlYXBwZW5kaW5nIGluIG9yZGVyXG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZCh2YWx1ZS5jaGlsZClcblxuICAgICAgICAgICAgaWYgKCFpZFNldC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgICAgICAgICBtYXAuZGVsZXRlKGtleSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBpbmRleCBhbmQgYWRkIG5ldyBpdGVtc1xuICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGlkc1tpXVxuICAgICAgICAgICAgaWYgKG1hcC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgfSA9IG1hcC5nZXQoa2V5KSFcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKVxuICAgICAgICAgICAgICAgIGlmIChmcmFnbWVudC5oYXNDaGlsZChjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gY3JlYXRlU3RhdGUoaSlcbiAgICAgICAgICAgICAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpXG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSlcbiAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gZWFjaC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG5pbXBvcnQgQ2x1dHRlciBmcm9tIFwiZ2k6Ly9DbHV0dGVyXCJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmltcG9ydCB0eXBlIEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj0zLjBcIlxuXG5pbnRlcmZhY2UgV2l0aFByb3BzPFQsIEUgZXh0ZW5kcyBKU1guRWxlbWVudD4ge1xuICAgIHZhbHVlOiBBY2Nlc3NvcjxUPlxuICAgIGNoaWxkcmVuOiAodmFsdWU6IFQpID0+IEUgfCBcIlwiIHwgZmFsc2UgfCBudWxsIHwgdW5kZWZpbmVkXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IHtAbGluayBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95fVxuICAgICAqIC0gKipHbm9tZSoqOiB7QGxpbmsgQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveX1cbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRSkgPT4gdm9pZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFdpdGg8VCwgRSBleHRlbmRzIEpTWC5FbGVtZW50Pih7XG4gICAgdmFsdWUsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbn06IFdpdGhQcm9wczxULCBFPik6IEZyYWdtZW50PEU+IHtcbiAgICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpXG4gICAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQ8RT4oKVxuXG4gICAgbGV0IHNjb3BlOiBTY29wZVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2sodjogVCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZyYWdtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZChjaGlsZClcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBjbGVhbnVwKGNoaWxkKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoc2NvcGUpIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICB9XG5cbiAgICAgICAgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICBjb25zdCBjaCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKHYpKVxuICAgICAgICBpZiAoY2ggIT09IFwiXCIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFkZENoaWxkKGNoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKHZhbHVlLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICAgICAgZGlzcG9zZSgpXG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCBIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCJcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZVN0YXRlIH0gZnJvbSBcImFnc1wiXG5cbi8vIEh5cHJsYW5kIHNlcnZpY2UgKGd1YXJkZWQpXG5sZXQgaHlwcjogYW55ID0gbnVsbDtcbnRyeSB7XG4gIGh5cHIgPSBIeXBybGFuZC5nZXRfZGVmYXVsdCgpO1xufSBjYXRjaCB7fVxuXG5jb25zdCBbd29ya3NwYWNlU3RhdGUsIHNldFdvcmtzcGFjZVN0YXRlXSA9IGNyZWF0ZVN0YXRlKDApXG5cbmZ1bmN0aW9uIHRyaWdnZXJVcGRhdGUoKSB7XG4gIHNldFdvcmtzcGFjZVN0YXRlKHByZXYgPT4gcHJldiArIDEpXG59XG5cbi8vIEZ1bmN0aW9uIHRvIGdldCBmaWx0ZXJlZCBhbmQgc29ydGVkIHdvcmtzcGFjZXNcbmNvbnN0IGdldFdvcmtzcGFjZXMgPSAoKSA9PiB7XG4gIGlmICghaHlwcikgcmV0dXJuIFtdO1xuICB0cnkge1xuICAgIHJldHVybiBoeXByLmdldF93b3Jrc3BhY2VzKClcbiAgICAgIC5maWx0ZXIoKHdzOiBhbnkpID0+IHdzLmlkID4gMCkgLy8gRmlsdGVyIG91dCBzcGVjaWFsIHdvcmtzcGFjZXMgKG5lZ2F0aXZlIElEcylcbiAgICAgIC5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4gYS5pZCAtIGIuaWQpIC8vIFNvcnQgYnkgd29ya3NwYWNlIElEXG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG4vLyBDcmVhdGUgcmVhY3RpdmUgd29ya3NwYWNlcyB0aGF0IHVwZGF0ZXMgd2hlbiBzdGF0ZSBjaGFuZ2VzXG5jb25zdCB3b3Jrc3BhY2VzID0gd29ya3NwYWNlU3RhdGUoKCkgPT4gZ2V0V29ya3NwYWNlcygpKVxuXG4vLyBMaXN0ZW4gdG8gd29ya3NwYWNlIGFuZCBjbGllbnQgY2hhbmdlcyAoZ3VhcmRlZClcbnRyeSB7XG4gIGh5cHI/LmNvbm5lY3QoXCJ3b3Jrc3BhY2UtYWRkZWRcIiwgdHJpZ2dlclVwZGF0ZSk7XG4gIGh5cHI/LmNvbm5lY3QoXCJ3b3Jrc3BhY2UtcmVtb3ZlZFwiLCB0cmlnZ2VyVXBkYXRlKTtcbn0gY2F0Y2gge31cblxuLy8gUmVhY3RpdmUgZm9jdXNlZCB3b3Jrc3BhY2UgKGd1YXJkZWQpXG5sZXQgX19mb2N1c2VkV29ya3NwYWNlOiBhbnk7XG5pZiAoaHlwcikge1xuICBfX2ZvY3VzZWRXb3Jrc3BhY2UgPSBjcmVhdGVCaW5kaW5nKGh5cHIsIFwiZm9jdXNlZFdvcmtzcGFjZVwiKTtcbn0gZWxzZSB7XG4gIGNvbnN0IFtmb2N1c2VkXSA9IGNyZWF0ZVN0YXRlPGFueT4obnVsbCk7XG4gIF9fZm9jdXNlZFdvcmtzcGFjZSA9IGZvY3VzZWQ7XG59XG5jb25zdCBmb2N1c2VkV29ya3NwYWNlID0gX19mb2N1c2VkV29ya3NwYWNlO1xuXG5leHBvcnQgeyBoeXByLCB3b3Jrc3BhY2VzLCBmb2N1c2VkV29ya3NwYWNlIH0iLCAiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZSAqL1xuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiLi4vLi4vZ25pbS9zcmMvanN4L2luZGV4LmpzXCJcbmltcG9ydCB7IGludHJpbnNpY0VsZW1lbnRzIH0gZnJvbSBcIi4uLy4uL2duaW0vc3JjL2d0azQvanN4LXJ1bnRpbWUuanNcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiLi4vLi4vZ25pbS9zcmMvZ3RrNC9qc3gtcnVudGltZS5qc1wiXG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBnZXRUeXBlLCBvbkNsZWFudXAsIEFjY2Vzc29yLCBGcmFnbWVudCB9IGZyb20gXCIuLi9qc3gvaW5kZXguanNcIlxuaW1wb3J0IHsgY29uZmlndWUgfSBmcm9tIFwiLi4vanN4L2Vudi5qc1wiXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmZ1bmN0aW9uIGFkZChwYXJlbnQ6IEd0ay5CdWlsZGFibGUsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCwgXzogbnVtYmVyKSB7XG4gICAgaWYgKCFzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIF8pKSB7XG4gICAgICAgIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBzcGVjaWFsUmVtb3ZlKF9wYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBfY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgLy8gVE9ETzogYWRkIGFueSBzcGVjaWFsIGNhc2VcbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gc3BlY2lhbEFkZChwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QsIF86IG51bWJlcikge1xuICAgIC8vIFRPRE86IGFkZCBhbnkgb3RoZXIgc3BlY2lhbCBjYXNlXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgIFwic2V0X2FkanVzdG1lbnRcIiBpbiBwYXJlbnQgJiZcbiAgICAgICAgdHlwZW9mIHBhcmVudC5zZXRfYWRqdXN0bWVudCA9PT0gXCJmdW5jdGlvblwiXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5zZXRfYWRqdXN0bWVudChjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLldpZGdldCAmJlxuICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgY2hpbGQubmFtZSAhPT0gXCJcIiAmJlxuICAgICAgICBjaGlsZC5uYW1lICE9PSBudWxsICYmXG4gICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICApIHtcbiAgICAgICAgcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuUG9wb3ZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbikge1xuICAgICAgICBwYXJlbnQuc2V0X3BvcG92ZXIoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51TW9kZWwgJiZcbiAgICAgICAgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uIHx8IHBhcmVudCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyTWVudSlcbiAgICApIHtcbiAgICAgICAgcGFyZW50LnNldF9tZW51X21vZGVsKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51SXRlbSAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHaW8uTWVudSkge1xuICAgICAgICAvLyBUT0RPOlxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLkFwcGxpY2F0aW9uKSB7XG4gICAgICAgIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5UZXh0Vmlldykge1xuICAgICAgICBwYXJlbnQuc2V0X2J1ZmZlcihjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChzcGVjaWFsUmVtb3ZlKHBhcmVudCwgY2hpbGQpKSByZXR1cm5cblxuICAgIGlmIChcInNldF9jaGlsZFwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9jaGlsZCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICB9XG5cbiAgICBpZiAoXCJyZW1vdmVcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgIH1cblxuICAgIHRocm93IEVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2hpbGR9IGZyb20gJHtwYXJlbnR9YClcbn1cblxuY29uc3QgeyBhZGRDaGlsZCwgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBzZXRDc3Mob2JqZWN0LCBjc3MpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY3NzIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY3R4ID0gb2JqZWN0LmdldF9zdHlsZV9jb250ZXh0KClcbiAgICAgICAgbGV0IHByb3ZpZGVyOiBHdGsuQ3NzUHJvdmlkZXJcblxuICAgICAgICBjb25zdCBzZXR0ZXIgPSAoY3NzOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGlmICghY3NzLmluY2x1ZGVzKFwie1wiKSB8fCAhY3NzLmluY2x1ZGVzKFwifVwiKSkge1xuICAgICAgICAgICAgICAgIGNzcyA9IGAqIHsgJHtjc3N9IH1gXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm92aWRlcikgY3R4LnJlbW92ZV9wcm92aWRlcihwcm92aWRlcilcblxuICAgICAgICAgICAgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzKVxuICAgICAgICAgICAgY3R4LmFkZF9wcm92aWRlcihwcm92aWRlciwgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3NzIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MuZ2V0KCkpXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY3NzLnN1YnNjcmliZSgoKSA9PiBzZXR0ZXIoY3NzLmdldCgpKSlcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0dGVyKGNzcylcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNsYXNzTmFtZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAoKSA9PiAob2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdC5zZXRfY3NzX2NsYXNzZXMoY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGFkZENoaWxkKHBhcmVudCwgY2hpbGQsIGluZGV4ID0gLTEpIHtcbiAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgIGNoaWxkID0gR3RrLkxhYmVsLm5ldyhTdHJpbmcoY2hpbGQpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpKSByZXR1cm5cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHBhcmVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5CdWlsZGFibGUpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZC5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICBhZGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLWFkZGVkXCIsIChfLCBjaDogdW5rbm93biwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhZGRDaGlsZChwYXJlbnQsIGNoLCBpbmRleClcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLXJlbW92ZWRcIiwgKF8sIGNoOiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjaGlsZC5kZXN0cm95KCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFkZChwYXJlbnQsIGNoaWxkLCBpbmRleClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBhZGQgJHtjaGlsZH0gdG8gJHtwYXJlbnR9YClcbiAgICB9LFxufSlcblxuZXhwb3J0IHsgRnJhZ21lbnQsIGludHJpbnNpY0VsZW1lbnRzIH1cbmV4cG9ydCB7IGpzeCwganN4cyB9IGZyb20gXCIuLi9qc3gvanN4LmpzXCJcbiIsICJpbXBvcnQgeyBGb3IgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IHdvcmtzcGFjZXMsIGZvY3VzZWRXb3Jrc3BhY2UgfSBmcm9tIFwiLi4vc2VydmljZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gV29ya3NwYWNlcyh7IGNsYXNzOiBjbHMgfTogeyBjbGFzcz86IHN0cmluZyB9KSB7XG4gIHJldHVybiAoXG4gICAgPGJveCBjbGFzcz17YHdvcmtzcGFjZXMgJHtjbHMgPz8gXCJcIn1gfSBzcGFjaW5nPXsyfT5cbiAgICAgIDxGb3IgZWFjaD17d29ya3NwYWNlc30+XG4gICAgICAgIHsod3MpID0+IChcbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICB3aWR0aFJlcXVlc3Q9ezMyfVxuICAgICAgICAgICAgY2xhc3M9e2ZvY3VzZWRXb3Jrc3BhY2UoKGYpID0+XG4gICAgICAgICAgICAgIGY/LmlkID09PSB3cy5pZCA/IFwid29ya3NwYWNlIGZvY3VzZWRcIiA6IFwid29ya3NwYWNlXCJcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IHdzLmZvY3VzKCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICBoZWlnaHRSZXF1ZXN0PXs2fVxuICAgICAgICAgICAgICB3aWR0aFJlcXVlc3Q9ezJ9XG4gICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICBjbGFzcz17Zm9jdXNlZFdvcmtzcGFjZSgoZikgPT5cbiAgICAgICAgICAgICAgICBmPy5pZCA9PT0gd3MuaWQgPyBcImRvdCBmb2N1c2VkXCIgOiBcImRvdFwiXG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApfVxuICAgICAgPC9Gb3I+XG4gICAgPC9ib3g+XG4gICk7XG59XG4iLCAiaW1wb3J0IFRyYXkgZnJvbSBcImdpOi8vQXN0YWxUcmF5XCI7XG5pbXBvcnQgeyBjcmVhdGVCaW5kaW5nIH0gZnJvbSBcImFnc1wiO1xuXG5jb25zdCB0cmF5ID0gVHJheS5nZXRfZGVmYXVsdCgpO1xuXG4vLyBGdW5jdGlvbiB0byBmaWx0ZXIgdmFsaWQgdHJheSBpdGVtc1xuZnVuY3Rpb24gZmlsdGVyVmFsaWRJdGVtcyhpdGVtczogVHJheS5UcmF5SXRlbVtdKTogVHJheS5UcmF5SXRlbVtdIHtcbiAgcmV0dXJuIGl0ZW1zLmZpbHRlcihpdGVtID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gQ2hlY2sgaWYgaXRlbSBpcyB2YWxpZCBhbmQgaGFzIG5lY2Vzc2FyeSBwcm9wZXJ0aWVzXG4gICAgICByZXR1cm4gaXRlbSAmJiBcbiAgICAgICAgICAgICBpdGVtLmdpY29uICYmIFxuICAgICAgICAgICAgIGl0ZW0uaWQgJiYgXG4gICAgICAgICAgICAgIWl0ZW0uZ2V0X3Byb3BlcnR5Py4oXCJpbnZhbGlkXCIpICYmIC8vIENoZWNrIGlmIGl0ZW0gaXMgbWFya2VkIGFzIGludmFsaWRcbiAgICAgICAgICAgICBpdGVtLmdldF9wcm9wZXJ0eT8uKFwic3RhdHVzXCIpICE9PSBcIlBhc3NpdmVcIjsgLy8gRmlsdGVyIG91dCBwYXNzaXZlIGl0ZW1zXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkludmFsaWQgdHJheSBpdGVtIGRldGVjdGVkLCBmaWx0ZXJpbmcgb3V0OlwiLCBlcnJvcik7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9KTtcbn1cblxuLy8gQ3JlYXRlIGJpbmRpbmcgdGhhdCBmaWx0ZXJzIGl0ZW1zXG5leHBvcnQgY29uc3QgdHJheUl0ZW1zID0gY3JlYXRlQmluZGluZyh0cmF5LCBcIml0ZW1zXCIsIChpdGVtczogVHJheS5UcmF5SXRlbVtdKSA9PiB7XG4gIHJldHVybiBmaWx0ZXJWYWxpZEl0ZW1zKGl0ZW1zKTtcbn0pO1xuIiwgImltcG9ydCB7IEZvciB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IHRyYXlJdGVtcyB9IGZyb20gXCIuLi9zZXJ2aWNlXCI7XG5pbXBvcnQgVHJheSBmcm9tIFwiZ2k6Ly9Bc3RhbFRyYXlcIjtcbmltcG9ydCBIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCI7XG5cbmZ1bmN0aW9uIFRyYXlJdGVtQ29tcG9uZW50KHsgaXRlbSB9OiB7IGl0ZW06IFRyYXkuVHJheUl0ZW0gfSkge1xuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzPVwidHJheS1idXR0b25cIlxuICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgIHRyeSB7IGl0ZW0uYWN0aXZhdGUoMCwgMCk7IH0gY2F0Y2gge31cbiAgICAgICAgdHJ5IHsgKGl0ZW0gYXMgYW55KS5zZWNvbmRhcnlBY3RpdmF0ZT8uKDAsIDApOyB9IGNhdGNoIHt9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgaHlwciA9IEh5cHJsYW5kLmdldF9kZWZhdWx0KCk7XG4gICAgICAgICAgaHlwcj8uZGlzcGF0Y2g/LihcImZvY3Vzd2luZG93XCIsIGBjbGFzczoke2l0ZW0udGl0bGV9YCk7XG4gICAgICAgIH0gY2F0Y2gge31cbiAgICAgIH19XG4gICAgPlxuICAgICAgPGltYWdlIGdpY29uPXtpdGVtLmdpY29ufSBwaXhlbFNpemU9ezE0fSAvPlxuICAgIDwvYnV0dG9uPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gU3lzdGVtVHJheSh7IGNsYXNzOiBjbHMgfTogeyBjbGFzcz86IHN0cmluZyB9KSB7XG4gIHJldHVybiAoXG4gICAgPGJveFxuICAgICAgY2xhc3M9e2BzeXN0ZW0tdHJheSAke2NscyA/PyBcIlwifWB9XG4gICAgICBzcGFjaW5nPXs0fVxuICAgICAgdmlzaWJsZT17dHJheUl0ZW1zKChpdGVtcykgPT4gaXRlbXMubGVuZ3RoID4gMCl9XG4gICAgPlxuICAgICAgPEZvciBlYWNoPXt0cmF5SXRlbXN9PnsoaXRlbSkgPT4gPFRyYXlJdGVtQ29tcG9uZW50IGl0ZW09e2l0ZW19IC8+fTwvRm9yPlxuICAgIDwvYm94PlxuICApO1xufVxuIiwgImltcG9ydCBIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCI7XG5pbXBvcnQgeyBjcmVhdGVCaW5kaW5nLCBjcmVhdGVTdGF0ZSB9IGZyb20gXCJhZ3NcIjtcblxuLy8gSHlwcmxhbmQgc2VydmljZSAoZ3VhcmRlZClcbmxldCBoeXByOiBhbnkgPSBudWxsO1xudHJ5IHtcbiAgaHlwciA9IEh5cHJsYW5kLmdldF9kZWZhdWx0KCk7XG59IGNhdGNoIHt9XG5cbi8vIFJlYWN0aXZlIGJpbmRpbmcgdG8gdGhlIGZvY3VzZWQgY2xpZW50IG9yIGZhbGxiYWNrIHN0YXRlXG5sZXQgX19jbGllbnQ6IGFueTtcbmlmIChoeXByKSB7XG4gIF9fY2xpZW50ID0gY3JlYXRlQmluZGluZyhoeXByLCBcImZvY3VzZWRDbGllbnRcIik7XG59IGVsc2Uge1xuICBjb25zdCBbY2xpZW50XSA9IGNyZWF0ZVN0YXRlPGFueT4obnVsbCk7XG4gIF9fY2xpZW50ID0gY2xpZW50O1xufVxuZXhwb3J0IGNvbnN0IGNsaWVudCA9IF9fY2xpZW50O1xuIiwgImltcG9ydCB7IFdpdGggfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBjbGllbnQgfSBmcm9tIFwiLi4vc2VydmljZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gV2luZG93VGl0bGUoeyBjbGFzczogY2xzID0gXCJcIiB9OiB7IGNsYXNzPzogc3RyaW5nIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8V2l0aCB2YWx1ZT17Y2xpZW50fT5cbiAgICAgIHsoYykgPT4ge1xuICAgICAgICBjb25zdCB0aXRsZSA9IGM/LmdldF90aXRsZT8uKCk7XG4gICAgICAgIGNvbnN0IGNsc25hbWUgPSBjPy5nZXRfY2xhc3M/LigpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGJveCBjbGFzcz17YCR7Y2xzfWB9IHNwYWNpbmc9ezZ9IHZpc2libGU9eyEhY30+XG4gICAgICAgICAgICA8aW1hZ2UgaWNvbk5hbWU9e2Nsc25hbWV9IHBpeGVsU2l6ZT17MTh9IC8+XG4gICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3RpdGxlfSB4YWxpZ249ezAuMH0gbWF4V2lkdGhDaGFycz17NDB9IGVsbGlwc2l6ZT17M30gbWFyZ2luRW5kPXszfS8+XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgICB9fVxuICAgIDwvV2l0aD5cbiAgKTtcbn1cbiIsICJpbXBvcnQgQXN0YWxJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4uL2duaW0vc3JjL2pzeC9pbmRleC5qc1wiXG5cbnR5cGUgQXJncyA9IHtcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdXG4gICAgb3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkXG4gICAgZXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFByb2Nlc3MgPSBBc3RhbElPLlByb2Nlc3NcbmV4cG9ydCBjb25zdCBQcm9jZXNzID0gQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKGFyZ3M6IEFyZ3MpOiBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoXG4gICAgY21kOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dD86IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZCxcbiAgICBvbkVycj86IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCxcbik6IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBhcmdzT3JDbWQ6IEFyZ3MgfCBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dDogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnQsXG4gICAgb25FcnI6IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCA9IHByaW50ZXJyLFxuKSB7XG4gICAgY29uc3QgYXJncyA9IEFycmF5LmlzQXJyYXkoYXJnc09yQ21kKSB8fCB0eXBlb2YgYXJnc09yQ21kID09PSBcInN0cmluZ1wiXG4gICAgY29uc3QgeyBjbWQsIGVyciwgb3V0IH0gPSB7XG4gICAgICAgIGNtZDogYXJncyA/IGFyZ3NPckNtZCA6IGFyZ3NPckNtZC5jbWQsXG4gICAgICAgIGVycjogYXJncyA/IG9uRXJyIDogYXJnc09yQ21kLmVyciB8fCBvbkVycixcbiAgICAgICAgb3V0OiBhcmdzID8gb25PdXQgOiBhcmdzT3JDbWQub3V0IHx8IG9uT3V0LFxuICAgIH1cblxuICAgIGNvbnN0IHByb2MgPSBBcnJheS5pc0FycmF5KGNtZClcbiAgICAgICAgPyBBc3RhbElPLlByb2Nlc3Muc3VicHJvY2Vzc3YoY21kKVxuICAgICAgICA6IEFzdGFsSU8uUHJvY2Vzcy5zdWJwcm9jZXNzKGNtZClcblxuICAgIHByb2MuY29ubmVjdChcInN0ZG91dFwiLCAoXywgc3Rkb3V0OiBzdHJpbmcpID0+IG91dChzdGRvdXQpKVxuICAgIHByb2MuY29ubmVjdChcInN0ZGVyclwiLCAoXywgc3RkZXJyOiBzdHJpbmcpID0+IGVycihzdGRlcnIpKVxuICAgIHJldHVybiBwcm9jXG59XG5cbi8qKiBAdGhyb3dzIHtHTGliLkVycm9yfSBUaHJvd3Mgc3RkZXJyICovXG5leHBvcnQgZnVuY3Rpb24gZXhlYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY21kKSA/IEFzdGFsSU8uUHJvY2Vzcy5leGVjdihjbWQpIDogQXN0YWxJTy5Qcm9jZXNzLmV4ZWMoY21kKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhlY0FzeW5jKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNtZCkpIHtcbiAgICAgICAgICAgIEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jdihjbWQsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jdl9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jKGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2Vzcyhpbml0OiBzdHJpbmcsIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdKTogQWNjZXNzb3I8c3RyaW5nPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybTogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3M8VD4oXG4gICAgaW5pdDogVCxcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm0/OiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgcHJvYzogQXN0YWxJTy5Qcm9jZXNzIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBwcm9jID0gc3VicHJvY2VzcyhleGVjLCAoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogKHN0ZG91dCBhcyBUKVxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvYz8ua2lsbCgpXG4gICAgICAgICAgICAgICAgcHJvYyA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IHsgY3JlYXRlU3RhdGUgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBzdWJwcm9jZXNzIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCI7XG5cbmNvbnN0IENGRyA9IFwid2lkZ2V0L2NhdmEvY29uZmlnL2NvbmZpZ1wiO1xubGV0IEJBUl9DT1VOVCA9IDg7XG5cbnRyeSB7XG4gIC8vIEdMaWIuZmlsZV9nZXRfY29udGVudHMgcmV0dXJucyBbc3VjY2VzcywgZGF0YSAoYnl0ZXMpXVxuICBjb25zdCBbX3N1Y2Nlc3MsIGRhdGFdID0gR0xpYi5maWxlX2dldF9jb250ZW50cyhDRkcpO1xuICAvLyBkZWNvZGUgdG8gc3RyaW5nXG4gIGNvbnN0IHRleHQgPSBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSk7XG4gIC8vIE5vdyB5b3UgY2FuIHVzZSAubWF0Y2hcbiAgY29uc3QgbWF0Y2ggPSB0ZXh0Lm1hdGNoKC9eXFxzKmJhcnNcXHMqPVxccyooXFxkKykvbSk7XG4gIGlmIChtYXRjaCkge1xuICAgIEJBUl9DT1VOVCA9IHBhcnNlSW50KG1hdGNoWzFdLCAxMCk7XG4gIH1cbn0gY2F0Y2ggKGUpIHtcbiAgcHJpbnQoYENvdWxkIG5vdCByZWFkIGNhdmEgY29uZmlnLCB1c2luZyBkZWZhdWx0IEJBUl9DT1VOVDogJHtlfWApO1xufVxuXG5leHBvcnQgY29uc3QgW2JhcnNBY2Nlc3Nvciwgc2V0QmFyc10gPSBjcmVhdGVTdGF0ZTxudW1iZXJbXT4oXG4gIEFycmF5KEJBUl9DT1VOVCkuZmlsbCgwKVxuKTtcblxuY29uc3Qgbm9ybSA9ICh2OiBudW1iZXIpID0+IE1hdGgucm91bmQoMiArIChNYXRoLm1pbih2LCAxMDAwKSAvIDEwMDApICogMTQpO1xuXG5zdWJwcm9jZXNzKFxuICBbXCJjYXZhXCIsIFwiLXBcIiwgQ0ZHXSxcbiAgKG91dCkgPT4ge1xuICAgIGNvbnN0IG51bXMgPSBvdXRcbiAgICAgIC50cmltKClcbiAgICAgIC5zcGxpdChcIjtcIilcbiAgICAgIC5tYXAoTnVtYmVyKVxuICAgICAgLmZpbHRlcigobikgPT4gIWlzTmFOKG4pKTtcbiAgICBpZiAobnVtcy5sZW5ndGggPj0gQkFSX0NPVU5UKSBzZXRCYXJzKG51bXMuc2xpY2UoMCwgQkFSX0NPVU5UKS5tYXAobm9ybSkpO1xuICB9LFxuICAoZXJyKSA9PiBjb25zb2xlLmVycm9yKFwiY2F2YSBjcmFzaDpcIiwgZXJyKVxuKTtcblxuZXhwb3J0IHsgQkFSX0NPVU5UIH07XG4iLCAiaW1wb3J0IE1wcmlzIGZyb20gXCJnaTovL0FzdGFsTXByaXNcIjtcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZVN0YXRlIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IEh5cHJsYW5kIGZyb20gXCJnaTovL0FzdGFsSHlwcmxhbmRcIjtcblxuLy8gQXN0YWwgTVBSSVMgc2VydmljZVxuY29uc3QgbXByaXMgPSBNcHJpcy5nZXRfZGVmYXVsdCgpO1xuXG4vLyBSZWFjdGl2ZSBsaXN0IG9mIHBsYXllcnNcbmV4cG9ydCBjb25zdCBwbGF5ZXJzID0gY3JlYXRlQmluZGluZyhtcHJpcywgXCJwbGF5ZXJzXCIpO1xuXG4vLyBFeHBvcnQgdGhlIHJhdyBzZXJ2aWNlIGluIGNhc2UgY29tcG9uZW50cyBuZWVkIGRpcmVjdCBhY2Nlc3NcbmV4cG9ydCBjb25zdCBtcHJpc1NlcnZpY2UgPSBtcHJpcztcblxuLy8gVmlzaWJpbGl0eSBzdGF0ZSBmb3IgdGhlIG1lZGlhIHBhbmVsICh0b2dnbGVkIGJ5IENBVkEgY2xpY2spXG5leHBvcnQgY29uc3QgW21lZGlhUGFuZWxWaXNpYmxlLCBzZXRNZWRpYVBhbmVsVmlzaWJsZV0gPSBjcmVhdGVTdGF0ZShmYWxzZSk7XG5cbmNvbnN0IGh5cHIgPSBIeXBybGFuZC5nZXRfZGVmYXVsdCgpO1xuXG5sZXQgX19tZWRpYVZpc2libGUgPSBmYWxzZTtcbmV4cG9ydCBmdW5jdGlvbiBzaG93TWVkaWFQYW5lbCgpIHtcbiAgX19tZWRpYVZpc2libGUgPSB0cnVlO1xuICBwcmludChgW01lZGlhUGFuZWxdIHNob3dgKTtcbiAgc2V0TWVkaWFQYW5lbFZpc2libGUodHJ1ZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoaWRlTWVkaWFQYW5lbCgpIHtcbiAgX19tZWRpYVZpc2libGUgPSBmYWxzZTtcbiAgcHJpbnQoYFtNZWRpYVBhbmVsXSBoaWRlYCk7XG4gIHNldE1lZGlhUGFuZWxWaXNpYmxlKGZhbHNlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZU1lZGlhUGFuZWwoKSB7XG4gIGNvbnN0IHBsYXllcnMgPSBtcHJpc1NlcnZpY2UucGxheWVycztcbiAgY29uc3QgcGxheWVyID0gcGxheWVycy5maW5kKChwKSA9PiBwLnBsYXliYWNrU3RhdHVzID09PSBNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HKTtcbiAgaWYgKHBsYXllcikge1xuICAgIGh5cHIuZGlzcGF0Y2goXCJmb2N1c3dpbmRvd1wiLCBgY2xhc3M6JHtwbGF5ZXIuZW50cnl9YCk7XG4gIH1cbiAgLy8gX19tZWRpYVZpc2libGUgPSAhX19tZWRpYVZpc2libGU7XG4gIC8vIHByaW50KGBbTWVkaWFQYW5lbF0gdG9nZ2xlIC0+ICR7X19tZWRpYVZpc2libGUgPyBcInRydWVcIiA6IFwiZmFsc2VcIn1gKTtcbiAgLy8gc2V0TWVkaWFQYW5lbFZpc2libGUoX19tZWRpYVZpc2libGUpO1xufSIsICJpbXBvcnQgeyBGb3IgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IGJhcnNBY2Nlc3NvciwgQkFSX0NPVU5UIH0gZnJvbSBcIi4uL3NlcnZpY2VcIjtcbmltcG9ydCB7IHRvZ2dsZU1lZGlhUGFuZWwgfSBmcm9tIFwiLi4vLi4vbWVkaWFwbGF5ZXIvc2VydmljZVwiO1xuXG5cbmNvbnN0IGlkeHMgPSBiYXJzQWNjZXNzb3IoKGIpID0+IGIubWFwKChfLCBpKSA9PiBpKSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBDYXZhVmlzdWFsaXplcih7IGNsYXNzOiBjbHMgfTogeyBjbGFzcz86IHN0cmluZyB9KSB7XG4gIHJldHVybiAoXG4gICA8YnV0dG9uIGNsYXNzPXtgY2F2YS1pc2xhbmQgJHtjbHMgPz8gXCJcIn1gfSBvbkNsaWNrZWQ9e3RvZ2dsZU1lZGlhUGFuZWx9PlxuICAgICA8Ym94IGNsYXNzPVwiY2F2YS13cmFwcGVyXCIgc3BhY2luZz17Mn0+XG4gICAgICAgIDxGb3IgZWFjaD17aWR4c30gaWQ9eyhpKSA9PiBpfT5cbiAgICAgICAgICB7KGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGggPSBiYXJzQWNjZXNzb3IoKGIpID0+IGJbaV0pO1xuICAgICAgICAgICAgY29uc3QgaW5uZXJIID0gaCgodikgPT4gdikgYXMgdW5rbm93biBhcyBudW1iZXI7XG4gICAgICAgICAgICBjb25zdCBvZmZzZXQgPSBNYXRoLmZsb29yKGlubmVySCAvIDIpO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgPGJveCBjc3M9XCJiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcIj5cbiAgICAgICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgICAgICBjbGFzcz1cImNhdmEtYmFyXCJcbiAgICAgICAgICAgICAgICAgIHdpZHRoUmVxdWVzdD17M31cbiAgICAgICAgICAgICAgICAgIGhlaWdodFJlcXVlc3Q9e2lubmVySH1cbiAgICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfX1cbiAgICAgICAgPC9Gb3I+XG4gICAgIDwvYm94PlxuICAgPC9idXR0b24+XG4gICk7XG59XG4iLCAiaW1wb3J0IEFzdGFsSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuLi9nbmltL3NyYy9qc3gvaW5kZXguanNcIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5cbmV4cG9ydCB0eXBlIFRpbWUgPSBBc3RhbElPLlRpbWVcbmV4cG9ydCBjb25zdCBUaW1lID0gQXN0YWxJTy5UaW1lXG5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLmludGVydmFsKGludGVydmFsLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLnRpbWVvdXQodGltZW91dCwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUuaWRsZSgoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBBc3RhbElPLlRpbWUgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgZnVuY3Rpb24gc2V0KHZhbHVlOiBUKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgdGltZXIgPSBpbnRlcnZhbChpdmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aW1lcj8uY2FuY2VsKClcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiO1xuXG4vLyBIZWxwZXI6IEdldCBDUFUgdGVtcCBmcm9tIHNlbnNvcnMgKHN1cHBvcnRzIGsxMHRlbXAgb3IgY29yZXRlbXApXG5mdW5jdGlvbiBwYXJzZUNwdVRlbXAodGV4dDogc3RyaW5nKTogbnVtYmVyIHtcbiAgLy8gVHJ5IEFNRCAoazEwdGVtcClcbiAgbGV0IG1hdGNoID0gdGV4dC5tYXRjaCgvVGN0bDpcXHMqXFwrPyhcXGQrXFwuXFxkKylcdTAwQjBDLyk7XG4gIGlmIChtYXRjaCkgcmV0dXJuIE1hdGgucm91bmQocGFyc2VGbG9hdChtYXRjaFsxXSkpO1xuICAvLyBUcnkgSW50ZWwgKGNvcmV0ZW1wKVxuICBtYXRjaCA9IHRleHQubWF0Y2goL0NvcmUgMDpcXHMqXFwrPyhcXGQrXFwuXFxkKylcdTAwQjBDLyk7XG4gIGlmIChtYXRjaCkgcmV0dXJuIE1hdGgucm91bmQocGFyc2VGbG9hdChtYXRjaFsxXSkpO1xuICAvLyBmYWxsYmFja1xuICByZXR1cm4gMDtcbn1cblxuLy8gSGVscGVyOiBHZXQgR1BVIHRlbXAgKE52aWRpYSwgQU1ELCBJbnRlbClcbmZ1bmN0aW9uIGdldEdwdVRlbXAoKTogbnVtYmVyIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBvdXQgPSBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9zeW5jKFxuICAgICAgXCJudmlkaWEtc21pIC0tcXVlcnktZ3B1PXRlbXBlcmF0dXJlLmdwdSAtLWZvcm1hdD1jc3Ysbm9oZWFkZXIsbm91bml0c1wiXG4gICAgKVsxXTtcbiAgICBpZiAoIW91dCkgcmV0dXJuIDA7XG4gICAgY29uc3QgdGVtcCA9IHBhcnNlSW50KG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShvdXQpLnRyaW0oKSk7XG4gICAgcmV0dXJuIGlzTmFOKHRlbXApID8gMCA6IHRlbXA7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxufVxuXG4vLyBIZWxwZXI6IGdldCBzdGF0dXMgYmFzZWQgb24gbWF4IHRlbXBcbmZ1bmN0aW9uIGdldFRlbXBTdGF0dXMoY3B1OiBudW1iZXIsIGdwdTogbnVtYmVyKTogXCJub3JtYWxcIiB8IFwid2FybVwiIHwgXCJob3RcIiB7XG4gIGNvbnN0IG1heCA9IE1hdGgubWF4KGNwdSwgZ3B1KTtcbiAgaWYgKG1heCA+PSA4NSkgcmV0dXJuIFwiaG90XCI7XG4gIGlmIChtYXggPj0gNzApIHJldHVybiBcIndhcm1cIjtcbiAgcmV0dXJuIFwibm9ybWFsXCI7XG59XG5cbi8vIFBvbGwgYm90aCB0ZW1wcyBldmVyeSAxMCBzZWNvbmRzXG5leHBvcnQgY29uc3Qgc3lzdGVtVGVtcHMgPSBjcmVhdGVQb2xsKFxuICB7IGNwdTogMCwgZ3B1OiAwLCBhdmc6IDAsIHN0YXR1czogXCJub3JtYWxcIiB9LFxuICAxMDAwMCxcbiAgKCkgPT4ge1xuICAgIC8vIENQVSB0ZW1wXG4gICAgbGV0IGNwdSA9IDA7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IG91dCA9IEdMaWIuc3Bhd25fY29tbWFuZF9saW5lX3N5bmMoXCJzZW5zb3JzXCIpWzFdO1xuICAgICAgaWYgKG91dCkgY3B1ID0gcGFyc2VDcHVUZW1wKG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShvdXQpKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgLy8gR1BVIHRlbXBcbiAgICBjb25zdCBncHUgPSBnZXRHcHVUZW1wKCk7XG5cbiAgICAvLyBBdmVyYWdlIGFuZCBzdGF0dXNcbiAgICBjb25zdCBhdmcgPSBNYXRoLnJvdW5kKChjcHUgKyBncHUpIC8gMik7XG4gICAgY29uc3Qgc3RhdHVzID0gZ2V0VGVtcFN0YXR1cyhjcHUsIGdwdSk7XG5cbiAgICByZXR1cm4geyBjcHUsIGdwdSwgYXZnLCBzdGF0dXMgfTtcbiAgfVxuKTtcbiIsICJpbXBvcnQgeyBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgc3lzdGVtVGVtcHMgfSBmcm9tIFwiLi4vc2VydmljZVwiO1xuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIjtcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuXG5mdW5jdGlvbiBnZXRJY29uKHN0YXR1czogc3RyaW5nKSB7XG4gIGNvbnN0IGljb24gPSB7XG4gICAgbm9ybWFsOiBcInRlbXBlcmF0dXJlLW5vcm1hbC1zeW1ib2xpY1wiLFxuICAgIHdhcm06IFwidGVtcGVyYXR1cmUtd2FybS1zeW1ib2xpY1wiLFxuICAgIGhvdDogXCJ0ZW1wZXJhdHVyZS1ob3Qtc3ltYm9saWNcIixcbiAgfTtcbiAgcmV0dXJuIGljb25bc3RhdHVzIGFzIGtleW9mIHR5cGVvZiBpY29uXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFN5c3RlbVRlbXAoeyBjbGFzczogY2xzIH06IHsgY2xhc3M/OiBzdHJpbmcgfSkge1xuICByZXR1cm4gKFxuICAgIDxib3ggY2xhc3M9e2BzeXN0ZW0tdGVtcCAke2NscyA/PyBcIlwifWB9PlxuICAgICAgPFdpdGggdmFsdWU9e3N5c3RlbVRlbXBzfT5cbiAgICAgICAgeyh7IGNwdSwgZ3B1LCBhdmcsIHN0YXR1cyB9KSA9PiAoXG4gICAgICAgICAgPGJveFxuICAgICAgICAgICAgY2xhc3M9e2BzeXN0ZW0tdGVtcHMgJHtzdGF0dXN9YH1cbiAgICAgICAgICAgIHdpZHRoUmVxdWVzdD17NTB9XG4gICAgICAgICAgICBob21vZ2VuZW91cz17dHJ1ZX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Ym94IGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0gc3BhY2luZz17Mn0+XG4gICAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICAgIGdpY29uPXtHaW8uaWNvbl9uZXdfZm9yX3N0cmluZyhnZXRJY29uKHN0YXR1cykpfVxuICAgICAgICAgICAgICAgIHBpeGVsU2l6ZT17MTJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17YCR7YXZnfVx1MDBCMENgfSAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgICl9XG4gICAgICA8L1dpdGg+XG4gICAgPC9ib3g+XG4gICk7XG59XG4iLCAiaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiO1xuXG4vLyBHZXQgY2l0eS9sYXQvbG9uIG9uY2UgYXQgc3RhcnR1cCAoYmxvY2tpbmcgaXMgT0sgZm9yIGEgb25lLXRpbWUgY2FsbClcbmZ1bmN0aW9uIGdldExvY2F0aW9uKCk6IHsgbGF0OiBudW1iZXI7IGxvbjogbnVtYmVyOyBjaXR5OiBzdHJpbmcgfSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3Qgb3V0ID0gR0xpYi5zcGF3bl9jb21tYW5kX2xpbmVfc3luYyhcbiAgICAgICAgICAgIFwiY3VybCAtcyAtLW1heC10aW1lIDEwIC0tY29ubmVjdC10aW1lb3V0IDUgaHR0cDovL2lwLWFwaS5jb20vanNvbi9cIlxuICAgICAgICApWzFdO1xuICAgICAgICBpZiAoIW91dCkgdGhyb3cgbmV3IEVycm9yKFwiTm8gZGF0YVwiKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoaW1wb3J0cy5ieXRlQXJyYXkudG9TdHJpbmcob3V0KSk7XG4gICAgICAgIHJldHVybiB7IGxhdDogZGF0YS5sYXQsIGxvbjogZGF0YS5sb24sIGNpdHk6IGRhdGEuY2l0eSB9O1xuICAgIH0gY2F0Y2gge1xuICAgICAgICAvLyBGYWxsYmFjazogTW9udHJlYWxcbiAgICAgICAgcmV0dXJuIHsgbGF0OiA0NS41MDE3LCBsb246IC03My41NjczLCBjaXR5OiBcIk1vbnRyZWFsXCIgfTtcbiAgICB9XG59XG5jb25zdCB7IGxhdCwgbG9uLCBjaXR5IH0gPSBnZXRMb2NhdGlvbigpO1xuXG5mdW5jdGlvbiBnZXRXZWF0aGVySWNvbkZyb21XTU9Db2RlKGNvZGU6IG51bWJlcikge1xuICAgIGlmIChjb2RlID09PSAwKSByZXR1cm4gXCJcdTI2MDBcdUZFMEZcIjtcbiAgICBpZiAoY29kZSA8PSAzKSByZXR1cm4gXCJcdTI2QzVcIjtcbiAgICBpZiAoY29kZSA8PSA0OCkgcmV0dXJuIFwiXHVEODNDXHVERjJCXHVGRTBGXCI7XG4gICAgaWYgKGNvZGUgPD0gNTcpIHJldHVybiBcIlx1RDgzQ1x1REYyNlx1RkUwRlwiO1xuICAgIGlmIChjb2RlIDw9IDY3KSByZXR1cm4gXCJcdUQ4M0NcdURGMjdcdUZFMEZcIjtcbiAgICBpZiAoY29kZSA8PSA3NykgcmV0dXJuIFwiXHUyNzQ0XHVGRTBGXCI7XG4gICAgaWYgKGNvZGUgPD0gODIpIHJldHVybiBcIlx1RDgzQ1x1REYyN1x1RkUwRlwiO1xuICAgIGlmIChjb2RlIDw9IDg2KSByZXR1cm4gXCJcdTI3NDRcdUZFMEZcIjtcbiAgICBpZiAoY29kZSA8PSA5OSkgcmV0dXJuIFwiXHUyNkM4XHVGRTBGXCI7XG4gICAgcmV0dXJuIFwiXHVEODNDXHVERjIxXHVGRTBGXCI7XG59XG5cbi8vIFBvbGwgZXZlcnkgMTAgbWludXRlcyAoNjAwLDAwMCBtcylcbmV4cG9ydCBjb25zdCB3ZWF0aGVyID0gY3JlYXRlUG9sbChcbiAgICB7IHRlbXBlcmF0dXJlOiAwLCBmZWVsc0xpa2U6IDAsIGljb246IFwiXHVEODNDXHVERjIxXHVGRTBGXCIsIGxvY2F0aW9uOiBjaXR5IH0sXG4gICAgNjAwMDAwLFxuICAgICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5vcGVuLW1ldGVvLmNvbS92MS9mb3JlY2FzdD9sYXRpdHVkZT0ke2xhdH0mbG9uZ2l0dWRlPSR7bG9ufSZjdXJyZW50PXRlbXBlcmF0dXJlXzJtLGFwcGFyZW50X3RlbXBlcmF0dXJlLHdlYXRoZXJfY29kZSZ0aW1lem9uZT1hdXRvYDtcbiAgICAgICAgICAgIGNvbnN0IG91dCA9IEdMaWIuc3Bhd25fY29tbWFuZF9saW5lX3N5bmMoYGN1cmwgLXMgLS1tYXgtdGltZSAxNSAtLWNvbm5lY3QtdGltZW91dCA4ICcke3VybH0nYClbMV07XG4gICAgICAgICAgICBpZiAoIW91dCkgdGhyb3cgbmV3IEVycm9yKFwiTm8gZGF0YVwiKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGltcG9ydHMuYnl0ZUFycmF5LnRvU3RyaW5nKG91dCkpO1xuICAgICAgICAgICAgY29uc3QgYyA9IGRhdGEuY3VycmVudDtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdGVtcGVyYXR1cmU6IE1hdGgucm91bmQoYy50ZW1wZXJhdHVyZV8ybSksXG4gICAgICAgICAgICAgICAgZmVlbHNMaWtlOiBNYXRoLnJvdW5kKGMuYXBwYXJlbnRfdGVtcGVyYXR1cmUpLFxuICAgICAgICAgICAgICAgIGljb246IGdldFdlYXRoZXJJY29uRnJvbVdNT0NvZGUoYy53ZWF0aGVyX2NvZGUpLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiBjaXR5LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4geyB0ZW1wZXJhdHVyZTogMCwgZmVlbHNMaWtlOiAwLCBpY29uOiBcIlx1RDgzQ1x1REYyMVx1RkUwRlwiLCBsb2NhdGlvbjogY2l0eSB9O1xuICAgICAgICB9XG4gICAgfVxuKTtcbiIsICJpbXBvcnQgeyBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgd2VhdGhlciB9IGZyb20gXCIuLi9TZXJ2aWNlXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFdlYXRoZXIoeyBjbGFzczogY2xzIH06IHsgY2xhc3M/OiBzdHJpbmcgfSkge1xuICByZXR1cm4gKFxuICAgIDxXaXRoIHZhbHVlPXt3ZWF0aGVyfT5cbiAgICAgIHsodmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgeyBpY29uLCBmZWVsc0xpa2UsIGxvY2F0aW9uIH0gPSB2YWx1ZSBhcyB7XG4gICAgICAgICAgaWNvbjogc3RyaW5nO1xuICAgICAgICAgIGZlZWxzTGlrZTogbnVtYmVyO1xuICAgICAgICAgIGxvY2F0aW9uOiBzdHJpbmc7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGJveFxuICAgICAgICAgICAgY2xhc3M9e2B3ZWF0aGVyLXdpZGdldCAke2NscyA/PyBcIlwifWB9XG4gICAgICAgICAgICB3aWR0aFJlcXVlc3Q9ezY0fVxuICAgICAgICAgICAgaG9tb2dlbmVvdXM9e3RydWV9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9IHNwYWNpbmc9ezR9PlxuICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e2ljb259IC8+XG4gICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17YCR7ZmVlbHNMaWtlfVx1MDBCMENgfSAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgICB9fVxuICAgIDwvV2l0aD5cbiAgKTtcbn1cbiIsICJpbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCI7XG5cbmV4cG9ydCBjb25zdCB0aW1lID0gY3JlYXRlUG9sbChcIlwiLCAxMDAwLCBbXCJkYXRlXCIsIFwiKyVhICVkICVIOiVNXCJdKTsiLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyB0aW1lIH0gZnJvbSBcIi4uL1NlcnZpY2VcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFRpbWVEaXNwbGF5KHsgY2xhc3M6IGNscyB9OiB7IGNsYXNzPzogc3RyaW5nIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8Ym94IGNsYXNzPXtgdGltZS1kaXNwbGF5ICR7Y2xzID8/IFwiXCJ9YH0+XG4gICAgICA8bWVudWJ1dHRvbiBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9IHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgIDxsYWJlbCBsYWJlbD17dGltZX0gLz5cbiAgICAgICAgPHBvcG92ZXI+XG4gICAgICAgICAgPEd0ay5DYWxlbmRhciAvPlxuICAgICAgICA8L3BvcG92ZXI+XG4gICAgICA8L21lbnVidXR0b24+XG4gICAgPC9ib3g+XG4gICk7XG59XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiO1xuaW1wb3J0IHsgaXNCbHVldG9vdGhPbiB9IGZyb20gXCIuLi9zZXJ2aWNlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBCbHVldG9vdGhCdXR0b24oe1xuICBjbGFzczogY2xzID0gXCJcIixcbn06IHtcbiAgY2xhc3M/OiBzdHJpbmc7XG59KSB7XG4gIHJldHVybiAoXG4gICAgPGJveCBjbGFzcz17YCR7Y2xzfWB9PlxuICAgICAgPGJ1dHRvblxuICAgICAgICBvbkNsaWNrZWQ9eygpID0+IEdMaWIuc3Bhd25fY29tbWFuZF9saW5lX2FzeW5jKFwiYmx1ZWJlcnJ5XCIpfVxuICAgICAgPlxuICAgICAgICA8aW1hZ2VcbiAgICAgICAgICBpY29uTmFtZT17aXNCbHVldG9vdGhPbigob24pID0+XG4gICAgICAgICAgICBvbiA/IFwiYmx1ZXRvb3RoLWFjdGl2ZS1zeW1ib2xpY1wiIDogXCJibHVldG9vdGgtZGlzYWJsZWQtc3ltYm9saWNcIlxuICAgICAgICAgICl9XG4gICAgICAgICAgcGl4ZWxTaXplPXsxNn1cbiAgICAgICAgICBjc3M9XCJ0cmFuc2Zvcm06IHNjYWxlKDAuOCk7XCIgLy8gYWRqdXN0IGFzIG5lZWRlZFxuICAgICAgICAvPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9ib3g+XG4gICk7XG59XG4iLCAiaW1wb3J0IEJsdWV0b290aCBmcm9tIFwiZ2k6Ly9Bc3RhbEJsdWV0b290aFwiO1xuXG5leHBvcnQgY29uc3QgYmx1ZXRvb3RoID0gQmx1ZXRvb3RoLmdldF9kZWZhdWx0KCk7XG5pbXBvcnQgeyBjcmVhdGVCaW5kaW5nIH0gZnJvbSBcImFnc1wiO1xuXG5leHBvcnQgY29uc3QgaXNCbHVldG9vdGhPbiA9IGNyZWF0ZUJpbmRpbmcoXG4gICAgYmx1ZXRvb3RoIGFzIGFueSxcbiAgICBcImlzLXBvd2VyZWRcIlxuICApO1xuICAiLCAiaW1wb3J0IE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiO1xuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgY3JlYXRlU3RhdGUgfSBmcm9tIFwiYWdzXCI7XG5cbi8vIEFzdGFsIG5vdGlmaWNhdGlvbnMgc2VydmljZSAoZ3VhcmRlZClcbmxldCBub3RpZmQ6IGFueSA9IG51bGw7XG50cnkge1xuICBub3RpZmQgPSBOb3RpZmQuZ2V0X2RlZmF1bHQoKTtcbiAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gU3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCB0byBOb3RpZmRcIik7XG59IGNhdGNoIChlcnJvcikge1xuICBjb25zb2xlLmVycm9yKFwiW05vdGlmaWNhdGlvbnNdIEZhaWxlZCB0byBjb25uZWN0IHRvIE5vdGlmZDpcIiwgZXJyb3IpO1xufVxuXG4vLyBMaXZlIGxpc3Qgb2Ygbm90aWZpY2F0aW9ucyBmcm9tIHRoZSBkYWVtb24gb3IgZW1wdHkgc3RhdGUgZmFsbGJhY2tcbmxldCBfX25vdGlmaWNhdGlvbnM6IGFueTtcbmlmIChub3RpZmQpIHtcbiAgX19ub3RpZmljYXRpb25zID0gY3JlYXRlQmluZGluZyhub3RpZmQsIFwibm90aWZpY2F0aW9uc1wiKTtcbn0gZWxzZSB7XG4gIGNvbnN0IFtsaXN0XSA9IGNyZWF0ZVN0YXRlPGFueVtdPihbXSk7XG4gIF9fbm90aWZpY2F0aW9ucyA9IGxpc3Q7XG59XG5leHBvcnQgY29uc3Qgbm90aWZpY2F0aW9ucyA9IF9fbm90aWZpY2F0aW9ucztcblxuLy8gTm90aWZpY2F0aW9uIHJhY2sgc3RhdGUgLSBtYW5hZ2VzIGxpdmUgbm90aWZpY2F0aW9ucyB0aGF0IHN0YWNrXG5leHBvcnQgY29uc3QgW3JhY2tOb3RpZmljYXRpb25zLCBzZXRSYWNrTm90aWZpY2F0aW9uc10gPSBjcmVhdGVTdGF0ZTxhbnlbXT4oW10pO1xuZXhwb3J0IGNvbnN0IFtjZW50ZXJWaXNpYmxlLCBzZXRDZW50ZXJWaXNpYmxlXSA9IGNyZWF0ZVN0YXRlKGZhbHNlKTtcblxuLy8gRGVidWc6IExvZyBpbml0aWFsIHJhY2sgc3RhdGVcbmNvbnNvbGUubG9nKFwiW05vdGlmaWNhdGlvbnNdIFJhY2sgaW5pdGlhbGl6ZWQsIG5vdGlmZCBhdmFpbGFibGU6XCIsICEhbm90aWZkKTtcblxuLy8gU2ltcGxlIHRpbWVvdXQgdHJhY2tpbmdcbmNvbnN0IEJBU0VfRElTTUlTU19USU1FID0gMzAwMDtcbmNvbnN0IE5PVElGSUNBVElPTl9JTlRFUlZBTCA9IDIwMDA7XG5jb25zdCB0aW1lb3V0cyA9IG5ldyBNYXA8YW55LCBhbnk+KCk7XG5sZXQgb3JkZXJDb3VudGVyID0gMDtcblxuLy8gV2hlbiBhIG5ldyBub3RpZmljYXRpb24gYXJyaXZlcywgYWRkIGl0IHRvIHRoZSByYWNrXG50cnkge1xuICBpZiAobm90aWZkKSB7XG4gICAgbm90aWZkLmNvbm5lY3QoXCJub3RpZmllZFwiLCAoXzogYW55LCBpZDogbnVtYmVyLCBpc19uZXc6IGJvb2xlYW4pID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwiW05vdGlmaWNhdGlvbnNdIE5vdGlmaWVkIHNpZ25hbCAtIElEOlwiLCBpZCwgXCJpc19uZXc6XCIsIGlzX25ldyk7XG4gICAgICBcbiAgICAgIC8vIEdldCB0aGUgYWN0dWFsIG5vdGlmaWNhdGlvbiBvYmplY3QgdXNpbmcgdGhlIElEXG4gICAgICBjb25zdCBub3RpZmljYXRpb24gPSBub3RpZmQuZ2V0X25vdGlmaWNhdGlvbihpZCk7XG4gICAgICBpZiAoIW5vdGlmaWNhdGlvbikge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJbTm90aWZpY2F0aW9uc10gQ291bGQgbm90IGdldCBub3RpZmljYXRpb24gd2l0aCBJRDpcIiwgaWQpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKFwiW05vdGlmaWNhdGlvbnNdIEdvdCBub3RpZmljYXRpb246XCIsIG5vdGlmaWNhdGlvbi5zdW1tYXJ5LCBub3RpZmljYXRpb24uYm9keSk7XG4gICAgICBcbiAgICAgIC8vIEFkZCB0byByYWNrIGltbWVkaWF0ZWx5XG4gICAgICBzZXRSYWNrTm90aWZpY2F0aW9ucyhwcmV2ID0+IFsuLi5wcmV2LCBub3RpZmljYXRpb25dKTtcbiAgICAgIFxuICAgICAgLy8gU2V0IGluZGl2aWR1YWwgdGltZW91dCBmb3IgdGhpcyBub3RpZmljYXRpb25cbiAgICAgIGNvbnN0IG9yZGVyID0gb3JkZXJDb3VudGVyKys7XG4gICAgICBjb25zdCBkaXNtaXNzVGltZSA9IEJBU0VfRElTTUlTU19USU1FICsgKG9yZGVyICogTk9USUZJQ0FUSU9OX0lOVEVSVkFMKTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gV2lsbCBkaXNtaXNzIGluOlwiLCBkaXNtaXNzVGltZSwgXCJtc1wiKTtcbiAgICAgIFxuICAgICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiW05vdGlmaWNhdGlvbnNdIEF1dG8tZGlzbWlzc2luZyBub3RpZmljYXRpb246XCIsIG5vdGlmaWNhdGlvbi5zdW1tYXJ5KTtcbiAgICAgICAgcmVtb3ZlRnJvbVJhY2sobm90aWZpY2F0aW9uKTtcbiAgICAgIH0sIGRpc21pc3NUaW1lKTtcbiAgICAgIFxuICAgICAgdGltZW91dHMuc2V0KG5vdGlmaWNhdGlvbiwgdGltZW91dElkKTtcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZyhcIltOb3RpZmljYXRpb25zXSBTZXJ2aWNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHlcIik7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gTm8gbm90aWZkIGF2YWlsYWJsZVwiKTtcbiAgfVxufSBjYXRjaCAoZXJyb3IpIHtcbiAgY29uc29sZS5lcnJvcihcIltOb3RpZmljYXRpb25zXSBGYWlsZWQgdG8gY29ubmVjdDpcIiwgZXJyb3IpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVGcm9tUmFjayhub3RpZmljYXRpb246IGFueSkge1xuICBjb25zb2xlLmxvZyhcIltOb3RpZmljYXRpb25zXSByZW1vdmVGcm9tUmFjayBjYWxsZWQgZm9yIG5vdGlmaWNhdGlvblwiKTtcbiAgXG4gIC8vIENsZWFyIHRpbWVvdXRcbiAgY29uc3QgdGltZW91dElkID0gdGltZW91dHMuZ2V0KG5vdGlmaWNhdGlvbik7XG4gIGlmICh0aW1lb3V0SWQpIHtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICB0aW1lb3V0cy5kZWxldGUobm90aWZpY2F0aW9uKTtcbiAgICBjb25zb2xlLmxvZyhcIltOb3RpZmljYXRpb25zXSBDbGVhcmVkIHRpbWVvdXRcIik7XG4gIH1cbiAgXG4gIC8vIEdldCBjdXJyZW50IHN0YXRlIGJlZm9yZSByZW1vdmFsXG4gIGNvbnN0IGN1cnJlbnROb3RpZnMgPSByYWNrTm90aWZpY2F0aW9ucy5nZXQoKTtcbiAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gQ3VycmVudCBub3RpZmljYXRpb25zIGNvdW50IGJlZm9yZSByZW1vdmFsOlwiLCBjdXJyZW50Tm90aWZzLmxlbmd0aCk7XG4gIFxuICAvLyBSZW1vdmUgZnJvbSByYWNrXG4gIHNldFJhY2tOb3RpZmljYXRpb25zKHByZXYgPT4ge1xuICAgIGNvbnN0IGZpbHRlcmVkID0gcHJldi5maWx0ZXIobiA9PiBuICE9PSBub3RpZmljYXRpb24pO1xuICAgIGNvbnNvbGUubG9nKFwiW05vdGlmaWNhdGlvbnNdIEZpbHRlcmVkIG5vdGlmaWNhdGlvbnMgY291bnQ6XCIsIGZpbHRlcmVkLmxlbmd0aCk7XG4gICAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gV2FzIG5vdGlmaWNhdGlvbiByZW1vdmVkP1wiLCBwcmV2Lmxlbmd0aCAhPT0gZmlsdGVyZWQubGVuZ3RoKTtcbiAgICBcbiAgICAvLyBSZXNldCBjb3VudGVyIHdoZW4gZW1wdHlcbiAgICBpZiAoZmlsdGVyZWQubGVuZ3RoID09PSAwKSB7XG4gICAgICBvcmRlckNvdW50ZXIgPSAwO1xuICAgICAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gQWxsIGNsZWFyZWQsIHJlc2V0IGNvdW50ZXJcIik7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBmaWx0ZXJlZDtcbiAgfSk7XG4gIFxuICAvLyBDaGVjayBzdGF0ZSBhZnRlciB1cGRhdGVcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgY29uc3QgbmV3Q291bnQgPSByYWNrTm90aWZpY2F0aW9ucy5nZXQoKS5sZW5ndGg7XG4gICAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gU3RhdGUgYWZ0ZXIgcmVtb3ZhbDpcIiwgbmV3Q291bnQpO1xuICB9LCAxMDApO1xuICBcbiAgLy8gU3lzdGVtIGRpc21pc3NcbiAgdHJ5IHtcbiAgICBub3RpZmljYXRpb24/LmRpc21pc3M/LigpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gU3lzdGVtIGRpc21pc3MgZmFpbGVkXCIpO1xuICB9XG59XG5cbi8vIExlZ2FjeSBwb3B1cCBzdGF0ZSBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuZXhwb3J0IGNvbnN0IFtsYXN0UG9wdXAsIHNldExhc3RQb3B1cF0gPSBjcmVhdGVTdGF0ZTxhbnkgfCBudWxsPihudWxsKTtcbmV4cG9ydCBjb25zdCBbcG9wdXBWaXNpYmxlLCBzZXRQb3B1cFZpc2libGVdID0gY3JlYXRlU3RhdGUoZmFsc2UpO1xuXG4vLyBQdWJsaWMgZnVuY3Rpb24gdG8gZGlzbWlzcyBub3RpZmljYXRpb24gKGNhbGxlZCBmcm9tIFVJKVxuZXhwb3J0IGZ1bmN0aW9uIGRpc21pc3NOb3RpZmljYXRpb24objogYW55KSB7XG4gIGNvbnNvbGUubG9nKFwiW05vdGlmaWNhdGlvbnNdIE1hbnVhbCBkaXNtaXNzIHJlcXVlc3RlZFwiKTtcbiAgcmVtb3ZlRnJvbVJhY2sobik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnZva2VEZWZhdWx0KG46IGFueSkge1xuICB0cnkgeyBuPy5hY3RpdmF0ZT8uKCk7IH0gY2F0Y2gge31cbn1cblxubGV0IF9fY2VudGVyU2hvd24gPSBmYWxzZTtcbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVOb3RpZmljYXRpb25DZW50ZXIoKSB7XG4gIF9fY2VudGVyU2hvd24gPSAhX19jZW50ZXJTaG93bjtcbiAgc2V0Q2VudGVyVmlzaWJsZShfX2NlbnRlclNob3duKTtcbiAgdHJ5IHsgcHJpbnQoYFtOb3RpZmljYXRpb25zXSBjZW50ZXJWaXNpYmxlIC0+ICR7X19jZW50ZXJTaG93bn1gKTsgfSBjYXRjaCB7fVxufVxuXG4vLyBGb3JjZSBjbGVhciBhbGwgbm90aWZpY2F0aW9ucyAoZGVidWcgaGVscGVyKVxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQWxsTm90aWZpY2F0aW9ucygpIHtcbiAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gRm9yY2UgY2xlYXJpbmcgYWxsIG5vdGlmaWNhdGlvbnNcIik7XG4gIFxuICAvLyBDbGVhciBhbGwgdGltZW91dHNcbiAgdGltZW91dHMuZm9yRWFjaCgodGltZW91dElkKSA9PiB7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gIH0pO1xuICBcbiAgdGltZW91dHMuY2xlYXIoKTtcbiAgb3JkZXJDb3VudGVyID0gMDtcbiAgc2V0UmFja05vdGlmaWNhdGlvbnMoW10pO1xuICBcbiAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uc10gQWxsIG5vdGlmaWNhdGlvbnMgY2xlYXJlZFwiKTtcbn1cblxuLy8gQWRkIGltbWVkaWF0ZSBjbGVhciBmdW5jdGlvbiB0byBjYWxsIGZyb20gY29uc29sZVxudHJ5IHtcbiAgKGdsb2JhbFRoaXMgYXMgYW55KS5jbGVhck5vdGlmaWNhdGlvbnMgPSBjbGVhckFsbE5vdGlmaWNhdGlvbnM7XG59IGNhdGNoIHtcbiAgLy8gSWdub3JlIGlmIGdsb2JhbCBhc3NpZ25tZW50IGZhaWxzXG59XG4iLCAiZXhwb3J0IGZ1bmN0aW9uIGdldE5vdGlmaWNhdGlvbkljb24obm90aWZpY2F0aW9uOiBhbnkpOiB7IHR5cGU6IFwiZ2ljb25cIiB8IFwiaWNvbk5hbWVcIiB8IFwiZmlsZVwiOyB2YWx1ZTogYW55IH0ge1xuICBjb25zdCBhcHBJY29uID0gbm90aWZpY2F0aW9uPy5hcHBfaWNvbjtcblxuICBpZiAoYXBwSWNvbiAmJiB0eXBlb2YgYXBwSWNvbiA9PT0gXCJvYmplY3RcIikge1xuICAgIHJldHVybiB7IHR5cGU6IFwiZ2ljb25cIiwgdmFsdWU6IGFwcEljb24gfTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYXBwSWNvbiA9PT0gXCJzdHJpbmdcIiAmJiBhcHBJY29uLmxlbmd0aCA+IDApIHtcbiAgICAvLyBJZiBsb29rcyBsaWtlIGEgZmlsZXN5c3RlbSBwYXRoIG9yIGltYWdlIGZpbGUsIHVzZSBmaWxlIHNvdXJjZVxuICAgIGNvbnN0IGlzRmlsZVBhdGggPSBhcHBJY29uLnN0YXJ0c1dpdGgoXCIvXCIpIHx8IGFwcEljb24uc3RhcnRzV2l0aChcIi4vXCIpIHx8IGFwcEljb24uZW5kc1dpdGgoXCIucG5nXCIpIHx8IGFwcEljb24uZW5kc1dpdGgoXCIuc3ZnXCIpO1xuICAgIGlmIChpc0ZpbGVQYXRoKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcImZpbGVcIiwgdmFsdWU6IGFwcEljb24gfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgdHlwZTogXCJpY29uTmFtZVwiLCB2YWx1ZTogYXBwSWNvbiB9O1xuICB9XG5cbiAgY29uc3QgZGVza3RvcEVudHJ5ID0gbm90aWZpY2F0aW9uPy5kZXNrdG9wX2VudHJ5O1xuICBpZiAodHlwZW9mIGRlc2t0b3BFbnRyeSA9PT0gXCJzdHJpbmdcIiAmJiBkZXNrdG9wRW50cnkubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiB7IHR5cGU6IFwiaWNvbk5hbWVcIiwgdmFsdWU6IGRlc2t0b3BFbnRyeSB9O1xuICB9XG5cbiAgY29uc3QgYXBwTmFtZSA9IG5vdGlmaWNhdGlvbj8uYXBwX25hbWU7XG4gIGlmICh0eXBlb2YgYXBwTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBhcHBOYW1lLmxlbmd0aCA+IDApIHtcbiAgICAvLyBiZXN0LWVmZm9ydDogdHJhbnNmb3JtIHRvIHR5cGljYWwgaWNvbiBuYW1lIGZvcm1hdFxuICAgIGNvbnN0IGNhbmRpZGF0ZSA9IGFwcE5hbWUudG9Mb3dlckNhc2UoKS5yZXBsYWNlQWxsKFwiIFwiLCBcIi1cIik7XG4gICAgcmV0dXJuIHsgdHlwZTogXCJpY29uTmFtZVwiLCB2YWx1ZTogY2FuZGlkYXRlIH07XG4gIH1cblxuICByZXR1cm4geyB0eXBlOiBcImljb25OYW1lXCIsIHZhbHVlOiBcImRpYWxvZy1pbmZvcm1hdGlvblwiIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROb3RpZmljYXRpb25BcHBOYW1lKG5vdGlmaWNhdGlvbjogYW55KTogc3RyaW5nIHtcbiAgY29uc3QgYXBwTmFtZSA9IG5vdGlmaWNhdGlvbj8uYXBwX25hbWU7XG4gIGlmICh0eXBlb2YgYXBwTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBhcHBOYW1lLmxlbmd0aCA+IDApIHJldHVybiBhcHBOYW1lO1xuXG4gIGNvbnN0IGRlc2t0b3BFbnRyeSA9IG5vdGlmaWNhdGlvbj8uZGVza3RvcF9lbnRyeTtcbiAgaWYgKHR5cGVvZiBkZXNrdG9wRW50cnkgPT09IFwic3RyaW5nXCIgJiYgZGVza3RvcEVudHJ5Lmxlbmd0aCA+IDApIHJldHVybiBkZXNrdG9wRW50cnk7XG5cbiAgcmV0dXJuIFwiTm90aWZpY2F0aW9uXCI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRSZWxhdGl2ZVRpbWUoZXBvY2hNcz86IG51bWJlcik6IHN0cmluZyB7XG4gIGlmICghZXBvY2hNcyB8fCBOdW1iZXIuaXNOYU4oZXBvY2hNcykpIHJldHVybiBcIlwiO1xuICBjb25zdCBkaWZmID0gTWF0aC5tYXgoMCwgRGF0ZS5ub3coKSAtIGVwb2NoTXMpO1xuICBjb25zdCBzZWNvbmRzID0gTWF0aC5mbG9vcihkaWZmIC8gMTAwMCk7XG4gIGlmIChzZWNvbmRzIDwgNjApIHJldHVybiBgJHtzZWNvbmRzfXNgO1xuICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcihzZWNvbmRzIC8gNjApO1xuICBpZiAobWludXRlcyA8IDYwKSByZXR1cm4gYCR7bWludXRlc31tYDtcbiAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKG1pbnV0ZXMgLyA2MCk7XG4gIGlmIChob3VycyA8IDI0KSByZXR1cm4gYCR7aG91cnN9aGA7XG4gIGNvbnN0IGRheXMgPSBNYXRoLmZsb29yKGhvdXJzIC8gMjQpO1xuICByZXR1cm4gYCR7ZGF5c31kYDtcbn1cblxuIiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IHsgQXN0YWwsIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgRm9yIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgcmFja05vdGlmaWNhdGlvbnMsIGRpc21pc3NOb3RpZmljYXRpb24sIGludm9rZURlZmF1bHQgfSBmcm9tIFwiLi4vc2VydmljZVwiO1xuaW1wb3J0IHsgZ2V0Tm90aWZpY2F0aW9uSWNvbiwgZ2V0Tm90aWZpY2F0aW9uQXBwTmFtZSwgZm9ybWF0UmVsYXRpdmVUaW1lIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBOb3RpZmljYXRpb25SYWNrKCkge1xuICBjb25zb2xlLmxvZyhcIltOb3RpZmljYXRpb25SYWNrXSBDb21wb25lbnQgZnVuY3Rpb24gY2FsbGVkIGF0XCIsIERhdGUubm93KCkpO1xuICBcbiAgcmV0dXJuIChcbiAgICA8d2luZG93XG4gICAgICBuYW1lPVwibm90aWZpY2F0aW9uLXJhY2tcIlxuICAgICAgY2xhc3M9XCJub3RpZmljYXRpb24tcmFja1wiXG4gICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgICAgYW5jaG9yPXtBc3RhbC5XaW5kb3dBbmNob3IuVE9QIHwgQXN0YWwuV2luZG93QW5jaG9yLlJJR0hUfVxuICAgICAgdmlzaWJsZT17dHJ1ZX1cbiAgICAgIGxheWVyPXtBc3RhbC5MYXllci5PVkVSTEFZfVxuICAgICAgbWFyZ2luVG9wPXsxMH1cbiAgICAgIG1hcmdpblJpZ2h0PXsxMH1cbiAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5JR05PUkV9XG4gICAgPlxuICAgICAgPGJveCBcbiAgICAgICAgY2xhc3M9XCJyYWNrLWNvbnRhaW5lclwiIFxuICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSBcbiAgICAgICAgc3BhY2luZz17OH1cbiAgICAgICAgd2lkdGhSZXF1ZXN0PXszNTB9XG4gICAgICAgIGhlaWdodFJlcXVlc3Q9ey0xfVxuICAgICAgPlxuICAgICAgICB7LyogVXNlIGRpcmVjdCBiaW5kaW5nIGluc3RlYWQgb2YgLmdldCgpICovfVxuICAgICAgICA8Rm9yIGVhY2g9e3JhY2tOb3RpZmljYXRpb25zfT5cbiAgICAgICAgICB7KG46IGFueSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJbTm90aWZpY2F0aW9uUmFja10gUmVuZGVyaW5nIG5vdGlmaWNhdGlvbjpcIiwgbj8uc3VtbWFyeSB8fCBcIk5PX1NVTU1BUllcIik7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8Ym94IFxuICAgICAgICAgICAgICAgIGNsYXNzPVwibm90aWZpY2F0aW9uIHJhY2staXRlbVwiXG4gICAgICAgICAgICAgICAgd2lkdGhSZXF1ZXN0PXszMzB9XG4gICAgICAgICAgICAgICAgaGVpZ2h0UmVxdWVzdD17ODB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Ym94IGNsYXNzPVwibm90aWZpY2F0aW9uLWNvbnRhaW5lclwiIHNwYWNpbmc9ezh9PlxuICAgICAgICAgICAgICAgICAgPGJveCBjbGFzcz1cIm5vdGlmaWNhdGlvbi1oZWFkZXJcIiBzcGFjaW5nPXs2fT5cbiAgICAgICAgICAgICAgICAgICAgeygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWNvbiA9IGdldE5vdGlmaWNhdGlvbkljb24obik7XG4gICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChpY29uLnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJnaWNvblwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGltYWdlIGdpY29uPXtpY29uLnZhbHVlfSBwaXhlbFNpemU9ezE2fSBjbGFzcz1cImFwcC1pY29uXCIgLz47XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiZmlsZVwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGltYWdlIGZpbGU9e2ljb24udmFsdWV9IHBpeGVsU2l6ZT17MTZ9IGNsYXNzPVwiYXBwLWljb25cIiAvPjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8aW1hZ2UgaWNvbk5hbWU9e2ljb24udmFsdWV9IHBpeGVsU2l6ZT17MTZ9IGNsYXNzPVwiYXBwLWljb25cIiAvPjtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pKCl9XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImFwcC1uYW1lXCIgbGFiZWw9e2dldE5vdGlmaWNhdGlvbkFwcE5hbWUobil9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjbG9zZS1idG5cIlxuICAgICAgICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH0gXG4gICAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIltOb3RpZmljYXRpb25SYWNrXSBDbG9zZSBidXR0b24gY2xpY2tlZCBmb3I6XCIsIG4/LnN1bW1hcnkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzbWlzc05vdGlmaWNhdGlvbihuKTtcbiAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGltYWdlIGljb25OYW1lPVwid2luZG93LWNsb3NlLXN5bWJvbGljXCIgcGl4ZWxTaXplPXsxMn0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgIDxib3ggY2xhc3M9XCJub3RpZmljYXRpb24tYm9keVwiIHNwYWNpbmc9ezR9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJzdW1tYXJ5XCIgeGFsaWduPXswLjB9IGVsbGlwc2l6ZT17M30gbGFiZWw9e24/LnN1bW1hcnkgfHwgXCJcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiYm9keVwiIHhhbGlnbj17MC4wfSBlbGxpcHNpemU9ezN9IGxhYmVsPXtuPy5ib2R5IHx8IFwiXCJ9IC8+XG4gICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH19XG4gICAgICAgIDwvRm9yPlxuICAgICAgPC9ib3g+XG4gICAgPC93aW5kb3c+XG4gICk7XG59IiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IHsgQXN0YWwsIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgRm9yLCBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgbm90aWZpY2F0aW9ucywgZGlzbWlzc05vdGlmaWNhdGlvbiwgY2VudGVyVmlzaWJsZSB9IGZyb20gXCIuLi9zZXJ2aWNlXCI7XG5pbXBvcnQgeyBnZXROb3RpZmljYXRpb25JY29uLCBnZXROb3RpZmljYXRpb25BcHBOYW1lLCBmb3JtYXRSZWxhdGl2ZVRpbWUgfSBmcm9tIFwiLi4vdXRpbHNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIE5vdGlmaWNhdGlvbkNlbnRlcldpbmRvdygpIHtcbiAgcmV0dXJuIChcbiAgICA8d2luZG93XG4gICAgICBuYW1lPVwibm90aWZpY2F0aW9uLWNlbnRlci13aW5kb3dcIlxuICAgICAgY2xhc3M9XCJub3RpZmljYXRpb24tY2VudGVyXCJcbiAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICBhbmNob3I9e0FzdGFsLldpbmRvd0FuY2hvci5UT1AgfCBBc3RhbC5XaW5kb3dBbmNob3IuUklHSFQgfCBBc3RhbC5XaW5kb3dBbmNob3IuQk9UVE9NfVxuICAgICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5Lk5PUk1BTH1cbiAgICAgIHZpc2libGU9e2NlbnRlclZpc2libGV9XG4gICAgPlxuICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSBzcGFjaW5nPXswfSB3aWR0aFJlcXVlc3Q9ezUwMH0gdmV4cGFuZD17dHJ1ZX0+XG4gICAgICAgIDxib3ggY2xhc3M9XCJub3RpZmljYXRpb25zLWhlYWRlclwiIHNwYWNpbmc9ezh9PlxuICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIm5vdGlmaWNhdGlvbi10aXRsZVwiIGxhYmVsPVwiTm90aWZpY2F0aW9uc1wiIC8+XG4gICAgICAgICAgPGxhYmVsIGNsYXNzPVwibm90aWZpY2F0aW9uLWNvdW50XCIgbGFiZWw9e25vdGlmaWNhdGlvbnMoKGxpc3Q6IGFueVtdKSA9PiBgJHtsaXN0Lmxlbmd0aH1gKX0gLz5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxzY3JvbGxlZHdpbmRvdyBjbGFzcz1cIm5vdGlmaWNhdGlvbi1saXN0LXNjcm9sbFwiIHZleHBhbmQ9e3RydWV9IGhleHBhbmQ9e3RydWV9PlxuICAgICAgICAgIDxib3ggY2xhc3M9XCJub3RpZmljYXRpb24tbGlzdFwiIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IHNwYWNpbmc9ezZ9PlxuICAgICAgICAgICAgPEZvciBlYWNoPXtub3RpZmljYXRpb25zIGFzIGFueX0+XG4gICAgICAgICAgICAgIHsobjogYW55KSA9PiAoXG4gICAgICAgICAgICAgICAgPGJveCBjbGFzcz1cIm5vdGlmaWNhdGlvbiBjbGlja2FibGVcIj5cbiAgICAgICAgICAgICAgICAgIDxib3ggY2xhc3M9XCJub3RpZmljYXRpb24tY29udGFpbmVyXCIgc3BhY2luZz17OH0+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggY2xhc3M9XCJub3RpZmljYXRpb24taGVhZGVyXCIgc3BhY2luZz17Nn0+XG4gICAgICAgICAgICAgICAgICAgICAgeygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpY29uID0gZ2V0Tm90aWZpY2F0aW9uSWNvbihuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoaWNvbi50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJnaWNvblwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8aW1hZ2UgZ2ljb249e2ljb24udmFsdWV9IHBpeGVsU2l6ZT17MTZ9IGNsYXNzPVwiYXBwLWljb25cIiAvPjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImZpbGVcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGltYWdlIGZpbGU9e2ljb24udmFsdWV9IHBpeGVsU2l6ZT17MTZ9IGNsYXNzPVwiYXBwLWljb25cIiAvPjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGltYWdlIGljb25OYW1lPXtpY29uLnZhbHVlfSBwaXhlbFNpemU9ezE2fSBjbGFzcz1cImFwcC1pY29uXCIgLz47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSkoKX1cbiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJhcHAtbmFtZVwiIGxhYmVsPXtnZXROb3RpZmljYXRpb25BcHBOYW1lKG4pfSAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cInRpbWVzdGFtcFwiIHhhbGlnbj17MS4wfSBsYWJlbD17Zm9ybWF0UmVsYXRpdmVUaW1lKG4/LnRpbWUpfSAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gaGFsaWduPXtHdGsuQWxpZ24uRU5EfSBvbkNsaWNrZWQ9eygpID0+IGRpc21pc3NOb3RpZmljYXRpb24obil9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltYWdlIGljb25OYW1lPVwid2luZG93LWNsb3NlLXN5bWJvbGljXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggY2xhc3M9XCJub3RpZmljYXRpb24tYm9keVwiIHNwYWNpbmc9ezh9PlxuICAgICAgICAgICAgICAgICAgICAgIDxib3ggY2xhc3M9XCJ0ZXh0LWNvbnRlbnRcIiBzcGFjaW5nPXs0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cInN1bW1hcnlcIiB4YWxpZ249ezAuMH0gZWxsaXBzaXplPXszfSBsYWJlbD17bj8uc3VtbWFyeSB8fCBcIlwifSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiYm9keVwiIHhhbGlnbj17MC4wfSBlbGxpcHNpemU9ezN9IGxhYmVsPXtuPy5ib2R5IHx8IFwiXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3Njcm9sbGVkd2luZG93PlxuICAgICAgPC9ib3g+XG4gICAgPC93aW5kb3c+XG4gICk7XG59XG5cbiIsICJpbXBvcnQgeyBGb3IsIFdpdGggfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IG5vdGlmaWNhdGlvbnMsIHRvZ2dsZU5vdGlmaWNhdGlvbkNlbnRlciB9IGZyb20gXCIuLi9zZXJ2aWNlXCI7XG5pbXBvcnQgeyBnZXROb3RpZmljYXRpb25JY29uLCBnZXROb3RpZmljYXRpb25BcHBOYW1lIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBOb3RpZmljYXRpb25CdXR0b24oeyBjbGFzczogY2xzID0gXCJcIiB9OiB7IGNsYXNzPzogc3RyaW5nIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8Ym94IGNsYXNzPXtgJHtjbHN9YH0+XG4gICAgICA8YnV0dG9uIGNsYXNzPXtgTm90aWZpY2F0aW9uQnV0dG9uYH0gb25DbGlja2VkPXt0b2dnbGVOb3RpZmljYXRpb25DZW50ZXJ9PlxuICAgICAgICA8Ym94IHNwYWNpbmc9ezR9IGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0gdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfT5cbiAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgIGNsYXNzPVwiaWNvblwiXG4gICAgICAgICAgICBpY29uTmFtZT1cIm5vdGlmaWNhdGlvblwiXG4gICAgICAgICAgICBwaXhlbFNpemU9ezEyfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPFdpdGggdmFsdWU9e25vdGlmaWNhdGlvbnMgYXMgYW55fT5cbiAgICAgICAgICAgIHsobGlzdDogYW55W10gPSBbXSkgPT5cbiAgICAgICAgICAgICAgbGlzdC5sZW5ndGggPiAwID8gKFxuICAgICAgICAgICAgICAgIDxib3ggY2xhc3M9XCJiYWRnZVwiPlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtgJHtsaXN0Lmxlbmd0aH1gfSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICApIDogbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgPC9ib3g+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2JveD5cbiAgKTtcbn1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIjtcbmltcG9ydCB7IEFzdGFsLCBHdGssIEdkayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuaW1wb3J0IHsgV29ya3NwYWNlcyB9IGZyb20gXCIuL3dvcmtzcGFjZXNcIjtcbmltcG9ydCB7IFN5c3RlbVRyYXkgfSBmcm9tIFwiLi9zeXN0ZW10cmF5XCI7XG5pbXBvcnQgeyBXaW5kb3dUaXRsZSB9IGZyb20gXCIuL3dpbmRvd3RpdGxlXCI7XG5pbXBvcnQgeyBDYXZhVmlzdWFsaXplciB9IGZyb20gXCIuL2NhdmFcIjtcbmltcG9ydCB7IFN5c3RlbVRlbXAgfSBmcm9tIFwiLi9zeXN0ZW10ZW1wXCI7XG5pbXBvcnQgeyBXZWF0aGVyIH0gZnJvbSBcIi4vd2VhdGhlclwiO1xuaW1wb3J0IHsgVGltZURpc3BsYXkgfSBmcm9tIFwiLi90aW1lZGlzcGxheVwiO1xuaW1wb3J0IHsgQmx1ZXRvb3RoQnV0dG9uIH0gZnJvbSBcIi4vYmx1ZXRvb3RoXCI7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25CdXR0b24gfSBmcm9tIFwiLi9ub3RpZmljYXRpb25zXCI7XG4vLyBNZWRpYVBhbmVsIHdpbmRvdyBpcyBpbnN0YW50aWF0ZWQgZ2xvYmFsbHkgaW4gYXBwLnRzIHZpYSBNZWRpYVBvcHVwXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJhcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICBjb25zdCB7IFRPUCwgTEVGVCwgUklHSFQsIEJPVFRPTSB9ID0gQXN0YWwuV2luZG93QW5jaG9yO1xuXG4gIHJldHVybiAoXG4gICAgPHdpbmRvd1xuICAgICAgdmlzaWJsZVxuICAgICAgbmFtZT1cImJhclwiXG4gICAgICBjbGFzcz1cImJhclwiXG4gICAgICBnZGttb25pdG9yPXtnZGttb25pdG9yfVxuICAgICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRX1cbiAgICAgIGFuY2hvcj17Qk9UVE9NIHwgTEVGVCB8IFJJR0hUfVxuICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICA+XG4gICAgICA8Y2VudGVyYm94IGNzc05hbWU9XCJjZW50ZXJib3hcIj5cbiAgICAgICAgPGJveCAkdHlwZT1cInN0YXJ0XCIgc3BhY2luZz17M30+XG4gICAgICAgICAgPFdvcmtzcGFjZXMgY2xhc3M9XCJiYXItc2VjdGlvblwiIC8+XG4gICAgICAgICAgPFN5c3RlbVRyYXkgY2xhc3M9XCJiYXItc2VjdGlvblwiIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgICA8Ym94ICR0eXBlPVwiY2VudGVyXCIgc3BhY2luZz17Nn0+XG4gICAgICAgICAgPFdpbmRvd1RpdGxlIGNsYXNzPVwiYmFyLXNlY3Rpb25cIiAvPlxuICAgICAgICA8L2JveD5cbiAgICAgICAgPGJveCAkdHlwZT1cImVuZFwiIHNwYWNpbmc9ezN9IGhhbGlnbj17R3RrLkFsaWduLkVORH0+XG4gICAgICAgICAgPE5vdGlmaWNhdGlvbkJ1dHRvbiBjbGFzcz1cImJhci1zZWN0aW9uXCIgLz5cbiAgICAgICAgICA8Q2F2YVZpc3VhbGl6ZXIgY2xhc3M9XCJiYXItc2VjdGlvblwiIC8+XG4gICAgICAgICAgPFdlYXRoZXIgY2xhc3M9XCJiYXItc2VjdGlvblwiIC8+XG4gICAgICAgICAgPFN5c3RlbVRlbXAgY2xhc3M9XCJiYXItc2VjdGlvblwiIC8+XG4gICAgICAgICAgPFRpbWVEaXNwbGF5IGNsYXNzPVwiYmFyLXNlY3Rpb25cIiAvPlxuICAgICAgICAgIDxCbHVldG9vdGhCdXR0b24gY2xhc3M9XCJiYXItc2VjdGlvblwiIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgPC9jZW50ZXJib3g+XG4gICAgPC93aW5kb3c+XG4gICk7XG59XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBXaXRoLCBjcmVhdGVCaW5kaW5nIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IE1wcmlzIGZyb20gXCJnaTovL0FzdGFsTXByaXNcIjtcbmltcG9ydCBIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCI7XG5pbXBvcnQgeyBwbGF5ZXJzIH0gZnJvbSBcIi4uL3NlcnZpY2VcIjtcblxuLy8gTWluaW1hbCBub3ctcGxheWluZyBwYW5lbCB1c2luZyBBc3RhbCBNUFJJU1xuZXhwb3J0IGZ1bmN0aW9uIE1lZGlhUGFuZWwoeyBjbGFzczogY2xzID0gXCJcIiB9OiB7IGNsYXNzPzogc3RyaW5nIH0gPSB7fSkge1xuICByZXR1cm4gKFxuICAgIDxXaXRoIHZhbHVlPXtwbGF5ZXJzfT5cbiAgICAgIHsobGlzdDogTXByaXMuUGxheWVyW10gfCB1bmRlZmluZWQpID0+IHtcbiAgICAgICAgY29uc3QgcGxheWVyID1cbiAgICAgICAgICAobGlzdCB8fCBbXSkuZmluZChcbiAgICAgICAgICAgIChwKSA9PiBwLnBsYXliYWNrU3RhdHVzID09PSBNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HXG4gICAgICAgICAgKSB8fCBsaXN0Py5bMF07XG4gICAgICAgIGlmICghcGxheWVyKSByZXR1cm4gPGJveCBjbGFzcz17YG1lZGlhICR7Y2xzfWB9IHZpc2libGU9e2ZhbHNlfSAvPjtcblxuICAgICAgICBjb25zdCBzdGF0dXMgPSBjcmVhdGVCaW5kaW5nKHBsYXllciwgXCJwbGF5YmFja1N0YXR1c1wiKTtcbiAgICAgICAgY29uc3QgY2FuUHJldiA9IGNyZWF0ZUJpbmRpbmcocGxheWVyLCBcImNhbkdvUHJldmlvdXNcIik7XG4gICAgICAgIGNvbnN0IGNhbk5leHQgPSBjcmVhdGVCaW5kaW5nKHBsYXllciwgXCJjYW5Hb05leHRcIik7XG4gICAgICAgIGNvbnN0IGNhbkNvbnRyb2wgPSBjcmVhdGVCaW5kaW5nKHBsYXllciwgXCJjYW5Db250cm9sXCIpO1xuICAgICAgICBjb25zdCB0aXRsZSA9IGNyZWF0ZUJpbmRpbmcocGxheWVyLCBcInRpdGxlXCIpO1xuICAgICAgICBjb25zdCBhcnRpc3QgPSBjcmVhdGVCaW5kaW5nKHBsYXllciwgXCJhcnRpc3RcIik7XG4gICAgICAgIGNvbnN0IGFsYnVtID0gY3JlYXRlQmluZGluZyhwbGF5ZXIsIFwiYWxidW1cIik7XG4gICAgICAgIGNvbnN0IGNvdmVyID0gY3JlYXRlQmluZGluZyhwbGF5ZXIsIFwiY292ZXJBcnRcIik7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IGNyZWF0ZUJpbmRpbmcocGxheWVyLCBcImxlbmd0aFwiKTtcbiAgICAgICAgY29uc3QgcG9zaXRpb24gPSBjcmVhdGVCaW5kaW5nKHBsYXllciwgXCJwb3NpdGlvblwiKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxib3ggY2xhc3M9e2BtZWRpYS1wYW5lbCAke2Nsc31gfSBzcGFjaW5nPXs4fSBtYXJnaW5FbmQ9ezh9IHdpZHRoUmVxdWVzdD17MzAwfT5cbiAgICAgICAgICAgIDxXaXRoIHZhbHVlPXtjb3Zlcn0+XG4gICAgICAgICAgICAgIHsoYz86IHN0cmluZykgPT4gKFxuICAgICAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgd2lkdGhSZXF1ZXN0PXs2NH1cbiAgICAgICAgICAgICAgICAgIGhlaWdodFJlcXVlc3Q9ezY0fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHtjID8gKFxuICAgICAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICBmaWxlPXtjLnN0YXJ0c1dpdGgoXCJmaWxlOi8vXCIpID8gYy5zbGljZSg3KSA6IGN9XG4gICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uRklMTH0gICAgLy8gRmlsbCB0aGUgYm94IHdpZHRoXG4gICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uRklMTH0gICAgLy8gRmlsbCB0aGUgYm94IGhlaWdodFxuICAgICAgICAgICAgICAgICAgICAgIGhleHBhbmQ9e3RydWV9ICAgICAgICAgICAgIC8vIEV4cGFuZCBob3Jpem9udGFsbHlcbiAgICAgICAgICAgICAgICAgICAgICB2ZXhwYW5kPXt0cnVlfSAgICAgICAgICAgICAvLyBFeHBhbmQgdmVydGljYWxseVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgPGltYWdlIGljb25OYW1lPXtwbGF5ZXIuZW50cnl9IHBpeGVsU2l6ZT17Mjh9IC8+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9XaXRoPlxuXG4gICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgIHNwYWNpbmc9ezZ9XG4gICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uRklMTH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICA8Ym94IHNwYWNpbmc9ezJ9IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzcz1cIm1lZGlhLXRpdGxlLWJ0blwiXG4gICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBoeXByID0gSHlwcmxhbmQuZ2V0X2RlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgaHlwci5kaXNwYXRjaChcImZvY3Vzd2luZG93XCIsIGBjbGFzczoke3BsYXllci5lbnRyeX1gKTtcbiAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJpbnQoXCJmb2N1cyBmYWlsZWRcIiwgU3RyaW5nKGUpKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cIm1lZGlhLXBhbmVsX190cmFjay10aXRsZVwiXG4gICAgICAgICAgICAgICAgICB4YWxpZ249ezAuMH1cbiAgICAgICAgICAgICAgICAgIGVsbGlwc2l6ZT17M31cbiAgICAgICAgICAgICAgICAgIG1heFdpZHRoQ2hhcnM9ezI4fVxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3RpdGxlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgIDxXaXRoIHZhbHVlPXthbGJ1bX0+XG4gICAgICAgICAgICAgIHsoYSkgPT4gKFxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJtZWRpYS1wYW5lbF9fdHJhY2stYXJ0aXN0XCJcbiAgICAgICAgICAgICAgICAgIHhhbGlnbj17MC4wfVxuICAgICAgICAgICAgICAgICAgZWxsaXBzaXplPXszfVxuICAgICAgICAgICAgICAgICAgbWF4V2lkdGhDaGFycz17Mjh9XG4gICAgICAgICAgICAgICAgICBsYWJlbD17YSB8fCBhcnRpc3R9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgIDxib3ggaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IGNsYXNzPVwibWVkaWEtcGFuZWxfX2NvbnRyb2xzXCIgdmlzaWJsZT17ZmFsc2V9PlxuICAgICAgICAgICAgICAgIDxidXR0b24gc2Vuc2l0aXZlPXtjYW5QcmV2fSBvbkNsaWNrZWQ9eygpID0+IHBsYXllci5wcmV2aW91cygpfT5cbiAgICAgICAgICAgICAgICAgIDxpbWFnZSBpY29uTmFtZT1cIm1lZGlhLXNraXAtYmFja3dhcmQtc3ltYm9saWNcIiAvPlxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIHNlbnNpdGl2ZT17Y2FuQ29udHJvbH1cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4gcGxheWVyLnBsYXlfcGF1c2UoKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8V2l0aCB2YWx1ZT17c3RhdHVzfT5cbiAgICAgICAgICAgICAgICAgICAgeyhzOiBNcHJpcy5QbGF5YmFja1N0YXR1cykgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbk5hbWU9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzID09PSBNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcIm1lZGlhLXBsYXliYWNrLXBhdXNlLXN5bWJvbGljXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwibWVkaWEtcGxheWJhY2stc3RhcnQtc3ltYm9saWNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBzZW5zaXRpdmU9e2Nhbk5leHR9IG9uQ2xpY2tlZD17KCkgPT4gcGxheWVyLm5leHQoKX0+XG4gICAgICAgICAgICAgICAgICA8aW1hZ2UgaWNvbk5hbWU9XCJtZWRpYS1za2lwLWZvcndhcmQtc3ltYm9saWNcIiAvPlxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgICAgfX1cbiAgICA8L1dpdGg+XG4gICk7XG59XG4iLCAiaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCI7XG5pbXBvcnQgeyBBc3RhbCwgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBtZWRpYVBhbmVsVmlzaWJsZSwgc2V0TWVkaWFQYW5lbFZpc2libGUgfSBmcm9tIFwiLi4vc2VydmljZVwiO1xuaW1wb3J0IHsgTWVkaWFQYW5lbCB9IGZyb20gXCIuL01lZGlhUGFuZWxcIjtcblxuLy8gVG9wLWxldmVsIHdpbmRvdyB0aGF0IGhvc3RzIHRoZSBtZWRpYSBwYW5lbCBjb250ZW50XG5leHBvcnQgZnVuY3Rpb24gTWVkaWFQb3B1cCgpIHtcbiAgcmV0dXJuIChcbiAgICA8d2luZG93XG4gICAgICBuYW1lPVwibWVkaWEtcGFuZWxcIlxuICAgICAgY2xhc3M9XCJtZWRpYS1wb3B1cFwiXG4gICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgICAgdmlzaWJsZT17bWVkaWFQYW5lbFZpc2libGV9XG4gICAgICBhbmNob3I9e0FzdGFsLldpbmRvd0FuY2hvci5CT1RUT00gfCBBc3RhbC5XaW5kb3dBbmNob3IuUklHSFR9XG4gICAgPlxuICAgICAgPHJldmVhbGVyXG4gICAgICAgIHRyYW5zaXRpb25UeXBlPXtHdGsuUmV2ZWFsZXJUcmFuc2l0aW9uVHlwZS5TTElERV9VUH1cbiAgICAgICAgcmV2ZWFsQ2hpbGQ9e21lZGlhUGFuZWxWaXNpYmxlfVxuICAgICAgPlxuICAgICAgICA8Ym94IGNsYXNzPVwibWVkaWEtcG9wdXBfX2NvbnRhaW5lclwiPlxuICAgICAgICAgIDxNZWRpYVBhbmVsIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgPC9yZXZlYWxlcj5cbiAgICA8L3dpbmRvdz5cbiAgKTtcbn1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IHN0eWxlIGZyb20gXCIuL3N0eWxlcy9tYWluLnNjc3NcIlxuaW1wb3J0IEJhciBmcm9tIFwiLi93aWRnZXQvQmFyXCJcbmltcG9ydCB7IE1lZGlhUG9wdXAgfSBmcm9tIFwiLi93aWRnZXQvbWVkaWFwbGF5ZXJcIiAgLy8gXHUyMTkwIGltcG9ydCB5b3VyIHBvcHVwIHdpbmRvd1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uUmFjayB9IGZyb20gXCIuL3dpZGdldC9ub3RpZmljYXRpb25zXCI7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25DZW50ZXJXaW5kb3cgfSBmcm9tIFwiLi93aWRnZXQvbm90aWZpY2F0aW9uc1wiO1xuXG5hcHAuc3RhcnQoe1xuICBjc3M6IHN0eWxlLFxuICBtYWluKCkge1xuICAgIGFwcC5nZXRfbW9uaXRvcnMoKS5tYXAoQmFyKVxuICAgIE1lZGlhUG9wdXAoKVxuICAgIE5vdGlmaWNhdGlvblJhY2soKVxuICAgIE5vdGlmaWNhdGlvbkNlbnRlcldpbmRvdygpXG4gIH0sXG59KVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLE9BQU8sVUFBVTtBQUNqQixPQUFPLFNBQVM7QUFDaEIsT0FBTyxXQUFXOzs7QUNJbEIsU0FBUyxTQUFTLEtBQWE7QUFDM0IsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQUVBLGVBQWUsU0FBWUEsTUFBOEJDLFFBQXVCO0FBQzVFLFNBQU9ELEtBQUksS0FBSyxDQUFDLE1BQU1DLE9BQU0sRUFBRSxPQUFPLENBQUMsRUFBRSxNQUFNLE1BQU0sTUFBTTtBQUMvRDtBQUVBLFNBQVMsTUFBd0IsT0FBVSxNQUFnQztBQUN2RSxTQUFPLGVBQWUsT0FBTyxNQUFNO0FBQUEsSUFDL0IsTUFBTTtBQUNGLGFBQU8sS0FBSyxPQUFPLFNBQVMsSUFBSSxDQUFDLEVBQUUsRUFBRTtBQUFBLElBQ3pDO0FBQUEsRUFDSixDQUFDO0FBQ0w7QUFFQSxNQUFNLFNBQVMsT0FBTyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUUsTUFBTSxZQUFZLE1BQU07QUFDaEUsUUFBTSxLQUFLLFdBQVcsTUFBTTtBQUM1QixRQUFNLFlBQVksV0FBVyxVQUFVO0FBQ3ZDLFFBQU0sWUFBWSxXQUFXLFlBQVk7QUFDN0MsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLG1CQUFtQixHQUFHLENBQUMsRUFBRSxPQUFPLE1BQU07QUFDeEQsUUFBTSxPQUFPLFdBQVcsU0FBUztBQUNyQyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8scUJBQXFCLEdBQUcsQ0FBQyxFQUFFLFNBQVMsV0FBQUMsWUFBVyxPQUFPLE1BQU07QUFDOUUsUUFBTSxRQUFRLFdBQVcsT0FBTztBQUNoQyxRQUFNQSxXQUFVLFdBQVcsVUFBVTtBQUNyQyxRQUFNQSxXQUFVLFdBQVcsU0FBUztBQUNwQyxRQUFNLE9BQU8sV0FBVyxPQUFPO0FBQ25DLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxvQkFBb0IsR0FBRyxDQUFDLEVBQUUsVUFBQUMsV0FBVSxTQUFTLFVBQVUsTUFBTTtBQUMvRSxRQUFNQSxVQUFTLFdBQVcsT0FBTztBQUNqQyxRQUFNQSxVQUFTLFdBQVcsVUFBVTtBQUNwQyxRQUFNQSxVQUFTLFdBQVcsWUFBWTtBQUN0QyxRQUFNQSxVQUFTLFdBQVcsU0FBUztBQUNuQyxRQUFNLFFBQVEsV0FBVyxnQkFBZ0I7QUFDekMsUUFBTSxRQUFRLFdBQVcsaUJBQWlCO0FBQzFDLFFBQU0sVUFBVSxXQUFXLFNBQVM7QUFDeEMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLGlCQUFpQixHQUFHLENBQUMsRUFBRSxPQUFBQyxRQUFPLE9BQU8sTUFBTTtBQUM3RCxRQUFNQSxPQUFNLFdBQVcsU0FBUztBQUNoQyxRQUFNLE9BQU8sV0FBVyx1QkFBdUI7QUFDL0MsUUFBTSxPQUFPLFdBQVcscUJBQXFCO0FBQzdDLFFBQU0sT0FBTyxXQUFXLHNCQUFzQjtBQUM5QyxRQUFNLE9BQU8sV0FBVyxvQkFBb0I7QUFDNUMsUUFBTSxPQUFPLFdBQVcsVUFBVTtBQUN0QyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8sbUJBQW1CLEdBQUcsQ0FBQyxFQUFFLEtBQUssTUFBTTtBQUN0RCxRQUFNLEtBQUssV0FBVyxlQUFlO0FBQ3JDLFFBQU0sS0FBSyxXQUFXLGNBQWM7QUFDeEMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLGtCQUFrQixHQUFHLENBQUMsRUFBRSxRQUFBQyxTQUFRLGFBQWEsTUFBTTtBQUNyRSxRQUFNQSxRQUFPLFdBQVcsZUFBZTtBQUN2QyxRQUFNLGFBQWEsV0FBVyxTQUFTO0FBQzNDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyx5QkFBeUIsR0FBRyxDQUFDLEVBQUUsY0FBYyxNQUFNO0FBQ3JFLFFBQU0sY0FBYyxXQUFXLFNBQVM7QUFDNUMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLGNBQWMsR0FBRyxDQUFDLEVBQUUsSUFBSSxPQUFPLE1BQU0sTUFBTTtBQUM3RCxRQUFNLEdBQUcsV0FBVyxXQUFXO0FBQy9CLFFBQU0sR0FBRyxXQUFXLFNBQVM7QUFDN0IsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNoQyxRQUFNLE1BQU0sV0FBVyxXQUFXO0FBQ2xDLFFBQU0sTUFBTSxXQUFXLGFBQWE7QUFDcEMsUUFBTSxNQUFNLFdBQVcsVUFBVTtBQUNqQyxRQUFNLE1BQU0sV0FBVyxTQUFTO0FBQ2hDLFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxNQUFNLFdBQVcsV0FBVztBQUNsQyxRQUFNLE1BQU0sV0FBVyxPQUFPO0FBQzlCLFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNwQyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1BQUFDLE1BQUssTUFBTTtBQUNuRCxRQUFNQSxNQUFLLFdBQVcsT0FBTztBQUNqQyxDQUFDOzs7QUMzRkQsU0FBUywyQkFBMkI7QUFDcEMsU0FBUyxNQUFNLG1CQUFtQjs7O0FDRjNCLElBQU0sUUFBTixNQUFNLE9BQU07QUFBQSxFQVVmLFlBQVksUUFBdUI7QUFObkMsb0JBQVcsb0JBQUksSUFBc0I7QUFFckMsU0FBUSxXQUFXLG9CQUFJLElBQWdCO0FBQ3ZDLFNBQVEsU0FBUyxvQkFBSSxJQUFnQjtBQUNyQyxTQUFRLFVBQVU7QUFHZCxTQUFLLFNBQVM7QUFBQSxFQUNsQjtBQUFBLEVBRUEsVUFBVSxVQUFzQjtBQUM1QixTQUFLLFVBQVUsSUFBSSxRQUFRO0FBQUEsRUFDL0I7QUFBQSxFQUVBLFFBQVEsVUFBc0I7QUFDMUIsUUFBSSxLQUFLLFVBQVUsQ0FBQyxLQUFLLE9BQU8sU0FBUztBQUNyQyxXQUFLLE9BQU8sUUFBUSxRQUFRO0FBQUEsSUFDaEMsT0FBTztBQUNILFdBQUssT0FBTyxJQUFJLFFBQVE7QUFBQSxJQUM1QjtBQUFBLEVBQ0o7QUFBQSxFQUVBLElBQU8sSUFBYTtBQUNoQixVQUFNLE9BQU8sT0FBTTtBQUNuQixXQUFNLFVBQVU7QUFFaEIsUUFBSTtBQUNBLGFBQU8sR0FBRztBQUFBLElBQ2QsVUFBRTtBQUNFLFdBQUssT0FBTyxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUM7QUFDaEMsV0FBSyxPQUFPLE1BQU07QUFDbEIsV0FBSyxVQUFVO0FBQ2YsYUFBTSxVQUFVO0FBQUEsSUFDcEI7QUFBQSxFQUNKO0FBQUEsRUFFQSxVQUFVO0FBQ04sU0FBSyxTQUFTLFFBQVEsQ0FBQyxPQUFPLEdBQUcsQ0FBQztBQUNsQyxTQUFLLFNBQVMsTUFBTTtBQUNwQixTQUFLLFNBQVMsTUFBTTtBQUNwQixXQUFPLEtBQUs7QUFBQSxFQUNoQjtBQUNKO0FBNkVPLFNBQVMsV0FBa0I7QUFDOUIsUUFBTSxRQUFRLE1BQU07QUFDcEIsTUFBSSxDQUFDLE9BQU87QUFDUixVQUFNLE1BQU0sMkNBQTJDO0FBQUEsRUFDM0Q7QUFFQSxTQUFPO0FBQ1g7QUFLTyxTQUFTLFVBQVUsU0FBcUI7QUFDM0MsTUFBSSxDQUFDLE1BQU0sU0FBUztBQUNoQixZQUFRLE1BQU0sTUFBTSxzREFBc0QsQ0FBQztBQUFBLEVBQy9FO0FBRUEsUUFBTSxTQUFTLFVBQVUsT0FBTztBQUNwQztBQXdDTyxTQUFTLFdBQWMsSUFBZ0M7QUFDMUQsUUFBTSxRQUFRLElBQUksTUFBTSxJQUFJO0FBQzVCLFNBQU8sTUFBTSxJQUFJLE1BQU0sR0FBRyxNQUFNLE1BQU0sUUFBUSxDQUFDLENBQUM7QUFDcEQ7OztBRHBMQSxPQUFPLFFBQVE7QUFDZixPQUFPLGFBQWE7QUF3Q2IsU0FBUyxNQUFNLEtBQWtCO0FBQ3BDLFNBQU8sSUFBSyxNQUFNLGdCQUFnQixJQUFJO0FBQUEsSUFHbEMsT0FBTztBQUNILGNBQVEsY0FBYyxFQUFFLFdBQVcsVUFBVSxHQUFHLElBQVc7QUFBQSxJQUMvRDtBQUFBLElBRUEsS0FBSyxNQUE0QjtBQUM3QixhQUFPLElBQUksUUFBUSxDQUFDLEtBQUssUUFBUTtBQUM3QixZQUFJO0FBQ0EsZ0JBQU0sS0FBSyxTQUFTO0FBQUEsMEJBQ2QsS0FBSyxTQUFTLEdBQUcsSUFBSSxPQUFPLFVBQVUsSUFBSSxHQUFHO0FBQUEsdUJBQ2hEO0FBQ0gsYUFBRyxFQUFFLEVBQUUsS0FBSyxHQUFHLEVBQUUsTUFBTSxHQUFHO0FBQUEsUUFDOUIsU0FBUyxPQUFPO0FBQ1osY0FBSSxLQUFLO0FBQUEsUUFDYjtBQUFBLE1BQ0osQ0FBQztBQUFBLElBQ0w7QUFBQSxJQUlBLGlCQUF1QjtBQUNuQixZQUFNLGVBQWU7QUFDckIsV0FBSyxjQUFjO0FBQUEsSUFDdkI7QUFBQSxJQUVBLGNBQWMsS0FBYSxNQUFrQztBQUN6RCxVQUFJLE9BQU8sS0FBSyxtQkFBbUIsWUFBWTtBQUMzQyxhQUFLLGVBQWUsS0FBSyxDQUFDLGFBQWE7QUFDbkMsYUFBRyxXQUFXLE1BQU0sT0FBTyxRQUFRLEdBQUcsQ0FBQyxHQUFHLFFBQVEsR0FBRyxrQkFBa0IsR0FBRyxDQUFDO0FBQUEsUUFDL0UsQ0FBQztBQUFBLE1BQ0wsT0FBTztBQUNILGNBQU0sY0FBYyxLQUFLLElBQUk7QUFBQSxNQUNqQztBQUFBLElBQ0o7QUFBQSxJQUVBLFVBQVUsT0FBZSxRQUFRLE9BQU87QUFDcEMsWUFBTSxVQUFVLE9BQU8sS0FBSztBQUFBLElBQ2hDO0FBQUEsSUFFQSxLQUFLLE1BQXFCO0FBQ3RCLFlBQU0sS0FBSztBQUNYLFdBQUssUUFBUSxDQUFDO0FBQUEsSUFDbEI7QUFBQSxJQUVBLE1BQU0sRUFBRSxnQkFBZ0IsS0FBSyxNQUFNLE1BQU0sUUFBQUMsU0FBUSxPQUFPLEdBQUcsSUFBSSxJQUFZLENBQUMsR0FBRztBQUMzRSxZQUFNLE1BQU07QUFFWixNQUFBQSxZQUFXLE1BQU07QUFDYixjQUFNLG1CQUFtQixJQUFJLFlBQVksbUJBQW1CO0FBQzVELGFBQUssQ0FBQztBQUFBLE1BQ1Y7QUFFQSxhQUFPLE9BQU8sTUFBTSxHQUFHO0FBQ3ZCLDBCQUFvQixJQUFJLFlBQVk7QUFFcEMsV0FBSyxpQkFBaUI7QUFDdEIsVUFBSSxRQUFRLFlBQVksTUFBTTtBQUMxQixtQkFBVyxDQUFDLFlBQVk7QUFDcEIsZUFBSyxjQUFjO0FBQ25CLGlCQUFPLEdBQUcsV0FBVztBQUFBLFFBQ3pCLENBQUM7QUFBQSxNQUNMLENBQUM7QUFFRCxVQUFJO0FBQ0EsWUFBSSxlQUFlO0FBQUEsTUFDdkIsUUFBUTtBQUNKLGVBQU9BLFFBQU8sQ0FBQyxRQUFRLEdBQUcsYUFBYSxJQUFJLGNBQWMsR0FBRyxHQUFJLEdBQUcsV0FBVztBQUFBLE1BQ2xGO0FBRUEsVUFBSSxJQUFLLE1BQUssVUFBVSxLQUFLLEtBQUs7QUFFbEMsVUFBSSxNQUFPLEtBQUksVUFBVSxLQUFLO0FBRTlCLGVBQVM7QUFDVCxVQUFJLEtBQU0sS0FBSSxLQUFLO0FBRW5CLFVBQUksU0FBUyxDQUFDLENBQUM7QUFBQSxJQUNuQjtBQUFBLEVBQ0osRUFBRztBQUNQOzs7QUYxSEEsSUFBSSxLQUFLO0FBSVQsS0FBSyxTQUFTLFlBQVk7QUFJMUIsTUFBTSxPQUFPLG9CQUFvQixFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsSUFBSSxNQUFNLElBQUksS0FBSyxDQUFDLEVBQUUsTUFBTSxNQUFNLE1BQU07QUFFNUYsSUFBTyxjQUFRLE1BQU0sTUFBTSxXQUFXOzs7QUlmdEM7OztBQ0FBLE9BQU9DLFlBQVc7QUFDbEIsT0FBT0MsVUFBUztBQUNoQixPQUFPLFNBQVM7OztBQ0ZoQixPQUFPQyxjQUFhOzs7QUNBcEIsT0FBT0MsY0FBYTtBQUNwQixPQUFPLFNBQVM7QUFDaEIsT0FBT0MsV0FBVTs7O0FDQVYsU0FBUyxTQUFTLEtBQWE7QUFDbEMsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQUVPLFNBQVNDLFVBQVMsS0FBYTtBQUNsQyxTQUFPLElBQ0YsUUFBUSxtQkFBbUIsT0FBTyxFQUNsQyxXQUFXLEtBQUssR0FBRyxFQUNuQixZQUFZO0FBQ3JCO0FBdURPLFNBQVMsSUFBSSxLQUFxQixNQUFjLE9BQVk7QUFDL0QsUUFBTSxNQUFNQyxVQUFTLElBQUk7QUFDekIsUUFBTSxTQUFTLE9BQU8sR0FBRztBQUN6QixRQUFNLFNBQVMsT0FBTyxHQUFHO0FBRXpCLE1BQUk7QUFFSixNQUFJLFVBQVUsT0FBTyxPQUFPLElBQUksTUFBTSxNQUFNLFlBQVk7QUFDcEQsY0FBVyxJQUFJLE1BQU0sRUFBb0I7QUFBQSxFQUM3QyxPQUFPO0FBQ0gsY0FBVSxJQUFJLElBQXdCO0FBQUEsRUFDMUM7QUFFQSxNQUFJLFlBQVksT0FBTztBQUNuQixRQUFJLFVBQVUsT0FBTyxPQUFPLElBQUksTUFBTSxNQUFNLFlBQVk7QUFDcEQ7QUFBQyxNQUFDLElBQUksTUFBTSxFQUF1QixLQUFLO0FBQUEsSUFDNUMsT0FBTztBQUNILGFBQU8sT0FBTyxLQUFLLEVBQUUsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO0FBQUEsSUFDeEM7QUFBQSxFQUNKO0FBQ0o7OztBRDdFTyxJQUFNLFdBQU4sTUFBTSxrQkFBOEIsU0FBUztBQUFBLEVBQ2hEO0FBQUEsU0FBTyxTQUFTQyxTQUFRO0FBQUE7QUFBQSxFQUt4QjtBQUFBLEVBQ0E7QUFBQSxFQUVBLFlBQVksS0FBYyxXQUErQjtBQUNyRCxVQUFNLGtFQUFrRTtBQUN4RSxTQUFLLGFBQWEsY0FBYyxNQUFNLE1BQU07QUFDNUMsU0FBSyxPQUFPO0FBQUEsRUFDaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFPQSxVQUFVLFVBQThDO0FBRXBELFdBQU8sS0FBSyxXQUFXLFFBQVE7QUFBQSxFQUNuQztBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS0EsTUFBUztBQUNMLGNBQVMsWUFBWSxJQUFJLElBQUk7QUFDN0IsV0FBTyxLQUFLLEtBQUs7QUFBQSxFQUNyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNQSxHQUFVLFdBQXlDO0FBQy9DLFdBQU8sSUFBSSxVQUFTLE1BQU0sVUFBVSxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssVUFBVTtBQUFBLEVBQ3JFO0FBQUEsRUFFVSxNQUFhLFdBQXlDO0FBQzVELFdBQU8sS0FBSyxHQUFHLFNBQVM7QUFBQSxFQUM1QjtBQUFBLEVBRUEsV0FBbUI7QUFDZixXQUFPLFlBQVksS0FBSyxJQUFJLENBQUM7QUFBQSxFQUNqQztBQUFBLEVBRUEsQ0FBQyxPQUFPLFdBQVcsSUFBSTtBQUNuQixZQUFRLEtBQUsscURBQXFEO0FBQ2xFLFdBQU8sS0FBSyxTQUFTO0FBQUEsRUFDekI7QUFDSjtBQXVCTyxTQUFTLFlBQWUsTUFBbUI7QUFDOUMsTUFBSSxlQUFlO0FBQ25CLFFBQU0sY0FBYyxvQkFBSSxJQUF1QjtBQUUvQyxRQUFNLFlBQStCLENBQUMsYUFBYTtBQUMvQyxnQkFBWSxJQUFJLFFBQVE7QUFDeEIsV0FBTyxNQUFNLFlBQVksT0FBTyxRQUFRO0FBQUEsRUFDNUM7QUFFQSxRQUFNQyxPQUFNLENBQUMsYUFBc0I7QUFDL0IsVUFBTSxRQUFXLE9BQU8sYUFBYSxhQUFhLFNBQVMsWUFBWSxJQUFJO0FBQzNFLFFBQUksaUJBQWlCLE9BQU87QUFDeEIscUJBQWU7QUFDZixrQkFBWSxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUM7QUFBQSxJQUNwQztBQUFBLEVBQ0o7QUFFQSxTQUFPLENBQUMsSUFBSSxTQUFTLE1BQU0sY0FBYyxTQUFTLEdBQUdBLElBQWdCO0FBQ3pFO0FBZ0dPLFNBQVMsY0FBaUIsUUFBdUMsS0FBMEI7QUFDOUYsUUFBTSxPQUFPLFNBQVMsR0FBRztBQUV6QixRQUFNLFlBQStCLENBQUMsYUFBYTtBQUMvQyxVQUFNLE1BQU0sa0JBQWtCLElBQUksV0FBVyxZQUFZO0FBQ3pELFVBQU0sS0FBSyxPQUFPLFFBQVEsR0FBRyxHQUFHLEtBQUssSUFBSSxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBQzdELFdBQU8sTUFBTSxPQUFPLFdBQVcsRUFBRTtBQUFBLEVBQ3JDO0FBRUEsUUFBTSxNQUFNLE1BQVM7QUFDakIsUUFBSSxrQkFBa0IsSUFBSSxVQUFVO0FBQ2hDLGFBQU8sT0FBTyxVQUFVLEdBQUcsRUFBRSxnQkFBZ0I7QUFBQSxJQUNqRCxPQUFPO0FBQ0gsWUFBTSxTQUFTLE9BQU8sS0FBSyxXQUFXLEtBQUssR0FBRyxDQUFDO0FBRS9DLFVBQUksVUFBVSxVQUFVLE9BQU8sT0FBTyxNQUFNLE1BQU0sWUFBWTtBQUMxRCxlQUFRLE9BQU8sTUFBTSxFQUFvQjtBQUFBLE1BQzdDO0FBRUEsVUFBSSxRQUFRLE9BQVEsUUFBTyxPQUFPLElBQUk7QUFDdEMsVUFBSSxPQUFPLE9BQVEsUUFBTyxPQUFPLEdBQTBCO0FBRTNELFlBQU0sTUFBTSx1QkFBdUIsR0FBRyxFQUFFO0FBQUEsSUFDNUM7QUFBQSxFQUNKO0FBRUEsU0FBTyxJQUFJLFNBQVMsS0FBSyxTQUFTO0FBQ3RDOzs7QUUzTk8sU0FBUyxTQUFTLE1BQXVCO0FBQzVDLFNBQU8sT0FBTyxPQUFPLEtBQUssSUFBSTtBQUNsQztBQVdBLFNBQVMsY0FBYztBQUNuQixRQUFNLE1BQU0sY0FBYztBQUM5QjtBQUVPLElBQU0sTUFBYztBQUFBLEVBQ3ZCLG1CQUFtQixDQUFDO0FBQUEsRUFDcEIsVUFBVTtBQUFBLEVBQ1YsUUFBUTtBQUFBLEVBQ1IsVUFBVTtBQUFBLEVBQ1YsV0FBVyxNQUFNO0FBQUEsRUFDakIsZ0JBQWdCLE1BQU07QUFDMUI7OztBSGZPLElBQU0sVUFBVSxPQUFPLGtCQUFrQjtBQUt6QyxTQUFTLFFBQVEsUUFBd0I7QUFDNUMsU0FBTyxXQUFXLFNBQVUsT0FBTyxPQUFPLElBQWU7QUFDN0Q7QUF1RUEsU0FBUyxjQUFjLE1BQXVCO0FBQzFDLFNBQU8sS0FBSyxxQkFBcUJDLFNBQVE7QUFDN0M7QUFFQSxTQUFTLGVBQWUsTUFBdUI7QUFDM0MsU0FBTyxPQUFPLFNBQVMsY0FBYyxDQUFDLGNBQWMsSUFBSTtBQUM1RDtBQUdPLFNBQVMsUUFBUSxRQUFnQixNQUFjO0FBQ2xELE1BQUksV0FBVyxVQUFVLE9BQU8sT0FBTyxNQUFNLElBQUk7QUFDN0MsWUFBUSxLQUFLLHVCQUF1QixPQUFPLE9BQU8sQ0FBQyxPQUFPLElBQUksT0FBTyxNQUFNLEVBQUU7QUFBQSxFQUNqRjtBQUVBLFNBQU8sT0FBTyxRQUFRLEVBQUUsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQzdDO0FBWU8sU0FBUyxJQUNaLE1BQ0EsU0FFQSxLQUNDO0FBQ0QsUUFBTSxFQUFFLEdBQUcsT0FBTyxjQUFjLFdBQVcsQ0FBQyxHQUFHLEdBQUcsS0FBSyxJQUFJO0FBQzNELFFBQU0sUUFBUTtBQUVkLE1BQUksSUFBSyxRQUFPLE9BQU8sT0FBTyxFQUFFLElBQUksQ0FBQztBQUNyQyxNQUFJLFVBQVUsS0FBSztBQUVuQixhQUFXLENBQUNDLE1BQUssS0FBSyxLQUFLLE9BQU8sUUFBUSxLQUFLLEdBQUc7QUFDOUMsUUFBSSxVQUFVLE9BQVcsUUFBTyxNQUFNQSxJQUFHO0FBQUEsRUFDN0M7QUFFQSxNQUFJLE9BQU8sU0FBUyxVQUFVO0FBQzFCLFFBQUksUUFBUSxJQUFJLG1CQUFtQjtBQUMvQixhQUFPLElBQUksa0JBQWtCLElBQUk7QUFBQSxJQUNyQyxPQUFPO0FBQ0gsWUFBTSxNQUFNLDhCQUE4QixJQUFJLEdBQUc7QUFBQSxJQUNyRDtBQUFBLEVBQ0o7QUFFQSxNQUFJLGVBQWUsSUFBSSxHQUFHO0FBQ3RCLFVBQU1DLFVBQVMsS0FBSyxFQUFFLFVBQVUsR0FBRyxNQUFNLENBQUM7QUFDMUMsUUFBSSxNQUFPLFNBQVFBLFNBQVEsS0FBSztBQUNoQyxRQUFJQSxPQUFNO0FBQ1YsV0FBT0E7QUFBQSxFQUNYO0FBR0EsUUFBTSxFQUFFLEtBQUssT0FBTyxVQUFVLElBQUk7QUFDbEMsU0FBTyxNQUFNO0FBQ2IsU0FBTyxNQUFNO0FBRWIsUUFBTSxVQUE2RCxDQUFDO0FBQ3BFLFFBQU0sV0FBK0MsQ0FBQztBQUd0RCxhQUFXLENBQUNELE1BQUssS0FBSyxLQUFLLE9BQU8sUUFBUSxLQUFLLEdBQUc7QUFDOUMsUUFBSUEsS0FBSSxXQUFXLElBQUksR0FBRztBQUN0QixjQUFRLEtBQUssQ0FBQ0EsS0FBSSxNQUFNLENBQUMsR0FBRyxLQUFzQixDQUFDO0FBQ25ELGFBQU8sTUFBTUEsSUFBRztBQUFBLElBQ3BCO0FBQ0EsUUFBSSxpQkFBaUIsVUFBVTtBQUMzQixlQUFTLEtBQUssQ0FBQ0EsTUFBSyxLQUFLLENBQUM7QUFDMUIsWUFBTUEsSUFBRyxJQUFJLE1BQU0sSUFBSTtBQUFBLElBQzNCO0FBQUEsRUFDSjtBQUdBLFFBQU0sU0FBUyxlQUFlLGFBQWEsS0FBSyxJQUFJLElBQUssS0FBZSxLQUFLO0FBQzdFLE1BQUksYUFBYyxRQUFPLE9BQU8sUUFBUSxLQUFLO0FBQzdDLE1BQUksTUFBTyxTQUFRLFFBQVEsS0FBSztBQUVoQyxNQUFJLElBQUssS0FBSSxPQUFPLFFBQVEsR0FBRztBQUMvQixNQUFJLFVBQVcsS0FBSSxTQUFTLFFBQVEsU0FBUztBQUc3QyxhQUFXLFNBQVMsTUFBTSxRQUFRLFFBQVEsSUFBSSxXQUFXLENBQUMsUUFBUSxHQUFHO0FBQ2pFLFFBQUksVUFBVSxNQUFNO0FBQ2hCLGNBQVEsS0FBSyxtREFBbUQ7QUFDaEU7QUFBQSxJQUNKO0FBRUEsUUFBSSxNQUFNLFFBQVEsS0FBSyxHQUFHO0FBQ3RCLGlCQUFXLE1BQU0sT0FBTztBQUNwQixZQUFJLFNBQVMsUUFBUSxJQUFJLEVBQUU7QUFBQSxNQUMvQjtBQUFBLElBQ0osV0FBVyxPQUFPO0FBQ2QsVUFBSSxTQUFTLFFBQVEsT0FBTyxFQUFFO0FBQUEsSUFDbEM7QUFBQSxFQUNKO0FBR0EsUUFBTSxrQkFBa0IsUUFBUSxJQUFJLENBQUMsQ0FBQyxLQUFLLE9BQU8sTUFBTTtBQUNwRCxVQUFNLE9BQU8sU0FBUyxHQUFHO0FBQ3pCLFVBQU0sS0FBSyxLQUFLLFdBQVcsU0FBUyxJQUM5QixPQUFPLFFBQVEsV0FBVyxLQUFLLE1BQU0sQ0FBQyxDQUFDLElBQUksT0FBTyxJQUNsRCxPQUFPLFFBQVEsU0FBUyxHQUFHLEdBQUcsT0FBTztBQUUzQyxXQUFPLE1BQU0sT0FBTyxXQUFXLEVBQUU7QUFBQSxFQUNyQyxDQUFDO0FBR0QsUUFBTSxrQkFBa0IsU0FBUyxJQUFJLENBQUMsQ0FBQyxNQUFNLE9BQU8sTUFBTTtBQUN0RCxVQUFNLFVBQVUsUUFBUSxVQUFVLE1BQU07QUFDcEMsVUFBSSxRQUFRLE1BQU0sUUFBUSxJQUFJLENBQUM7QUFBQSxJQUNuQyxDQUFDO0FBQ0QsUUFBSSxRQUFRLE1BQU0sUUFBUSxJQUFJLENBQUM7QUFDL0IsV0FBTztBQUFBLEVBQ1gsQ0FBQztBQUdELE1BQUksZ0JBQWdCLFNBQVMsS0FBSyxnQkFBZ0IsU0FBUyxHQUFHO0FBQzFELGNBQVUsTUFBTTtBQUNaLHNCQUFnQixRQUFRLENBQUMsT0FBTyxHQUFHLENBQUM7QUFDcEMsc0JBQWdCLFFBQVEsQ0FBQyxPQUFPLEdBQUcsQ0FBQztBQUFBLElBQ3hDLENBQUM7QUFBQSxFQUNMO0FBRUEsTUFBSSxNQUFNO0FBQ1YsU0FBTztBQUNYO0FBRU8sSUFBTSxPQUFPOzs7QUl0T3BCLE9BQU9FLGNBQWE7OztBQ0twQixJQUFNLE1BQU0sT0FBTyxtREFBbUQ7QUFFL0QsSUFBTSwwQkFBZ0QsTUFBTSxJQUM5RCxLQUFLLENBQUNDLFNBQVFBLEtBQUksdUJBQXVCLEVBQ3pDLE1BQU0sTUFBTSxNQUFNLE1BQU07OztBRFQ3QjtBQUtPLElBQU0sV0FBTixNQUFNLG1CQUEwQixLQUFBQyxTQUFRLFFBQ25DLEtBQUFBLFNBQVEsU0FXUixLQUFBQSxTQUFRLFlBWm1CLElBQWU7QUFBQSxFQWdFbEQsWUFBWSxFQUFFLFdBQVcsQ0FBQyxFQUFFLElBQXlDLENBQUMsR0FBRztBQUNyRSxVQUFNO0FBeENWLFNBQVEsZ0JBQWdCLG9CQUFJLElBQVk7QUF5Q3BDLFNBQUssWUFBWSxNQUFNLFFBQVEsUUFBUSxJQUFJLFdBQVcsQ0FBQyxRQUFRO0FBQUEsRUFDbkU7QUFBQSxFQWxFQTtBQUFBLFNBQVEsTUFBbUI7QUFBQSxNQUN2QixXQUFXLENBQUM7QUFBQSxNQUVaLGVBQWU7QUFBQSxRQUNYLGFBQWEsQ0FBQ0EsU0FBUSxhQUFhQSxTQUFRLFNBQVM7QUFBQSxNQUN4RDtBQUFBLE1BQ0EsaUJBQWlCO0FBQUEsUUFDYixhQUFhLENBQUNBLFNBQVEsYUFBYUEsU0FBUSxTQUFTO0FBQUEsTUFDeEQ7QUFBQSxJQUNKO0FBQUE7QUFBQSxFQUVBO0FBQUEsU0FBUSxNQUFzQjtBQUFBLE1BQzFCLFVBQVVBLFNBQVEsVUFBVSxTQUFTLFlBQVksSUFBSSxJQUFJQSxTQUFRLFdBQVcsUUFBUTtBQUFBLElBQ3hGO0FBQUE7QUFBQSxFQUVBLE9BQU87QUFDSCxJQUFBQSxTQUFRLGNBQWMsSUFBSTtBQUMxQiw0QkFBd0IsSUFBSTtBQUFBLEVBQ2hDO0FBQUEsRUFFQSxPQUFPLElBQU8sV0FBcUIsQ0FBQyxHQUFHO0FBQ25DLFdBQU8sSUFBSSxVQUFTLEVBQUUsU0FBUyxDQUFDO0FBQUEsRUFDcEM7QUFBQSxFQUtBLElBQUksV0FBVztBQUNYLFdBQU8sQ0FBQyxHQUFHLEtBQUssU0FBUztBQUFBLEVBQzdCO0FBQUEsRUFFQSxTQUFTLE9BQVUsUUFBZ0IsSUFBVTtBQUN6QyxRQUFJLGlCQUFpQixXQUFVO0FBQzNCLFlBQU0sTUFBTSx5Q0FBeUM7QUFBQSxJQUN6RDtBQUVBLFFBQUksUUFBUSxHQUFHO0FBQ1gsV0FBSyxZQUFZO0FBQUEsUUFDYixHQUFHLEtBQUssVUFBVSxNQUFNLEdBQUcsS0FBSztBQUFBLFFBQ2hDO0FBQUEsUUFDQSxHQUFHLEtBQUssVUFBVSxNQUFNLEtBQUs7QUFBQSxNQUNqQztBQUFBLElBQ0osT0FBTztBQUNILFdBQUssVUFBVSxLQUFLLEtBQUs7QUFDekIsY0FBUSxLQUFLLFVBQVUsU0FBUztBQUFBLElBQ3BDO0FBRUEsU0FBSyxLQUFLLGVBQWUsT0FBTyxLQUFLO0FBQ3JDLFNBQUssT0FBTyxVQUFVO0FBQUEsRUFDMUI7QUFBQSxFQUVBLFNBQVMsT0FBbUI7QUFDeEIsV0FBTyxLQUFLLFVBQVUsVUFBVSxDQUFDLE9BQU8sT0FBTyxLQUFLLElBQUk7QUFBQSxFQUM1RDtBQUFBLEVBRUEsWUFBWSxPQUFnQjtBQUN4QixVQUFNLFFBQVEsS0FBSyxVQUFVLFVBQVUsQ0FBQyxNQUFNLE1BQU0sS0FBSztBQUN6RCxTQUFLLFVBQVUsT0FBTyxPQUFPLENBQUM7QUFFOUIsU0FBSyxLQUFLLGlCQUFpQixPQUFPLEtBQUs7QUFDdkMsU0FBSyxPQUFPLFVBQVU7QUFBQSxFQUMxQjtBQUFBLEVBT0EsUUFBUSxRQUFnQixVQUFxRDtBQUN6RSxVQUFNLEtBQUssTUFBTSxRQUFRLFFBQVEsUUFBUTtBQUN6QyxTQUFLLGNBQWMsSUFBSSxFQUFFO0FBQ3pCLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFQSxXQUFXLElBQWtCO0FBQ3pCLFVBQU0sV0FBVyxFQUFFO0FBQ25CLFNBQUssY0FBYyxPQUFPLEVBQUU7QUFBQSxFQUNoQztBQUFBLEVBRUEsVUFBVTtBQUNOLFNBQUssS0FBSyxTQUFTO0FBQ25CLGVBQVcsTUFBTSxLQUFLLGNBQWMsT0FBTyxHQUFHO0FBQzFDLFlBQU0sV0FBVyxFQUFFO0FBQUEsSUFDdkI7QUFBQSxFQUNKO0FBQ0o7OztBRXZETyxTQUFTLElBQXVDO0FBQUEsRUFDbkQ7QUFBQSxFQUNBLFVBQVU7QUFBQSxFQUNWO0FBQUEsRUFDQSxLQUFLLENBQUMsU0FBZTtBQUN6QixHQUEwQztBQUd0QyxRQUFNLGVBQWUsU0FBUztBQUM5QixRQUFNLE1BQU0sb0JBQUksSUFBeUI7QUFDekMsUUFBTSxXQUFXLElBQUksU0FBYTtBQUVsQyxXQUFTQyxRQUFPLEVBQUUsTUFBTSxPQUFPLE9BQU8sQ0FBQyxLQUFLLEdBQUcsTUFBTSxHQUFZO0FBQzdELFFBQUksT0FBTyxZQUFZLFlBQVk7QUFDL0IsY0FBUSxPQUFPLE1BQU0sTUFBTSxJQUFJLENBQUM7QUFBQSxJQUNwQyxXQUFXLFlBQVksTUFBTTtBQUN6QixVQUFJLGVBQWUsS0FBSztBQUFBLElBQzVCO0FBQ0EsVUFBTSxRQUFRO0FBQUEsRUFDbEI7QUFFQSxXQUFTLFNBQVMsV0FBMkI7QUFDekMsVUFBTSxRQUFRLENBQUMsR0FBRyxTQUFTO0FBQzNCLFVBQU0sTUFBTSxNQUFNLElBQUksRUFBRTtBQUN4QixVQUFNLFFBQVEsSUFBSSxJQUFJLEdBQUc7QUFHekIsZUFBVyxDQUFDLEtBQUssS0FBSyxLQUFLLElBQUksUUFBUSxHQUFHO0FBR3RDLGVBQVMsWUFBWSxNQUFNLEtBQUs7QUFFaEMsVUFBSSxDQUFDLE1BQU0sSUFBSSxHQUFHLEdBQUc7QUFDakIsUUFBQUEsUUFBTyxLQUFLO0FBQ1osWUFBSSxPQUFPLEdBQUc7QUFBQSxNQUNsQjtBQUFBLElBQ0o7QUFHQSxVQUFNLElBQUksQ0FBQyxNQUFNLE1BQU07QUFDbkIsWUFBTSxNQUFNLElBQUksQ0FBQztBQUNqQixVQUFJLElBQUksSUFBSSxHQUFHLEdBQUc7QUFDZCxjQUFNO0FBQUEsVUFDRixPQUFPLENBQUMsRUFBRSxRQUFRO0FBQUEsVUFDbEI7QUFBQSxRQUNKLElBQUksSUFBSSxJQUFJLEdBQUc7QUFDZixpQkFBUyxDQUFDO0FBQ1YsWUFBSSxTQUFTLFNBQVMsS0FBSyxHQUFHO0FBQzFCLGtCQUFRLEtBQUsseUJBQXlCLEdBQUcsRUFBRTtBQUFBLFFBQy9DLE9BQU87QUFDSCxtQkFBUyxTQUFTLEtBQUs7QUFBQSxRQUMzQjtBQUFBLE1BQ0osT0FBTztBQUNILGNBQU0sQ0FBQyxPQUFPLFFBQVEsSUFBSSxZQUFZLENBQUM7QUFDdkMsY0FBTSxRQUFRLElBQUksTUFBTSxZQUFZO0FBQ3BDLGNBQU0sUUFBUSxNQUFNLElBQUksTUFBTSxRQUFRLE1BQU0sS0FBSyxDQUFDO0FBQ2xELFlBQUksSUFBSSxLQUFLLEVBQUUsTUFBTSxPQUFPLE9BQU8sQ0FBQyxPQUFPLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFDN0QsaUJBQVMsU0FBUyxLQUFLO0FBQUEsTUFDM0I7QUFBQSxJQUNKLENBQUM7QUFBQSxFQUNMO0FBRUEsUUFBTSxVQUFVLEtBQUssVUFBVSxNQUFNO0FBQ2pDLGFBQVMsS0FBSyxJQUFJLENBQUM7QUFBQSxFQUN2QixDQUFDO0FBQ0QsV0FBUyxLQUFLLElBQUksQ0FBQztBQUVuQixZQUFVLE1BQU07QUFDWixZQUFRO0FBRVIsZUFBVyxTQUFTLElBQUksT0FBTyxHQUFHO0FBQzlCLE1BQUFBLFFBQU8sS0FBSztBQUFBLElBQ2hCO0FBRUEsUUFBSSxNQUFNO0FBQUEsRUFDZCxDQUFDO0FBRUQsU0FBTztBQUNYOzs7QUN6Rk8sU0FBUyxLQUErQjtBQUFBLEVBQzNDO0FBQUEsRUFDQSxVQUFVO0FBQUEsRUFDVjtBQUNKLEdBQWlDO0FBQzdCLFFBQU0sZUFBZSxTQUFTO0FBQzlCLFFBQU0sV0FBVyxJQUFJLFNBQVk7QUFFakMsTUFBSTtBQUVKLFdBQVMsU0FBUyxHQUFNO0FBQ3BCLGVBQVcsU0FBUyxTQUFTLFVBQVU7QUFDbkMsZUFBUyxZQUFZLEtBQUs7QUFFMUIsVUFBSSxPQUFPLFlBQVksWUFBWTtBQUMvQixnQkFBUSxLQUFLO0FBQUEsTUFDakIsV0FBVyxZQUFZLE1BQU07QUFDekIsWUFBSSxlQUFlLEtBQUs7QUFBQSxNQUM1QjtBQUVBLFVBQUksTUFBTyxPQUFNLFFBQVE7QUFBQSxJQUM3QjtBQUVBLFlBQVEsSUFBSSxNQUFNLFlBQVk7QUFDOUIsVUFBTSxLQUFLLE1BQU0sSUFBSSxNQUFNLFFBQVEsQ0FBQyxDQUFDO0FBQ3JDLFFBQUksT0FBTyxNQUFNLE9BQU8sU0FBUyxPQUFPLFFBQVEsT0FBTyxRQUFXO0FBQzlELGVBQVMsU0FBUyxFQUFFO0FBQUEsSUFDeEI7QUFBQSxFQUNKO0FBRUEsUUFBTSxVQUFVLE1BQU0sVUFBVSxNQUFNO0FBQ2xDLGFBQVMsTUFBTSxJQUFJLENBQUM7QUFBQSxFQUN4QixDQUFDO0FBQ0QsV0FBUyxNQUFNLElBQUksQ0FBQztBQUVwQixZQUFVLE1BQU07QUFDWixVQUFNLFFBQVE7QUFDZCxZQUFRO0FBQUEsRUFDWixDQUFDO0FBRUQsU0FBTztBQUNYOzs7QUNsRUEsT0FBTyxjQUFjO0FBSXJCLElBQUksT0FBWTtBQUNoQixJQUFJO0FBQ0YsU0FBTyxTQUFTLFlBQVk7QUFDOUIsUUFBUTtBQUFDO0FBRVQsSUFBTSxDQUFDLGdCQUFnQixpQkFBaUIsSUFBSSxZQUFZLENBQUM7QUFFekQsU0FBUyxnQkFBZ0I7QUFDdkIsb0JBQWtCLFVBQVEsT0FBTyxDQUFDO0FBQ3BDO0FBR0EsSUFBTSxnQkFBZ0IsTUFBTTtBQUMxQixNQUFJLENBQUMsS0FBTSxRQUFPLENBQUM7QUFDbkIsTUFBSTtBQUNGLFdBQU8sS0FBSyxlQUFlLEVBQ3hCLE9BQU8sQ0FBQyxPQUFZLEdBQUcsS0FBSyxDQUFDLEVBQzdCLEtBQUssQ0FBQyxHQUFRLE1BQVcsRUFBRSxLQUFLLEVBQUUsRUFBRTtBQUFBLEVBQ3pDLFFBQVE7QUFDTixXQUFPLENBQUM7QUFBQSxFQUNWO0FBQ0Y7QUFHQSxJQUFNLGFBQWEsZUFBZSxNQUFNLGNBQWMsQ0FBQztBQUd2RCxJQUFJO0FBQ0YsUUFBTSxRQUFRLG1CQUFtQixhQUFhO0FBQzlDLFFBQU0sUUFBUSxxQkFBcUIsYUFBYTtBQUNsRCxRQUFRO0FBQUM7QUFHVCxJQUFJO0FBQ0osSUFBSSxNQUFNO0FBQ1IsdUJBQXFCLGNBQWMsTUFBTSxrQkFBa0I7QUFDN0QsT0FBTztBQUNMLFFBQU0sQ0FBQyxPQUFPLElBQUksWUFBaUIsSUFBSTtBQUN2Qyx1QkFBcUI7QUFDdkI7QUFDQSxJQUFNLG1CQUFtQjs7O0FDM0N6QixPQUFPQyxVQUFTO0FBQ2hCLE9BQU9DLFlBQVc7OztBQ0ZsQixPQUFPQyxVQUFTO0FBQ2hCLE9BQU9DLFVBQVM7QUFDaEIsT0FBT0MsY0FBYTtBQUlwQixJQUFNLGVBQWUsSUFBSUMsS0FBSSxRQUFRO0FBRXJDLFNBQVMsSUFBSSxRQUF1QixPQUF1QixHQUFXO0FBQ2xFLE1BQUksQ0FBQyxXQUFXLFFBQVEsT0FBTyxDQUFDLEdBQUc7QUFDL0IsV0FBTyxnQkFBZ0IsY0FBYyxPQUFPLFFBQVEsS0FBSyxDQUFDO0FBQUEsRUFDOUQ7QUFDSjtBQUVBLFNBQVMsY0FBYyxTQUF5QixRQUF3QjtBQUVwRSxTQUFPO0FBQ1g7QUFFQSxTQUFTLFdBQVcsUUFBd0IsT0FBdUIsR0FBVztBQUUxRSxNQUNJLGlCQUFpQkEsS0FBSSxjQUNyQixvQkFBb0IsVUFDcEIsT0FBTyxPQUFPLG1CQUFtQixZQUNuQztBQUNFLFdBQU8sZUFBZSxLQUFLO0FBQzNCLFdBQU87QUFBQSxFQUNYO0FBRUEsTUFDSSxpQkFBaUJBLEtBQUksVUFDckIsa0JBQWtCQSxLQUFJLFNBQ3RCLE1BQU0sU0FBUyxNQUNmLE1BQU0sU0FBUyxRQUNmLFFBQVEsS0FBSyxNQUFNLFNBQ3JCO0FBQ0UsV0FBTyxVQUFVLE9BQU8sTUFBTSxJQUFJO0FBQ2xDLFdBQU87QUFBQSxFQUNYO0FBRUEsTUFBSSxpQkFBaUJBLEtBQUksV0FBVyxrQkFBa0JBLEtBQUksWUFBWTtBQUNsRSxXQUFPLFlBQVksS0FBSztBQUN4QixXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQ0ksaUJBQWlCQyxLQUFJLGNBQ3BCLGtCQUFrQkQsS0FBSSxjQUFjLGtCQUFrQkEsS0FBSSxjQUM3RDtBQUNFLFdBQU8sZUFBZSxLQUFLO0FBQzNCLFdBQU87QUFBQSxFQUNYO0FBRUEsTUFBSSxpQkFBaUJDLEtBQUksWUFBWSxrQkFBa0JBLEtBQUksTUFBTTtBQUFBLEVBRWpFO0FBRUEsTUFBSSxpQkFBaUJELEtBQUksVUFBVSxrQkFBa0JBLEtBQUksYUFBYTtBQUNsRSxXQUFPLFdBQVcsS0FBSztBQUN2QixXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQUksaUJBQWlCQSxLQUFJLGNBQWMsa0JBQWtCQSxLQUFJLFVBQVU7QUFDbkUsV0FBTyxXQUFXLEtBQUs7QUFDdkIsV0FBTztBQUFBLEVBQ1g7QUFFQSxTQUFPO0FBQ1g7QUFFQSxTQUFTLE9BQU8sUUFBd0IsT0FBdUI7QUFDM0QsTUFBSSxjQUFjLFFBQVEsS0FBSyxFQUFHO0FBRWxDLE1BQUksZUFBZSxVQUFVLE9BQU8sT0FBTyxhQUFhLFlBQVk7QUFDaEUsV0FBTyxPQUFPLFVBQVUsSUFBSTtBQUFBLEVBQ2hDO0FBRUEsTUFBSSxZQUFZLFVBQVUsT0FBTyxPQUFPLFVBQVUsWUFBWTtBQUMxRCxXQUFPLE9BQU8sT0FBTyxLQUFLO0FBQUEsRUFDOUI7QUFFQSxRQUFNLE1BQU0saUJBQWlCLEtBQUssU0FBUyxNQUFNLEVBQUU7QUFDdkQ7QUFFQSxJQUFNLEVBQUUsVUFBVSxrQkFBa0IsSUFBSSxTQUFTO0FBQUEsRUFDN0MsT0FBTyxRQUFRLEtBQUs7QUFDaEIsUUFBSSxFQUFFLGtCQUFrQkEsS0FBSSxTQUFTO0FBQ2pDLGFBQU8sUUFBUSxLQUFLLE1BQU0scUJBQXFCLE1BQU0sRUFBRSxDQUFDO0FBQUEsSUFDNUQ7QUFFQSxVQUFNLE1BQU0sT0FBTyxrQkFBa0I7QUFDckMsUUFBSTtBQUVKLFVBQU0sU0FBUyxDQUFDRSxTQUFnQjtBQUM1QixVQUFJLENBQUNBLEtBQUksU0FBUyxHQUFHLEtBQUssQ0FBQ0EsS0FBSSxTQUFTLEdBQUcsR0FBRztBQUMxQyxRQUFBQSxPQUFNLE9BQU9BLElBQUc7QUFBQSxNQUNwQjtBQUVBLFVBQUksU0FBVSxLQUFJLGdCQUFnQixRQUFRO0FBRTFDLGlCQUFXLElBQUlGLEtBQUksWUFBWTtBQUMvQixlQUFTLGlCQUFpQkUsSUFBRztBQUM3QixVQUFJLGFBQWEsVUFBVUYsS0FBSSw0QkFBNEI7QUFBQSxJQUMvRDtBQUVBLFFBQUksZUFBZSxVQUFVO0FBQ3pCLGFBQU8sSUFBSSxJQUFJLENBQUM7QUFDaEIsWUFBTSxVQUFVLElBQUksVUFBVSxNQUFNLE9BQU8sSUFBSSxJQUFJLENBQUMsQ0FBQztBQUNyRCxnQkFBVSxPQUFPO0FBQUEsSUFDckIsT0FBTztBQUNILGFBQU8sR0FBRztBQUFBLElBQ2Q7QUFBQSxFQUNKO0FBQUEsRUFDQSxTQUFTLFFBQVEsV0FBVztBQUN4QixRQUFJLEVBQUUsa0JBQWtCQSxLQUFJLFNBQVM7QUFDakMsYUFBTyxRQUFRLEtBQUssTUFBTSwyQkFBMkIsTUFBTSxFQUFFLENBQUM7QUFBQSxJQUNsRTtBQUVBLFFBQUkscUJBQXFCLFVBQVU7QUFDL0IsYUFBTyxhQUFhLFVBQVUsSUFBSSxFQUFFLE1BQU0sS0FBSztBQUMvQyxZQUFNLFVBQVUsVUFBVTtBQUFBLFFBQ3RCLE1BQU8sT0FBTyxhQUFhLFVBQVUsSUFBSSxFQUFFLE1BQU0sS0FBSztBQUFBLE1BQzFEO0FBQ0EsZ0JBQVUsT0FBTztBQUFBLElBQ3JCLE9BQU87QUFDSCxhQUFPLGdCQUFnQixVQUFVLE1BQU0sS0FBSyxDQUFDO0FBQUEsSUFDakQ7QUFBQSxFQUNKO0FBQUEsRUFDQSxTQUFTLFFBQVEsT0FBTyxRQUFRLElBQUk7QUFDaEMsUUFBSSxFQUFFLGlCQUFpQkcsU0FBUSxTQUFTO0FBQ3BDLGNBQVFILEtBQUksTUFBTSxJQUFJLE9BQU8sS0FBSyxDQUFDO0FBQUEsSUFDdkM7QUFFQSxRQUFJLFdBQVcsUUFBUSxPQUFPLEtBQUssRUFBRztBQUV0QyxRQUFJLGtCQUFrQixVQUFVO0FBQzVCLGFBQU8sU0FBUyxLQUFLO0FBQ3JCO0FBQUEsSUFDSjtBQUVBLFFBQUksa0JBQWtCQSxLQUFJLFdBQVc7QUFDakMsVUFBSSxpQkFBaUIsVUFBVTtBQUMzQixtQkFBVyxNQUFNLE1BQU0sVUFBVTtBQUM3QixjQUFJLFFBQVEsSUFBSSxLQUFLO0FBQUEsUUFDekI7QUFFQSxjQUFNLFFBQVEsZUFBZSxDQUFDLEdBQUcsSUFBYUksV0FBa0I7QUFDNUQsY0FBSSxFQUFFLGNBQWNELFNBQVEsU0FBUztBQUNqQyxvQkFBUSxNQUFNLFVBQVUsY0FBYyxFQUFFLE9BQU8sTUFBTSxFQUFFLENBQUM7QUFDeEQ7QUFBQSxVQUNKO0FBQ0EsbUJBQVMsUUFBUSxJQUFJQyxNQUFLO0FBQUEsUUFDOUIsQ0FBQztBQUVELGNBQU0sUUFBUSxpQkFBaUIsQ0FBQyxHQUFHLE9BQWdCO0FBQy9DLGNBQUksRUFBRSxjQUFjRCxTQUFRLFNBQVM7QUFDakMsb0JBQVEsTUFBTSxVQUFVLGlCQUFpQixFQUFFLFNBQVMsTUFBTSxFQUFFLENBQUM7QUFDN0Q7QUFBQSxVQUNKO0FBQ0EsaUJBQU8sUUFBUSxFQUFFO0FBQUEsUUFDckIsQ0FBQztBQUVELGtCQUFVLE1BQU0sTUFBTSxRQUFRLENBQUM7QUFDL0I7QUFBQSxNQUNKO0FBRUEsVUFBSSxRQUFRLE9BQU8sS0FBSztBQUN4QjtBQUFBLElBQ0o7QUFFQSxVQUFNLE1BQU0sY0FBYyxLQUFLLE9BQU8sTUFBTSxFQUFFO0FBQUEsRUFDbEQ7QUFDSixDQUFDOzs7QURyS0QsT0FBTyxPQUFPLG1CQUFtQjtBQUFBLEVBQzdCLEtBQUtFLEtBQUk7QUFBQSxFQUNULFFBQVFBLEtBQUk7QUFBQSxFQUNaLFdBQVdBLEtBQUk7QUFBQTtBQUFBLEVBRWYsYUFBYUEsS0FBSTtBQUFBLEVBQ2pCLE9BQU9BLEtBQUk7QUFBQSxFQUNYLE9BQU9BLEtBQUk7QUFBQSxFQUNYLE9BQU9BLEtBQUk7QUFBQSxFQUNYLFVBQVVBLEtBQUk7QUFBQSxFQUNkLFlBQVlBLEtBQUk7QUFBQSxFQUNoQixTQUFTQSxLQUFJO0FBQUEsRUFDYixTQUFTQSxLQUFJO0FBQUEsRUFDYixVQUFVQSxLQUFJO0FBQUEsRUFDZCxnQkFBZ0JBLEtBQUk7QUFBQSxFQUNwQixRQUFRQyxPQUFNO0FBQUEsRUFDZCxPQUFPRCxLQUFJO0FBQUEsRUFDWCxRQUFRQSxLQUFJO0FBQUEsRUFDWixjQUFjQSxLQUFJO0FBQUEsRUFDbEIsUUFBUUMsT0FBTTtBQUNsQixDQUFDOzs7QUV4Qk0sU0FBUyxXQUFXLEVBQUUsT0FBTyxJQUFJLEdBQXVCO0FBQzdELFNBQ0Usb0JBQUMsU0FBSSxPQUFPLGNBQWMsT0FBTyxFQUFFLElBQUksU0FBUyxHQUM5Qyw4QkFBQyxPQUFJLE1BQU0sWUFDUixXQUFDLE9BQ0E7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNDLGNBQWM7QUFBQSxNQUNkLE9BQU87QUFBQSxRQUFpQixDQUFDLE1BQ3ZCLEdBQUcsT0FBTyxHQUFHLEtBQUssc0JBQXNCO0FBQUEsTUFDMUM7QUFBQSxNQUNBLFdBQVcsTUFBTSxHQUFHLE1BQU07QUFBQSxNQUUxQjtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0MsZUFBZTtBQUFBLFVBQ2YsY0FBYztBQUFBLFVBQ2QsUUFBUUMsS0FBSSxNQUFNO0FBQUEsVUFDbEIsUUFBUUEsS0FBSSxNQUFNO0FBQUEsVUFDbEIsT0FBTztBQUFBLFlBQWlCLENBQUMsTUFDdkIsR0FBRyxPQUFPLEdBQUcsS0FBSyxnQkFBZ0I7QUFBQSxVQUNwQztBQUFBO0FBQUEsTUFDRjtBQUFBO0FBQUEsRUFDRixHQUVKLEdBQ0Y7QUFFSjs7O0FDOUJBLE9BQU8sVUFBVTtBQUdqQixJQUFNLE9BQU8sS0FBSyxZQUFZO0FBRzlCLFNBQVMsaUJBQWlCLE9BQXlDO0FBQ2pFLFNBQU8sTUFBTSxPQUFPLFVBQVE7QUFDMUIsUUFBSTtBQUVGLGFBQU8sUUFDQSxLQUFLLFNBQ0wsS0FBSyxNQUNMLENBQUMsS0FBSyxlQUFlLFNBQVM7QUFBQSxNQUM5QixLQUFLLGVBQWUsUUFBUSxNQUFNO0FBQUEsSUFDM0MsU0FBUyxPQUFPO0FBQ2QsY0FBUSxLQUFLLDhDQUE4QyxLQUFLO0FBQ2hFLGFBQU87QUFBQSxJQUNUO0FBQUEsRUFDRixDQUFDO0FBQ0g7QUFHTyxJQUFNLFlBQVksY0FBYyxNQUFNLFNBQVMsQ0FBQyxVQUEyQjtBQUNoRixTQUFPLGlCQUFpQixLQUFLO0FBQy9CLENBQUM7OztBQ3RCRCxPQUFPQyxlQUFjO0FBRXJCLFNBQVMsa0JBQWtCLEVBQUUsS0FBSyxHQUE0QjtBQUM1RCxTQUNFO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDQyxPQUFNO0FBQUEsTUFDTixXQUFXLE1BQU07QUFDZixZQUFJO0FBQUUsZUFBSyxTQUFTLEdBQUcsQ0FBQztBQUFBLFFBQUcsUUFBUTtBQUFBLFFBQUM7QUFDcEMsWUFBSTtBQUFFLFVBQUMsS0FBYSxvQkFBb0IsR0FBRyxDQUFDO0FBQUEsUUFBRyxRQUFRO0FBQUEsUUFBQztBQUN4RCxZQUFJO0FBQ0YsZ0JBQU1DLFFBQU9DLFVBQVMsWUFBWTtBQUNsQyxVQUFBRCxPQUFNLFdBQVcsZUFBZSxTQUFTLEtBQUssS0FBSyxFQUFFO0FBQUEsUUFDdkQsUUFBUTtBQUFBLFFBQUM7QUFBQSxNQUNYO0FBQUEsTUFFQSw4QkFBQyxXQUFNLE9BQU8sS0FBSyxPQUFPLFdBQVcsSUFBSTtBQUFBO0FBQUEsRUFDM0M7QUFFSjtBQUVPLFNBQVMsV0FBVyxFQUFFLE9BQU8sSUFBSSxHQUF1QjtBQUM3RCxTQUNFO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDQyxPQUFPLGVBQWUsT0FBTyxFQUFFO0FBQUEsTUFDL0IsU0FBUztBQUFBLE1BQ1QsU0FBUyxVQUFVLENBQUMsVUFBVSxNQUFNLFNBQVMsQ0FBQztBQUFBLE1BRTlDLDhCQUFDLE9BQUksTUFBTSxXQUFZLFdBQUMsU0FBUyxvQkFBQyxxQkFBa0IsTUFBWSxHQUFHO0FBQUE7QUFBQSxFQUNyRTtBQUVKOzs7QUNqQ0EsT0FBT0UsZUFBYztBQUlyQixJQUFJQyxRQUFZO0FBQ2hCLElBQUk7QUFDRixFQUFBQSxRQUFPQyxVQUFTLFlBQVk7QUFDOUIsUUFBUTtBQUFDO0FBR1QsSUFBSTtBQUNKLElBQUlELE9BQU07QUFDUixhQUFXLGNBQWNBLE9BQU0sZUFBZTtBQUNoRCxPQUFPO0FBQ0wsUUFBTSxDQUFDRSxPQUFNLElBQUksWUFBaUIsSUFBSTtBQUN0QyxhQUFXQTtBQUNiO0FBQ08sSUFBTSxTQUFTOzs7QUNkZixTQUFTLFlBQVksRUFBRSxPQUFPLE1BQU0sR0FBRyxHQUF1QjtBQUNuRSxTQUNFLG9CQUFDLFFBQUssT0FBTyxRQUNWLFdBQUMsTUFBTTtBQUNOLFVBQU0sUUFBUSxHQUFHLFlBQVk7QUFDN0IsVUFBTSxVQUFVLEdBQUcsWUFBWTtBQUUvQixXQUNFLHFCQUFDLFNBQUksT0FBTyxHQUFHLEdBQUcsSUFBSSxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUMsR0FDM0M7QUFBQSwwQkFBQyxXQUFNLFVBQVUsU0FBUyxXQUFXLElBQUk7QUFBQSxNQUN6QyxvQkFBQyxXQUFNLE9BQU8sT0FBTyxRQUFRLEdBQUssZUFBZSxJQUFJLFdBQVcsR0FBRyxXQUFXLEdBQUU7QUFBQSxPQUNsRjtBQUFBLEVBRUosR0FDRjtBQUVKOzs7QUNuQkEsT0FBTyxhQUFhO0FBVWIsSUFBTSxVQUFVLFFBQVE7QUFVeEIsU0FBUyxXQUNaLFdBQ0EsUUFBa0MsT0FDbEMsUUFBa0MsVUFDcEM7QUFDRSxRQUFNLE9BQU8sTUFBTSxRQUFRLFNBQVMsS0FBSyxPQUFPLGNBQWM7QUFDOUQsUUFBTSxFQUFFLEtBQUssS0FBSyxJQUFJLElBQUk7QUFBQSxJQUN0QixLQUFLLE9BQU8sWUFBWSxVQUFVO0FBQUEsSUFDbEMsS0FBSyxPQUFPLFFBQVEsVUFBVSxPQUFPO0FBQUEsSUFDckMsS0FBSyxPQUFPLFFBQVEsVUFBVSxPQUFPO0FBQUEsRUFDekM7QUFFQSxRQUFNLE9BQU8sTUFBTSxRQUFRLEdBQUcsSUFDeEIsUUFBUSxRQUFRLFlBQVksR0FBRyxJQUMvQixRQUFRLFFBQVEsV0FBVyxHQUFHO0FBRXBDLE9BQUssUUFBUSxVQUFVLENBQUMsR0FBRyxXQUFtQixJQUFJLE1BQU0sQ0FBQztBQUN6RCxPQUFLLFFBQVEsVUFBVSxDQUFDLEdBQUcsV0FBbUIsSUFBSSxNQUFNLENBQUM7QUFDekQsU0FBTztBQUNYO0FBT08sU0FBUyxVQUFVLEtBQXlDO0FBQy9ELFNBQU8sSUFBSSxRQUFRLENBQUMsU0FBUyxXQUFXO0FBQ3BDLFFBQUksTUFBTSxRQUFRLEdBQUcsR0FBRztBQUNwQixjQUFRLFFBQVEsWUFBWSxLQUFLLENBQUMsR0FBRyxRQUFRO0FBQ3pDLFlBQUk7QUFDQSxrQkFBUSxRQUFRLFFBQVEsbUJBQW1CLEdBQUcsQ0FBQztBQUFBLFFBQ25ELFNBQVMsT0FBTztBQUNaLGlCQUFPLEtBQUs7QUFBQSxRQUNoQjtBQUFBLE1BQ0osQ0FBQztBQUFBLElBQ0wsT0FBTztBQUNILGNBQVEsUUFBUSxXQUFXLEtBQUssQ0FBQyxHQUFHLFFBQVE7QUFDeEMsWUFBSTtBQUNBLGtCQUFRLFFBQVEsUUFBUSxZQUFZLEdBQUcsQ0FBQztBQUFBLFFBQzVDLFNBQVMsT0FBTztBQUNaLGlCQUFPLEtBQUs7QUFBQSxRQUNoQjtBQUFBLE1BQ0osQ0FBQztBQUFBLElBQ0w7QUFBQSxFQUNKLENBQUM7QUFDTDs7O0FDaEVBLE9BQU9DLFdBQVU7QUFFakIsSUFBTSxNQUFNO0FBQ1osSUFBSSxZQUFZO0FBRWhCLElBQUk7QUFFRixRQUFNLENBQUMsVUFBVSxJQUFJLElBQUlBLE1BQUssa0JBQWtCLEdBQUc7QUFFbkQsUUFBTSxPQUFPLElBQUksWUFBWSxFQUFFLE9BQU8sSUFBSTtBQUUxQyxRQUFNLFFBQVEsS0FBSyxNQUFNLHVCQUF1QjtBQUNoRCxNQUFJLE9BQU87QUFDVCxnQkFBWSxTQUFTLE1BQU0sQ0FBQyxHQUFHLEVBQUU7QUFBQSxFQUNuQztBQUNGLFNBQVMsR0FBRztBQUNWLFFBQU0sd0RBQXdELENBQUMsRUFBRTtBQUNuRTtBQUVPLElBQU0sQ0FBQyxjQUFjLE9BQU8sSUFBSTtBQUFBLEVBQ3JDLE1BQU0sU0FBUyxFQUFFLEtBQUssQ0FBQztBQUN6QjtBQUVBLElBQU0sT0FBTyxDQUFDLE1BQWMsS0FBSyxNQUFNLElBQUssS0FBSyxJQUFJLEdBQUcsR0FBSSxJQUFJLE1BQVEsRUFBRTtBQUUxRTtBQUFBLEVBQ0UsQ0FBQyxRQUFRLE1BQU0sR0FBRztBQUFBLEVBQ2xCLENBQUMsUUFBUTtBQUNQLFVBQU0sT0FBTyxJQUNWLEtBQUssRUFDTCxNQUFNLEdBQUcsRUFDVCxJQUFJLE1BQU0sRUFDVixPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzFCLFFBQUksS0FBSyxVQUFVLFVBQVcsU0FBUSxLQUFLLE1BQU0sR0FBRyxTQUFTLEVBQUUsSUFBSSxJQUFJLENBQUM7QUFBQSxFQUMxRTtBQUFBLEVBQ0EsQ0FBQyxRQUFRLFFBQVEsTUFBTSxlQUFlLEdBQUc7QUFDM0M7OztBQ3RDQSxPQUFPLFdBQVc7QUFFbEIsT0FBT0MsZUFBYztBQUdyQixJQUFNLFFBQVEsTUFBTSxZQUFZO0FBR3pCLElBQU0sVUFBVSxjQUFjLE9BQU8sU0FBUztBQUc5QyxJQUFNLGVBQWU7QUFHckIsSUFBTSxDQUFDLG1CQUFtQixvQkFBb0IsSUFBSSxZQUFZLEtBQUs7QUFFMUUsSUFBTUMsUUFBT0QsVUFBUyxZQUFZO0FBZTNCLFNBQVMsbUJBQW1CO0FBQ2pDLFFBQU1FLFdBQVUsYUFBYTtBQUM3QixRQUFNLFNBQVNBLFNBQVEsS0FBSyxDQUFDLE1BQU0sRUFBRSxtQkFBbUIsTUFBTSxlQUFlLE9BQU87QUFDcEYsTUFBSSxRQUFRO0FBQ1YsSUFBQUMsTUFBSyxTQUFTLGVBQWUsU0FBUyxPQUFPLEtBQUssRUFBRTtBQUFBLEVBQ3REO0FBSUY7OztBQ2xDQSxJQUFNLE9BQU8sYUFBYSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQztBQUU1QyxTQUFTLGVBQWUsRUFBRSxPQUFPLElBQUksR0FBdUI7QUFDakUsU0FDQyxvQkFBQyxZQUFPLE9BQU8sZUFBZSxPQUFPLEVBQUUsSUFBSSxXQUFXLGtCQUNwRCw4QkFBQyxTQUFJLE9BQU0sZ0JBQWUsU0FBUyxHQUNoQyw4QkFBQyxPQUFJLE1BQU0sTUFBTSxJQUFJLENBQUMsTUFBTSxHQUN6QixXQUFDLE1BQU07QUFDTixVQUFNLElBQUksYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFDbEMsVUFBTSxTQUFTLEVBQUUsQ0FBQyxNQUFNLENBQUM7QUFDekIsVUFBTSxTQUFTLEtBQUssTUFBTSxTQUFTLENBQUM7QUFDcEMsV0FDRSxvQkFBQyxTQUFJLEtBQUksNEJBQ1A7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNDLE9BQU07QUFBQSxRQUNOLGNBQWM7QUFBQSxRQUNkLGVBQWU7QUFBQSxRQUNmLFFBQVFDLEtBQUksTUFBTTtBQUFBO0FBQUEsSUFDcEIsR0FDRjtBQUFBLEVBRUosR0FDRixHQUNILEdBQ0Y7QUFFSDs7O0FDaENBLE9BQU9DLGNBQWE7QUFLYixJQUFNLE9BQU9DLFNBQVE7QUFFckIsU0FBUyxTQUFTQyxXQUFrQixVQUF1QjtBQUM5RCxTQUFPRCxTQUFRLEtBQUssU0FBU0MsV0FBVSxNQUFNLEtBQUssV0FBVyxDQUFDO0FBQ2xFO0FBNkJPLFNBQVMsV0FDWixNQUNBLE1BQ0EsVUFDQSxXQUNXO0FBQ1gsTUFBSSxlQUFlO0FBQ25CLE1BQUksUUFBNkI7QUFDakMsUUFBTSxjQUFjLG9CQUFJLElBQWdCO0FBRXhDLFdBQVMsVUFBVSxVQUFrQztBQUNqRCxhQUFTQyxLQUFJLE9BQVU7QUFDbkIsVUFBSSxVQUFVLGNBQWM7QUFDeEIsdUJBQWU7QUFDZixvQkFBWSxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUM7QUFBQSxNQUNwQztBQUFBLElBQ0o7QUFFQSxRQUFJLFlBQVksU0FBUyxHQUFHO0FBQ3hCLGNBQVEsU0FBUyxNQUFNLE1BQU07QUFDekIsWUFBSSxPQUFPLGFBQWEsWUFBWTtBQUNoQyxnQkFBTSxRQUFRLFNBQVMsWUFBWTtBQUNuQyxjQUFJLGlCQUFpQixTQUFTO0FBQzFCLGtCQUFNLEtBQUtBLElBQUc7QUFBQSxVQUNsQixPQUFPO0FBQ0gsWUFBQUEsS0FBSSxLQUFLO0FBQUEsVUFDYjtBQUFBLFFBQ0osT0FBTztBQUNILG9CQUFVLFFBQVEsRUFBRSxLQUFLLENBQUMsV0FBVztBQUNqQyxZQUFBQSxLQUFJLFlBQVksVUFBVSxRQUFRLFlBQVksSUFBSyxNQUFZO0FBQUEsVUFDbkUsQ0FBQztBQUFBLFFBQ0w7QUFBQSxNQUNKLENBQUM7QUFBQSxJQUNMO0FBRUEsZ0JBQVksSUFBSSxRQUFRO0FBRXhCLFdBQU8sTUFBTTtBQUNULGtCQUFZLE9BQU8sUUFBUTtBQUMzQixVQUFJLFlBQVksU0FBUyxHQUFHO0FBQ3hCLGVBQU8sT0FBTztBQUNkLGdCQUFRO0FBQUEsTUFDWjtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBRUEsU0FBTyxJQUFJLFNBQVMsTUFBTSxjQUFjLFNBQVM7QUFDckQ7OztBQ3BGQSxPQUFPQyxXQUFVO0FBR2pCLFNBQVMsYUFBYSxNQUFzQjtBQUUxQyxNQUFJLFFBQVEsS0FBSyxNQUFNLHlCQUF5QjtBQUNoRCxNQUFJLE1BQU8sUUFBTyxLQUFLLE1BQU0sV0FBVyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBRWpELFVBQVEsS0FBSyxNQUFNLDJCQUEyQjtBQUM5QyxNQUFJLE1BQU8sUUFBTyxLQUFLLE1BQU0sV0FBVyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBRWpELFNBQU87QUFDVDtBQUdBLFNBQVMsYUFBcUI7QUFDNUIsTUFBSTtBQUNGLFVBQU0sTUFBTUEsTUFBSztBQUFBLE1BQ2Y7QUFBQSxJQUNGLEVBQUUsQ0FBQztBQUNILFFBQUksQ0FBQyxJQUFLLFFBQU87QUFDakIsVUFBTSxPQUFPLFNBQVMsSUFBSSxZQUFZLEVBQUUsT0FBTyxHQUFHLEVBQUUsS0FBSyxDQUFDO0FBQzFELFdBQU8sTUFBTSxJQUFJLElBQUksSUFBSTtBQUFBLEVBQzNCLFNBQVMsR0FBRztBQUNWLFdBQU87QUFBQSxFQUNUO0FBQ0Y7QUFHQSxTQUFTLGNBQWMsS0FBYSxLQUF3QztBQUMxRSxRQUFNLE1BQU0sS0FBSyxJQUFJLEtBQUssR0FBRztBQUM3QixNQUFJLE9BQU8sR0FBSSxRQUFPO0FBQ3RCLE1BQUksT0FBTyxHQUFJLFFBQU87QUFDdEIsU0FBTztBQUNUO0FBR08sSUFBTSxjQUFjO0FBQUEsRUFDekIsRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxRQUFRLFNBQVM7QUFBQSxFQUMzQztBQUFBLEVBQ0EsTUFBTTtBQUVKLFFBQUksTUFBTTtBQUNWLFFBQUk7QUFDRixZQUFNLE1BQU1BLE1BQUssd0JBQXdCLFNBQVMsRUFBRSxDQUFDO0FBQ3JELFVBQUksSUFBSyxPQUFNLGFBQWEsSUFBSSxZQUFZLEVBQUUsT0FBTyxHQUFHLENBQUM7QUFBQSxJQUMzRCxTQUFTLEdBQUc7QUFBQSxJQUFDO0FBR2IsVUFBTSxNQUFNLFdBQVc7QUFHdkIsVUFBTSxNQUFNLEtBQUssT0FBTyxNQUFNLE9BQU8sQ0FBQztBQUN0QyxVQUFNLFNBQVMsY0FBYyxLQUFLLEdBQUc7QUFFckMsV0FBTyxFQUFFLEtBQUssS0FBSyxLQUFLLE9BQU87QUFBQSxFQUNqQztBQUNGOzs7QUN4REEsT0FBT0MsVUFBUztBQUdoQixTQUFTLFFBQVEsUUFBZ0I7QUFDL0IsUUFBTSxPQUFPO0FBQUEsSUFDWCxRQUFRO0FBQUEsSUFDUixNQUFNO0FBQUEsSUFDTixLQUFLO0FBQUEsRUFDUDtBQUNBLFNBQU8sS0FBSyxNQUEyQjtBQUN6QztBQUVPLFNBQVMsV0FBVyxFQUFFLE9BQU8sSUFBSSxHQUF1QjtBQUM3RCxTQUNFLG9CQUFDLFNBQUksT0FBTyxlQUFlLE9BQU8sRUFBRSxJQUNsQyw4QkFBQyxRQUFLLE9BQU8sYUFDVixXQUFDLEVBQUUsS0FBSyxLQUFLLEtBQUssT0FBTyxNQUN4QjtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0MsT0FBTyxnQkFBZ0IsTUFBTTtBQUFBLE1BQzdCLGNBQWM7QUFBQSxNQUNkLGFBQWE7QUFBQSxNQUViLCtCQUFDLFNBQUksUUFBUUMsS0FBSSxNQUFNLFFBQVEsU0FBUyxHQUN0QztBQUFBO0FBQUEsVUFBQztBQUFBO0FBQUEsWUFDQyxPQUFPQyxLQUFJLG9CQUFvQixRQUFRLE1BQU0sQ0FBQztBQUFBLFlBQzlDLFdBQVc7QUFBQTtBQUFBLFFBQ2I7QUFBQSxRQUNBLG9CQUFDLFdBQU0sT0FBTyxHQUFHLEdBQUcsU0FBTTtBQUFBLFNBQzVCO0FBQUE7QUFBQSxFQUNGLEdBRUosR0FDRjtBQUVKOzs7QUNuQ0EsT0FBT0MsV0FBVTtBQUdqQixTQUFTLGNBQTBEO0FBQy9ELE1BQUk7QUFDQSxVQUFNLE1BQU1BLE1BQUs7QUFBQSxNQUNiO0FBQUEsSUFDSixFQUFFLENBQUM7QUFDSCxRQUFJLENBQUMsSUFBSyxPQUFNLElBQUksTUFBTSxTQUFTO0FBQ25DLFVBQU0sT0FBTyxLQUFLLE1BQU0sUUFBUSxVQUFVLFNBQVMsR0FBRyxDQUFDO0FBQ3ZELFdBQU8sRUFBRSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLEtBQUssS0FBSztBQUFBLEVBQzNELFFBQVE7QUFFSixXQUFPLEVBQUUsS0FBSyxTQUFTLEtBQUssVUFBVSxNQUFNLFdBQVc7QUFBQSxFQUMzRDtBQUNKO0FBQ0EsSUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLElBQUksWUFBWTtBQUV2QyxTQUFTLDBCQUEwQixNQUFjO0FBQzdDLE1BQUksU0FBUyxFQUFHLFFBQU87QUFDdkIsTUFBSSxRQUFRLEVBQUcsUUFBTztBQUN0QixNQUFJLFFBQVEsR0FBSSxRQUFPO0FBQ3ZCLE1BQUksUUFBUSxHQUFJLFFBQU87QUFDdkIsTUFBSSxRQUFRLEdBQUksUUFBTztBQUN2QixNQUFJLFFBQVEsR0FBSSxRQUFPO0FBQ3ZCLE1BQUksUUFBUSxHQUFJLFFBQU87QUFDdkIsTUFBSSxRQUFRLEdBQUksUUFBTztBQUN2QixNQUFJLFFBQVEsR0FBSSxRQUFPO0FBQ3ZCLFNBQU87QUFDWDtBQUdPLElBQU0sVUFBVTtBQUFBLEVBQ25CLEVBQUUsYUFBYSxHQUFHLFdBQVcsR0FBRyxNQUFNLG1CQUFPLFVBQVUsS0FBSztBQUFBLEVBQzVEO0FBQUEsRUFDQSxNQUFNO0FBQ0YsUUFBSTtBQUNBLFlBQU0sTUFBTSxtREFBbUQsR0FBRyxjQUFjLEdBQUc7QUFDbkYsWUFBTSxNQUFNQSxNQUFLLHdCQUF3Qiw4Q0FBOEMsR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUNoRyxVQUFJLENBQUMsSUFBSyxPQUFNLElBQUksTUFBTSxTQUFTO0FBQ25DLFlBQU0sT0FBTyxLQUFLLE1BQU0sUUFBUSxVQUFVLFNBQVMsR0FBRyxDQUFDO0FBQ3ZELFlBQU0sSUFBSSxLQUFLO0FBQ2YsYUFBTztBQUFBLFFBQ0gsYUFBYSxLQUFLLE1BQU0sRUFBRSxjQUFjO0FBQUEsUUFDeEMsV0FBVyxLQUFLLE1BQU0sRUFBRSxvQkFBb0I7QUFBQSxRQUM1QyxNQUFNLDBCQUEwQixFQUFFLFlBQVk7QUFBQSxRQUM5QyxVQUFVO0FBQUEsTUFDZDtBQUFBLElBQ0osUUFBUTtBQUNKLGFBQU8sRUFBRSxhQUFhLEdBQUcsV0FBVyxHQUFHLE1BQU0sbUJBQU8sVUFBVSxLQUFLO0FBQUEsSUFDdkU7QUFBQSxFQUNKO0FBQ0o7OztBQ2pETyxTQUFTLFFBQVEsRUFBRSxPQUFPLElBQUksR0FBdUI7QUFDMUQsU0FDRSxvQkFBQyxRQUFLLE9BQU8sU0FDVixXQUFDLFVBQVU7QUFDVixVQUFNLEVBQUUsTUFBTSxXQUFXLFNBQVMsSUFBSTtBQUt0QyxXQUNFO0FBQUEsTUFBQztBQUFBO0FBQUEsUUFDQyxPQUFPLGtCQUFrQixPQUFPLEVBQUU7QUFBQSxRQUNsQyxjQUFjO0FBQUEsUUFDZCxhQUFhO0FBQUEsUUFFYiwrQkFBQyxTQUFJLFFBQVFDLEtBQUksTUFBTSxRQUFRLFNBQVMsR0FDdEM7QUFBQSw4QkFBQyxXQUFNLE9BQU8sTUFBTTtBQUFBLFVBQ3BCLG9CQUFDLFdBQU0sT0FBTyxHQUFHLFNBQVMsU0FBTTtBQUFBLFdBQ2xDO0FBQUE7QUFBQSxJQUNGO0FBQUEsRUFFSixHQUNGO0FBRUo7OztBQzFCTyxJQUFNLE9BQU8sV0FBVyxJQUFJLEtBQU0sQ0FBQyxRQUFRLGNBQWMsQ0FBQzs7O0FDQzFELFNBQVMsWUFBWSxFQUFFLE9BQU8sSUFBSSxHQUF1QjtBQUM5RCxTQUNFLG9CQUFDLFNBQUksT0FBTyxnQkFBZ0IsT0FBTyxFQUFFLElBQ25DLCtCQUFDLGdCQUFXLFFBQVFDLEtBQUksTUFBTSxRQUFRLFFBQVFBLEtBQUksTUFBTSxRQUN0RDtBQUFBLHdCQUFDLFdBQU0sT0FBTyxNQUFNO0FBQUEsSUFDcEIsb0JBQUMsYUFDQyw4QkFBQ0EsS0FBSSxVQUFKLEVBQWEsR0FDaEI7QUFBQSxLQUNGLEdBQ0Y7QUFFSjs7O0FDZEEsT0FBT0MsV0FBVTs7O0FDQWpCLE9BQU8sZUFBZTtBQUVmLElBQU0sWUFBWSxVQUFVLFlBQVk7QUFHeEMsSUFBTSxnQkFBZ0I7QUFBQSxFQUN6QjtBQUFBLEVBQ0E7QUFDRjs7O0FETEssU0FBUyxnQkFBZ0I7QUFBQSxFQUM5QixPQUFPLE1BQU07QUFDZixHQUVHO0FBQ0QsU0FDRSxvQkFBQyxTQUFJLE9BQU8sR0FBRyxHQUFHLElBQ2hCO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDQyxXQUFXLE1BQU1DLE1BQUsseUJBQXlCLFdBQVc7QUFBQSxNQUUxRDtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0MsVUFBVTtBQUFBLFlBQWMsQ0FBQyxPQUN2QixLQUFLLDhCQUE4QjtBQUFBLFVBQ3JDO0FBQUEsVUFDQSxXQUFXO0FBQUEsVUFDWCxLQUFJO0FBQUE7QUFBQSxNQUNOO0FBQUE7QUFBQSxFQUNGLEdBQ0Y7QUFFSjs7O0FFdkJBLE9BQU8sWUFBWTtBQUluQixJQUFJLFNBQWM7QUFDbEIsSUFBSTtBQUNGLFdBQVMsT0FBTyxZQUFZO0FBQzVCLFVBQVEsSUFBSSxrREFBa0Q7QUFDaEUsU0FBUyxPQUFPO0FBQ2QsVUFBUSxNQUFNLGdEQUFnRCxLQUFLO0FBQ3JFO0FBR0EsSUFBSTtBQUNKLElBQUksUUFBUTtBQUNWLG9CQUFrQixjQUFjLFFBQVEsZUFBZTtBQUN6RCxPQUFPO0FBQ0wsUUFBTSxDQUFDLElBQUksSUFBSSxZQUFtQixDQUFDLENBQUM7QUFDcEMsb0JBQWtCO0FBQ3BCO0FBQ08sSUFBTSxnQkFBZ0I7QUFHdEIsSUFBTSxDQUFDLG1CQUFtQixvQkFBb0IsSUFBSSxZQUFtQixDQUFDLENBQUM7QUFDdkUsSUFBTSxDQUFDLGVBQWUsZ0JBQWdCLElBQUksWUFBWSxLQUFLO0FBR2xFLFFBQVEsSUFBSSx1REFBdUQsQ0FBQyxDQUFDLE1BQU07QUFHM0UsSUFBTSxvQkFBb0I7QUFDMUIsSUFBTSx3QkFBd0I7QUFDOUIsSUFBTSxXQUFXLG9CQUFJLElBQWM7QUFDbkMsSUFBSSxlQUFlO0FBR25CLElBQUk7QUFDRixNQUFJLFFBQVE7QUFDVixXQUFPLFFBQVEsWUFBWSxDQUFDLEdBQVEsSUFBWSxXQUFvQjtBQUNsRSxjQUFRLElBQUkseUNBQXlDLElBQUksV0FBVyxNQUFNO0FBRzFFLFlBQU0sZUFBZSxPQUFPLGlCQUFpQixFQUFFO0FBQy9DLFVBQUksQ0FBQyxjQUFjO0FBQ2pCLGdCQUFRLEtBQUssdURBQXVELEVBQUU7QUFDdEU7QUFBQSxNQUNGO0FBRUEsY0FBUSxJQUFJLHFDQUFxQyxhQUFhLFNBQVMsYUFBYSxJQUFJO0FBR3hGLDJCQUFxQixVQUFRLENBQUMsR0FBRyxNQUFNLFlBQVksQ0FBQztBQUdwRCxZQUFNLFFBQVE7QUFDZCxZQUFNLGNBQWMsb0JBQXFCLFFBQVE7QUFFakQsY0FBUSxJQUFJLG9DQUFvQyxhQUFhLElBQUk7QUFFakUsWUFBTSxZQUFZLFdBQVcsTUFBTTtBQUNqQyxnQkFBUSxJQUFJLGlEQUFpRCxhQUFhLE9BQU87QUFDakYsdUJBQWUsWUFBWTtBQUFBLE1BQzdCLEdBQUcsV0FBVztBQUVkLGVBQVMsSUFBSSxjQUFjLFNBQVM7QUFBQSxJQUN0QyxDQUFDO0FBQ0QsWUFBUSxJQUFJLGdEQUFnRDtBQUFBLEVBQzlELE9BQU87QUFDTCxZQUFRLElBQUkscUNBQXFDO0FBQUEsRUFDbkQ7QUFDRixTQUFTLE9BQU87QUFDZCxVQUFRLE1BQU0sc0NBQXNDLEtBQUs7QUFDM0Q7QUFFQSxTQUFTLGVBQWUsY0FBbUI7QUFDekMsVUFBUSxJQUFJLHdEQUF3RDtBQUdwRSxRQUFNLFlBQVksU0FBUyxJQUFJLFlBQVk7QUFDM0MsTUFBSSxXQUFXO0FBQ2IsaUJBQWEsU0FBUztBQUN0QixhQUFTLE9BQU8sWUFBWTtBQUM1QixZQUFRLElBQUksaUNBQWlDO0FBQUEsRUFDL0M7QUFHQSxRQUFNLGdCQUFnQixrQkFBa0IsSUFBSTtBQUM1QyxVQUFRLElBQUksK0RBQStELGNBQWMsTUFBTTtBQUcvRix1QkFBcUIsVUFBUTtBQUMzQixVQUFNLFdBQVcsS0FBSyxPQUFPLE9BQUssTUFBTSxZQUFZO0FBQ3BELFlBQVEsSUFBSSxpREFBaUQsU0FBUyxNQUFNO0FBQzVFLFlBQVEsSUFBSSw2Q0FBNkMsS0FBSyxXQUFXLFNBQVMsTUFBTTtBQUd4RixRQUFJLFNBQVMsV0FBVyxHQUFHO0FBQ3pCLHFCQUFlO0FBQ2YsY0FBUSxJQUFJLDRDQUE0QztBQUFBLElBQzFEO0FBRUEsV0FBTztBQUFBLEVBQ1QsQ0FBQztBQUdELGFBQVcsTUFBTTtBQUNmLFVBQU0sV0FBVyxrQkFBa0IsSUFBSSxFQUFFO0FBQ3pDLFlBQVEsSUFBSSx3Q0FBd0MsUUFBUTtBQUFBLEVBQzlELEdBQUcsR0FBRztBQUdOLE1BQUk7QUFDRixrQkFBYyxVQUFVO0FBQUEsRUFDMUIsU0FBUyxHQUFHO0FBQ1YsWUFBUSxJQUFJLHVDQUF1QztBQUFBLEVBQ3JEO0FBQ0Y7QUFHTyxJQUFNLENBQUMsV0FBVyxZQUFZLElBQUksWUFBd0IsSUFBSTtBQUM5RCxJQUFNLENBQUMsY0FBYyxlQUFlLElBQUksWUFBWSxLQUFLO0FBR3pELFNBQVMsb0JBQW9CLEdBQVE7QUFDMUMsVUFBUSxJQUFJLDBDQUEwQztBQUN0RCxpQkFBZSxDQUFDO0FBQ2xCO0FBTUEsSUFBSSxnQkFBZ0I7QUFDYixTQUFTLDJCQUEyQjtBQUN6QyxrQkFBZ0IsQ0FBQztBQUNqQixtQkFBaUIsYUFBYTtBQUM5QixNQUFJO0FBQUUsVUFBTSxvQ0FBb0MsYUFBYSxFQUFFO0FBQUEsRUFBRyxRQUFRO0FBQUEsRUFBQztBQUM3RTtBQUdPLFNBQVMsd0JBQXdCO0FBQ3RDLFVBQVEsSUFBSSxrREFBa0Q7QUFHOUQsV0FBUyxRQUFRLENBQUMsY0FBYztBQUM5QixpQkFBYSxTQUFTO0FBQUEsRUFDeEIsQ0FBQztBQUVELFdBQVMsTUFBTTtBQUNmLGlCQUFlO0FBQ2YsdUJBQXFCLENBQUMsQ0FBQztBQUV2QixVQUFRLElBQUksMkNBQTJDO0FBQ3pEO0FBR0EsSUFBSTtBQUNGLEVBQUMsV0FBbUIscUJBQXFCO0FBQzNDLFFBQVE7QUFFUjs7O0FDaEtPLFNBQVMsb0JBQW9CLGNBQXdFO0FBQzFHLFFBQU0sVUFBVSxjQUFjO0FBRTlCLE1BQUksV0FBVyxPQUFPLFlBQVksVUFBVTtBQUMxQyxXQUFPLEVBQUUsTUFBTSxTQUFTLE9BQU8sUUFBUTtBQUFBLEVBQ3pDO0FBRUEsTUFBSSxPQUFPLFlBQVksWUFBWSxRQUFRLFNBQVMsR0FBRztBQUVyRCxVQUFNLGFBQWEsUUFBUSxXQUFXLEdBQUcsS0FBSyxRQUFRLFdBQVcsSUFBSSxLQUFLLFFBQVEsU0FBUyxNQUFNLEtBQUssUUFBUSxTQUFTLE1BQU07QUFDN0gsUUFBSSxZQUFZO0FBQ2QsYUFBTyxFQUFFLE1BQU0sUUFBUSxPQUFPLFFBQVE7QUFBQSxJQUN4QztBQUNBLFdBQU8sRUFBRSxNQUFNLFlBQVksT0FBTyxRQUFRO0FBQUEsRUFDNUM7QUFFQSxRQUFNLGVBQWUsY0FBYztBQUNuQyxNQUFJLE9BQU8saUJBQWlCLFlBQVksYUFBYSxTQUFTLEdBQUc7QUFDL0QsV0FBTyxFQUFFLE1BQU0sWUFBWSxPQUFPLGFBQWE7QUFBQSxFQUNqRDtBQUVBLFFBQU0sVUFBVSxjQUFjO0FBQzlCLE1BQUksT0FBTyxZQUFZLFlBQVksUUFBUSxTQUFTLEdBQUc7QUFFckQsVUFBTSxZQUFZLFFBQVEsWUFBWSxFQUFFLFdBQVcsS0FBSyxHQUFHO0FBQzNELFdBQU8sRUFBRSxNQUFNLFlBQVksT0FBTyxVQUFVO0FBQUEsRUFDOUM7QUFFQSxTQUFPLEVBQUUsTUFBTSxZQUFZLE9BQU8scUJBQXFCO0FBQ3pEO0FBRU8sU0FBUyx1QkFBdUIsY0FBMkI7QUFDaEUsUUFBTSxVQUFVLGNBQWM7QUFDOUIsTUFBSSxPQUFPLFlBQVksWUFBWSxRQUFRLFNBQVMsRUFBRyxRQUFPO0FBRTlELFFBQU0sZUFBZSxjQUFjO0FBQ25DLE1BQUksT0FBTyxpQkFBaUIsWUFBWSxhQUFhLFNBQVMsRUFBRyxRQUFPO0FBRXhFLFNBQU87QUFDVDtBQUVPLFNBQVMsbUJBQW1CLFNBQTBCO0FBQzNELE1BQUksQ0FBQyxXQUFXLE9BQU8sTUFBTSxPQUFPLEVBQUcsUUFBTztBQUM5QyxRQUFNLE9BQU8sS0FBSyxJQUFJLEdBQUcsS0FBSyxJQUFJLElBQUksT0FBTztBQUM3QyxRQUFNLFVBQVUsS0FBSyxNQUFNLE9BQU8sR0FBSTtBQUN0QyxNQUFJLFVBQVUsR0FBSSxRQUFPLEdBQUcsT0FBTztBQUNuQyxRQUFNLFVBQVUsS0FBSyxNQUFNLFVBQVUsRUFBRTtBQUN2QyxNQUFJLFVBQVUsR0FBSSxRQUFPLEdBQUcsT0FBTztBQUNuQyxRQUFNLFFBQVEsS0FBSyxNQUFNLFVBQVUsRUFBRTtBQUNyQyxNQUFJLFFBQVEsR0FBSSxRQUFPLEdBQUcsS0FBSztBQUMvQixRQUFNLE9BQU8sS0FBSyxNQUFNLFFBQVEsRUFBRTtBQUNsQyxTQUFPLEdBQUcsSUFBSTtBQUNoQjs7O0FDOUNPLFNBQVMsbUJBQW1CO0FBQ2pDLFVBQVEsSUFBSSxtREFBbUQsS0FBSyxJQUFJLENBQUM7QUFFekUsU0FDRTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0MsTUFBSztBQUFBLE1BQ0wsT0FBTTtBQUFBLE1BQ04sYUFBYTtBQUFBLE1BQ2IsUUFBUUMsT0FBTSxhQUFhLE1BQU1BLE9BQU0sYUFBYTtBQUFBLE1BQ3BELFNBQVM7QUFBQSxNQUNULE9BQU9BLE9BQU0sTUFBTTtBQUFBLE1BQ25CLFdBQVc7QUFBQSxNQUNYLGFBQWE7QUFBQSxNQUNiLGFBQWFBLE9BQU0sWUFBWTtBQUFBLE1BRS9CO0FBQUEsUUFBQztBQUFBO0FBQUEsVUFDQyxPQUFNO0FBQUEsVUFDTixhQUFhQyxLQUFJLFlBQVk7QUFBQSxVQUM3QixTQUFTO0FBQUEsVUFDVCxjQUFjO0FBQUEsVUFDZCxlQUFlO0FBQUEsVUFHZiw4QkFBQyxPQUFJLE1BQU0sbUJBQ1IsV0FBQyxNQUFXO0FBQ1gsb0JBQVEsSUFBSSw4Q0FBOEMsR0FBRyxXQUFXLFlBQVk7QUFDcEYsbUJBQ0U7QUFBQSxjQUFDO0FBQUE7QUFBQSxnQkFDQyxPQUFNO0FBQUEsZ0JBQ04sY0FBYztBQUFBLGdCQUNkLGVBQWU7QUFBQSxnQkFFZiwrQkFBQyxTQUFJLE9BQU0sMEJBQXlCLFNBQVMsR0FDM0M7QUFBQSx1Q0FBQyxTQUFJLE9BQU0sdUJBQXNCLFNBQVMsR0FDdEM7QUFBQSwyQkFBTTtBQUNOLDRCQUFNLE9BQU8sb0JBQW9CLENBQUM7QUFDbEMsOEJBQVEsS0FBSyxNQUFNO0FBQUEsd0JBQ2pCLEtBQUs7QUFDSCxpQ0FBTyxvQkFBQyxXQUFNLE9BQU8sS0FBSyxPQUFPLFdBQVcsSUFBSSxPQUFNLFlBQVc7QUFBQSx3QkFDbkUsS0FBSztBQUNILGlDQUFPLG9CQUFDLFdBQU0sTUFBTSxLQUFLLE9BQU8sV0FBVyxJQUFJLE9BQU0sWUFBVztBQUFBLHdCQUNsRTtBQUNFLGlDQUFPLG9CQUFDLFdBQU0sVUFBVSxLQUFLLE9BQU8sV0FBVyxJQUFJLE9BQU0sWUFBVztBQUFBLHNCQUN4RTtBQUFBLG9CQUNGLEdBQUc7QUFBQSxvQkFDSCxvQkFBQyxXQUFNLE9BQU0sWUFBVyxPQUFPLHVCQUF1QixDQUFDLEdBQUc7QUFBQSxvQkFDMUQ7QUFBQSxzQkFBQztBQUFBO0FBQUEsd0JBQ0MsT0FBTTtBQUFBLHdCQUNOLFFBQVFBLEtBQUksTUFBTTtBQUFBLHdCQUNsQixXQUFXLE1BQU07QUFDZixrQ0FBUSxJQUFJLGdEQUFnRCxHQUFHLE9BQU87QUFDdEUsOENBQW9CLENBQUM7QUFBQSx3QkFDdkI7QUFBQSx3QkFFQSw4QkFBQyxXQUFNLFVBQVMseUJBQXdCLFdBQVcsSUFBSTtBQUFBO0FBQUEsb0JBQ3pEO0FBQUEscUJBQ0Y7QUFBQSxrQkFDQSxxQkFBQyxTQUFJLE9BQU0scUJBQW9CLFNBQVMsR0FDdEM7QUFBQSx3Q0FBQyxXQUFNLE9BQU0sV0FBVSxRQUFRLEdBQUssV0FBVyxHQUFHLE9BQU8sR0FBRyxXQUFXLElBQUk7QUFBQSxvQkFDM0Usb0JBQUMsV0FBTSxPQUFNLFFBQU8sUUFBUSxHQUFLLFdBQVcsR0FBRyxPQUFPLEdBQUcsUUFBUSxJQUFJO0FBQUEscUJBQ3ZFO0FBQUEsbUJBQ0Y7QUFBQTtBQUFBLFlBQ0Y7QUFBQSxVQUVKLEdBQ0Y7QUFBQTtBQUFBLE1BQ0Y7QUFBQTtBQUFBLEVBQ0Y7QUFFSjs7O0FDckVPLFNBQVMsMkJBQTJCO0FBQ3pDLFNBQ0U7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNDLE1BQUs7QUFBQSxNQUNMLE9BQU07QUFBQSxNQUNOLGFBQWE7QUFBQSxNQUNiLFFBQVFDLE9BQU0sYUFBYSxNQUFNQSxPQUFNLGFBQWEsUUFBUUEsT0FBTSxhQUFhO0FBQUEsTUFDL0UsYUFBYUEsT0FBTSxZQUFZO0FBQUEsTUFDL0IsU0FBUztBQUFBLE1BRVQsK0JBQUMsU0FBSSxhQUFhQyxLQUFJLFlBQVksVUFBVSxTQUFTLEdBQUcsY0FBYyxLQUFLLFNBQVMsTUFDbEY7QUFBQSw2QkFBQyxTQUFJLE9BQU0sd0JBQXVCLFNBQVMsR0FDekM7QUFBQSw4QkFBQyxXQUFNLE9BQU0sc0JBQXFCLE9BQU0saUJBQWdCO0FBQUEsVUFDeEQsb0JBQUMsV0FBTSxPQUFNLHNCQUFxQixPQUFPLGNBQWMsQ0FBQyxTQUFnQixHQUFHLEtBQUssTUFBTSxFQUFFLEdBQUc7QUFBQSxXQUM3RjtBQUFBLFFBQ0Esb0JBQUMsb0JBQWUsT0FBTSw0QkFBMkIsU0FBUyxNQUFNLFNBQVMsTUFDdkUsOEJBQUMsU0FBSSxPQUFNLHFCQUFvQixhQUFhQSxLQUFJLFlBQVksVUFBVSxTQUFTLEdBQzdFLDhCQUFDLE9BQUksTUFBTSxlQUNSLFdBQUMsTUFDQSxvQkFBQyxTQUFJLE9BQU0sMEJBQ1QsK0JBQUMsU0FBSSxPQUFNLDBCQUF5QixTQUFTLEdBQzNDO0FBQUEsK0JBQUMsU0FBSSxPQUFNLHVCQUFzQixTQUFTLEdBQ3RDO0FBQUEsbUJBQU07QUFDTixvQkFBTSxPQUFPLG9CQUFvQixDQUFDO0FBQ2xDLHNCQUFRLEtBQUssTUFBTTtBQUFBLGdCQUNqQixLQUFLO0FBQ0gseUJBQU8sb0JBQUMsV0FBTSxPQUFPLEtBQUssT0FBTyxXQUFXLElBQUksT0FBTSxZQUFXO0FBQUEsZ0JBQ25FLEtBQUs7QUFDSCx5QkFBTyxvQkFBQyxXQUFNLE1BQU0sS0FBSyxPQUFPLFdBQVcsSUFBSSxPQUFNLFlBQVc7QUFBQSxnQkFDbEU7QUFDRSx5QkFBTyxvQkFBQyxXQUFNLFVBQVUsS0FBSyxPQUFPLFdBQVcsSUFBSSxPQUFNLFlBQVc7QUFBQSxjQUN4RTtBQUFBLFlBQ0YsR0FBRztBQUFBLFlBQ0gsb0JBQUMsV0FBTSxPQUFNLFlBQVcsT0FBTyx1QkFBdUIsQ0FBQyxHQUFHO0FBQUEsWUFDMUQsb0JBQUMsV0FBTSxPQUFNLGFBQVksUUFBUSxHQUFLLE9BQU8sbUJBQW1CLEdBQUcsSUFBSSxHQUFHO0FBQUEsWUFDMUUsb0JBQUMsWUFBTyxRQUFRQSxLQUFJLE1BQU0sS0FBSyxXQUFXLE1BQU0sb0JBQW9CLENBQUMsR0FDbkUsOEJBQUMsV0FBTSxVQUFTLHlCQUF3QixHQUMxQztBQUFBLGFBQ0Y7QUFBQSxVQUNBLG9CQUFDLFNBQUksT0FBTSxxQkFBb0IsU0FBUyxHQUN0QywrQkFBQyxTQUFJLE9BQU0sZ0JBQWUsU0FBUyxHQUNqQztBQUFBLGdDQUFDLFdBQU0sT0FBTSxXQUFVLFFBQVEsR0FBSyxXQUFXLEdBQUcsT0FBTyxHQUFHLFdBQVcsSUFBSTtBQUFBLFlBQzNFLG9CQUFDLFdBQU0sT0FBTSxRQUFPLFFBQVEsR0FBSyxXQUFXLEdBQUcsT0FBTyxHQUFHLFFBQVEsSUFBSTtBQUFBLGFBQ3ZFLEdBQ0Y7QUFBQSxXQUNGLEdBQ0YsR0FFSixHQUNBLEdBQ0o7QUFBQSxTQUNGO0FBQUE7QUFBQSxFQUNGO0FBRUo7OztBQ3ZETyxTQUFTLG1CQUFtQixFQUFFLE9BQU8sTUFBTSxHQUFHLEdBQXVCO0FBQzFFLFNBQ0Usb0JBQUMsU0FBSSxPQUFPLEdBQUcsR0FBRyxJQUNoQiw4QkFBQyxZQUFPLE9BQU8sc0JBQXNCLFdBQVcsMEJBQzlDLCtCQUFDLFNBQUksU0FBUyxHQUFHLFFBQVFDLEtBQUksTUFBTSxRQUFRLFFBQVFBLEtBQUksTUFBTSxRQUMzRDtBQUFBO0FBQUEsTUFBQztBQUFBO0FBQUEsUUFDQyxPQUFNO0FBQUEsUUFDTixVQUFTO0FBQUEsUUFDVCxXQUFXO0FBQUE7QUFBQSxJQUNiO0FBQUEsSUFDQSxvQkFBQyxRQUFLLE9BQU8sZUFDVixXQUFDLE9BQWMsQ0FBQyxNQUNmLEtBQUssU0FBUyxJQUNaLG9CQUFDLFNBQUksT0FBTSxTQUNULDhCQUFDLFdBQU0sT0FBTyxHQUFHLEtBQUssTUFBTSxJQUFJLEdBQ2xDLElBQ0UsTUFFUjtBQUFBLEtBQ0YsR0FDRixHQUNGO0FBRUo7OztBQ2RlLFNBQVIsSUFBcUIsWUFBeUI7QUFDbkQsUUFBTSxFQUFFLEtBQUssTUFBTSxPQUFPLE9BQU8sSUFBSUMsT0FBTTtBQUUzQyxTQUNFO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDQyxTQUFPO0FBQUEsTUFDUCxNQUFLO0FBQUEsTUFDTCxPQUFNO0FBQUEsTUFDTjtBQUFBLE1BQ0EsYUFBYUEsT0FBTSxZQUFZO0FBQUEsTUFDL0IsUUFBUSxTQUFTLE9BQU87QUFBQSxNQUN4QixhQUFhO0FBQUEsTUFFYiwrQkFBQyxlQUFVLFNBQVEsYUFDakI7QUFBQSw2QkFBQyxTQUFJLE9BQU0sU0FBUSxTQUFTLEdBQzFCO0FBQUEsOEJBQUMsY0FBVyxPQUFNLGVBQWM7QUFBQSxVQUNoQyxvQkFBQyxjQUFXLE9BQU0sZUFBYztBQUFBLFdBQ2xDO0FBQUEsUUFDQSxvQkFBQyxTQUFJLE9BQU0sVUFBUyxTQUFTLEdBQzNCLDhCQUFDLGVBQVksT0FBTSxlQUFjLEdBQ25DO0FBQUEsUUFDQSxxQkFBQyxTQUFJLE9BQU0sT0FBTSxTQUFTLEdBQUcsUUFBUUMsS0FBSSxNQUFNLEtBQzdDO0FBQUEsOEJBQUMsc0JBQW1CLE9BQU0sZUFBYztBQUFBLFVBQ3hDLG9CQUFDLGtCQUFlLE9BQU0sZUFBYztBQUFBLFVBQ3BDLG9CQUFDLFdBQVEsT0FBTSxlQUFjO0FBQUEsVUFDN0Isb0JBQUMsY0FBVyxPQUFNLGVBQWM7QUFBQSxVQUNoQyxvQkFBQyxlQUFZLE9BQU0sZUFBYztBQUFBLFVBQ2pDLG9CQUFDLG1CQUFnQixPQUFNLGVBQWM7QUFBQSxXQUN2QztBQUFBLFNBQ0Y7QUFBQTtBQUFBLEVBQ0Y7QUFFSjs7O0FDNUNBLE9BQU9DLFlBQVc7QUFDbEIsT0FBT0MsZUFBYztBQUlkLFNBQVMsV0FBVyxFQUFFLE9BQU8sTUFBTSxHQUFHLElBQXdCLENBQUMsR0FBRztBQUN2RSxTQUNFLG9CQUFDLFFBQUssT0FBTyxTQUNWLFdBQUMsU0FBcUM7QUFDckMsVUFBTSxVQUNILFFBQVEsQ0FBQyxHQUFHO0FBQUEsTUFDWCxDQUFDLE1BQU0sRUFBRSxtQkFBbUJDLE9BQU0sZUFBZTtBQUFBLElBQ25ELEtBQUssT0FBTyxDQUFDO0FBQ2YsUUFBSSxDQUFDLE9BQVEsUUFBTyxvQkFBQyxTQUFJLE9BQU8sU0FBUyxHQUFHLElBQUksU0FBUyxPQUFPO0FBRWhFLFVBQU0sU0FBUyxjQUFjLFFBQVEsZ0JBQWdCO0FBQ3JELFVBQU0sVUFBVSxjQUFjLFFBQVEsZUFBZTtBQUNyRCxVQUFNLFVBQVUsY0FBYyxRQUFRLFdBQVc7QUFDakQsVUFBTSxhQUFhLGNBQWMsUUFBUSxZQUFZO0FBQ3JELFVBQU0sUUFBUSxjQUFjLFFBQVEsT0FBTztBQUMzQyxVQUFNLFNBQVMsY0FBYyxRQUFRLFFBQVE7QUFDN0MsVUFBTSxRQUFRLGNBQWMsUUFBUSxPQUFPO0FBQzNDLFVBQU0sUUFBUSxjQUFjLFFBQVEsVUFBVTtBQUM5QyxVQUFNLFNBQVMsY0FBYyxRQUFRLFFBQVE7QUFDN0MsVUFBTSxXQUFXLGNBQWMsUUFBUSxVQUFVO0FBRWpELFdBQ0UscUJBQUMsU0FBSSxPQUFPLGVBQWUsR0FBRyxJQUFJLFNBQVMsR0FBRyxXQUFXLEdBQUcsY0FBYyxLQUN4RTtBQUFBLDBCQUFDLFFBQUssT0FBTyxPQUNWLFdBQUMsTUFDQTtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0MsUUFBUUMsS0FBSSxNQUFNO0FBQUEsVUFDbEIsUUFBUUEsS0FBSSxNQUFNO0FBQUEsVUFDbEIsY0FBYztBQUFBLFVBQ2QsZUFBZTtBQUFBLFVBRWQsY0FDQztBQUFBLFlBQUM7QUFBQTtBQUFBLGNBQ0MsTUFBTSxFQUFFLFdBQVcsU0FBUyxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUk7QUFBQSxjQUM3QyxRQUFRQSxLQUFJLE1BQU07QUFBQSxjQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxjQUNsQixTQUFTO0FBQUEsY0FDVCxTQUFTO0FBQUE7QUFBQSxVQUNYLElBRUEsb0JBQUMsV0FBTSxVQUFVLE9BQU8sT0FBTyxXQUFXLElBQUk7QUFBQTtBQUFBLE1BRWxELEdBRUo7QUFBQSxNQUVBO0FBQUEsUUFBQztBQUFBO0FBQUEsVUFDQyxTQUFTO0FBQUEsVUFDVCxhQUFhQSxLQUFJLFlBQVk7QUFBQSxVQUM3QixRQUFRQSxLQUFJLE1BQU07QUFBQSxVQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxVQUVuQjtBQUFBLGlDQUFDLFNBQUksU0FBUyxHQUFHLGFBQWFBLEtBQUksWUFBWSxVQUM5QztBQUFBO0FBQUEsZ0JBQUM7QUFBQTtBQUFBLGtCQUNFLE9BQU07QUFBQSxrQkFDTixXQUFXLE1BQU07QUFDZix3QkFBSTtBQUNGLDRCQUFNQyxRQUFPQyxVQUFTLFlBQVk7QUFDbEMsc0JBQUFELE1BQUssU0FBUyxlQUFlLFNBQVMsT0FBTyxLQUFLLEVBQUU7QUFBQSxvQkFDdEQsU0FBUyxHQUFHO0FBQ1YsNEJBQU0sZ0JBQWdCLE9BQU8sQ0FBQyxDQUFDO0FBQUEsb0JBQ2pDO0FBQUEsa0JBQ0Y7QUFBQSxrQkFFQTtBQUFBLG9CQUFDO0FBQUE7QUFBQSxzQkFDQyxPQUFNO0FBQUEsc0JBQ04sUUFBUTtBQUFBLHNCQUNSLFdBQVc7QUFBQSxzQkFDWCxlQUFlO0FBQUEsc0JBQ2YsT0FBTztBQUFBO0FBQUEsa0JBQ1Q7QUFBQTtBQUFBLGNBQ0Y7QUFBQSxjQUNELG9CQUFDLFFBQUssT0FBTyxPQUNYLFdBQUMsTUFDQTtBQUFBLGdCQUFDO0FBQUE7QUFBQSxrQkFDQyxPQUFNO0FBQUEsa0JBQ04sUUFBUTtBQUFBLGtCQUNSLFdBQVc7QUFBQSxrQkFDWCxlQUFlO0FBQUEsa0JBQ2YsT0FBTyxLQUFLO0FBQUE7QUFBQSxjQUNkLEdBRUg7QUFBQSxlQUNBO0FBQUEsWUFFQyxxQkFBQyxTQUFJLFFBQVFELEtBQUksTUFBTSxPQUFPLE9BQU0seUJBQXdCLFNBQVMsT0FDbkU7QUFBQSxrQ0FBQyxZQUFPLFdBQVcsU0FBUyxXQUFXLE1BQU0sT0FBTyxTQUFTLEdBQzNELDhCQUFDLFdBQU0sVUFBUyxnQ0FBK0IsR0FDakQ7QUFBQSxjQUNBO0FBQUEsZ0JBQUM7QUFBQTtBQUFBLGtCQUNDLFdBQVc7QUFBQSxrQkFDWCxXQUFXLE1BQU0sT0FBTyxXQUFXO0FBQUEsa0JBRW5DLDhCQUFDLFFBQUssT0FBTyxRQUNWLFdBQUMsTUFDQTtBQUFBLG9CQUFDO0FBQUE7QUFBQSxzQkFDQyxVQUNFLE1BQU1ELE9BQU0sZUFBZSxVQUN2QixrQ0FDQTtBQUFBO0FBQUEsa0JBRVIsR0FFSjtBQUFBO0FBQUEsY0FDRjtBQUFBLGNBQ0Esb0JBQUMsWUFBTyxXQUFXLFNBQVMsV0FBVyxNQUFNLE9BQU8sS0FBSyxHQUN2RCw4QkFBQyxXQUFNLFVBQVMsK0JBQThCLEdBQ2hEO0FBQUEsZUFDRjtBQUFBO0FBQUE7QUFBQSxNQUNGO0FBQUEsT0FDRjtBQUFBLEVBRUosR0FDRjtBQUVKOzs7QUNwSE8sU0FBUyxhQUFhO0FBQzNCLFNBQ0U7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNDLE1BQUs7QUFBQSxNQUNMLE9BQU07QUFBQSxNQUNOLGFBQWE7QUFBQSxNQUNiLFNBQVM7QUFBQSxNQUNULFFBQVFJLE9BQU0sYUFBYSxTQUFTQSxPQUFNLGFBQWE7QUFBQSxNQUV2RDtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0MsZ0JBQWdCQyxLQUFJLHVCQUF1QjtBQUFBLFVBQzNDLGFBQWE7QUFBQSxVQUViLDhCQUFDLFNBQUksT0FBTSwwQkFDVCw4QkFBQyxjQUFXLEdBQ2Q7QUFBQTtBQUFBLE1BQ0Y7QUFBQTtBQUFBLEVBQ0Y7QUFFSjs7O0FDbEJBLFlBQUksTUFBTTtBQUFBLEVBQ1IsS0FBSztBQUFBLEVBQ0wsT0FBTztBQUNMLGdCQUFJLGFBQWEsRUFBRSxJQUFJLEdBQUc7QUFDMUIsZUFBVztBQUNYLHFCQUFpQjtBQUNqQiw2QkFBeUI7QUFBQSxFQUMzQjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbIm1vZCIsICJwYXRjaCIsICJCbHVldG9vdGgiLCAiSHlwcmxhbmQiLCAiTXByaXMiLCAiTm90aWZkIiwgIlRyYXkiLCAiY2xpZW50IiwgIkFzdGFsIiwgIkd0ayIsICJHT2JqZWN0IiwgIkdPYmplY3QiLCAiR0xpYiIsICJzbmFrZWlmeSIsICJzbmFrZWlmeSIsICJHT2JqZWN0IiwgInNldCIsICJHT2JqZWN0IiwgImtleSIsICJvYmplY3QiLCAiR09iamVjdCIsICJtb2QiLCAiR09iamVjdCIsICJyZW1vdmUiLCAiR3RrIiwgIkFzdGFsIiwgIkd0ayIsICJHaW8iLCAiR09iamVjdCIsICJHdGsiLCAiR2lvIiwgImNzcyIsICJHT2JqZWN0IiwgImluZGV4IiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiSHlwcmxhbmQiLCAiaHlwciIsICJIeXBybGFuZCIsICJIeXBybGFuZCIsICJoeXByIiwgIkh5cHJsYW5kIiwgImNsaWVudCIsICJHTGliIiwgIkh5cHJsYW5kIiwgImh5cHIiLCAicGxheWVycyIsICJoeXByIiwgIkd0ayIsICJBc3RhbElPIiwgIkFzdGFsSU8iLCAiaW50ZXJ2YWwiLCAic2V0IiwgIkdMaWIiLCAiR2lvIiwgIkd0ayIsICJHaW8iLCAiR0xpYiIsICJHdGsiLCAiR3RrIiwgIkdMaWIiLCAiR0xpYiIsICJBc3RhbCIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiTXByaXMiLCAiSHlwcmxhbmQiLCAiTXByaXMiLCAiR3RrIiwgImh5cHIiLCAiSHlwcmxhbmQiLCAiQXN0YWwiLCAiR3RrIl0KfQo=

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@